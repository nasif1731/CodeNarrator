{
  "sym2id": {
    "<UNK>": 0,
    "<PAD>": 1,
    "<BOS>": 2,
    "<EOS>": 3,
    "!": 4,
    "\"": 5,
    "\"\"": 6,
    "\"\"\"": 7,
    "\"\"\"</w>": 8,
    "\"\"\"get</w>": 9,
    "\"\"\"loads</w>": 10,
    "\"\"\"read</w>": 11,
    "\"\"\"return</w>": 12,
    "\"\"\"returns</w>": 13,
    "\"\"\"saves</w>": 14,
    "\"\"\"set</w>": 15,
    "\"\"\"specifies</w>": 16,
    "\"'</w>": 17,
    "\"'spark.sql.execution.arrow.": 18,
    "\")": 19,
    "\")).collect()</w>": 20,
    "\"))</w>": 21,
    "\"),</w>": 22,
    "\").": 23,
    "\").ali": 24,
    "\").alias(\"": 25,
    "\").collect()</w>": 26,
    "\")</w>": 27,
    "\",": 28,
    "\",\"": 29,
    "\",\"type": 30,
    "\",\"type\":": 31,
    "\",</w>": 32,
    "\"-</w>": 33,
    "\".": 34,
    "\".</w>": 35,
    "\".format(": 36,
    "\".format(</w>": 37,
    "\".join(": 38,
    "\".join([": 39,
    "\".join([str(x)</w>": 40,
    "\".join(map(lambda</w>": 41,
    "\"0\"</w>": 42,
    "\"2.": 43,
    "\"5": 44,
    "\":": 45,
    "\":</w>": 46,
    "\"</w>": 47,
    "\"[": 48,
    "\"[spark-": 49,
    "\"]": 50,
    "\"]),</w>": 51,
    "\"])</w>": 52,
    "\"],</w>": 53,
    "\"]:</w>": 54,
    "\"]</w>": 55,
    "\"_": 56,
    "\"__": 57,
    "\"a": 58,
    "\"a\"),</w>": 59,
    "\"a\",</w>": 60,
    "\"b": 61,
    "\"b\"),</w>": 62,
    "\"b\",</w>": 63,
    "\"b\":</w>": 64,
    "\"b\"],</w>": 65,
    "\"bar": 66,
    "\"bar\":</w>": 67,
    "\"c": 68,
    "\"c\"": 69,
    "\"c2\"])</w>": 70,
    "\"d": 71,
    "\"display.": 72,
    "\"display.font.": 73,
    "\"dist": 74,
    "\"distcol": 75,
    "\"distcol\"</w>": 76,
    "\"dull\",</w>": 77,
    "\"e": 78,
    "\"f": 79,
    "\"foo": 80,
    "\"foo\",</w>": 81,
    "\"gini": 82,
    "\"got</w>": 83,
    "\"in</w>": 84,
    "\"index": 85,
    "\"invalid</w>": 86,
    "\"is</w>": 87,
    "\"is_": 88,
    "\"j": 89,
    "\"l": 90,
    "\"m": 91,
    "\"name": 92,
    "\"not</w>": 93,
    "\"on</w>": 94,
    "\"one\",</w>": 95,
    "\"onethi": 96,
    "\"org.apache.": 97,
    "\"org.apache.hadoop.io.": 98,
    "\"orien": 99,
    "\"orientation\"</w>": 100,
    "\"r\",</w>": 101,
    "\"random": 102,
    "\"right": 103,
    "\"row": 104,
    "\"shin": 105,
    "\"shiny\",</w>": 106,
    "\"sqr": 107,
    "\"string": 108,
    "\"t": 109,
    "\"test.": 110,
    "\"test.org.apache.": 111,
    "\"test.org.apache.spark.sql.javastringlength": 112,
    "\"the</w>": 113,
    "\"two": 114,
    "\"two\",</w>": 115,
    "\"type": 116,
    "\"type\":</w>": 117,
    "\"use</w>": 118,
    "\"v": 119,
    "\"v\"))</w>": 120,
    "\"value": 121,
    "\"value\",</w>": 122,
    "\"value\":</w>": 123,
    "\"w": 124,
    "\"w\")</w>": 125,
    "\"x": 126,
    "\"x.": 127,
    "\"x.y.": 128,
    "\"zero</w>": 129,
    "\"{": 130,
    "\"{0": 131,
    "\"{0}": 132,
    "\"{0}\"": 133,
    "\"{0}\"'.format(": 134,
    "\"}": 135,
    "\"}''": 136,
    "#": 137,
    "$": 138,
    "%": 139,
    "&": 140,
    "'": 141,
    "'\")</w>": 142,
    "'\"</w>": 143,
    "''": 144,
    "'''{\"f1\":</w>": 145,
    "''.join(": 146,
    "''.join(sorted(input(glob(": 147,
    "''</w>": 148,
    "'(</w>": 149,
    "')": 150,
    "')\").collect()</w>": 151,
    "')).collect()</w>": 152,
    "'))</w>": 153,
    "'),</w>": 154,
    "').": 155,
    "').parquet(os.path.join(tempfile.mkdtemp(),</w>": 156,
    "').sum()</w>": 157,
    "'):</w>": 158,
    "')</w>": 159,
    "')])</w>": 160,
    "')],</w>": 161,
    "')]</w>": 162,
    "',": 163,
    "','</w>": 164,
    "',)],</w>": 165,
    "',</w>": 166,
    "'-": 167,
    "'.": 168,
    "'.\")</w>": 169,
    "'.'</w>": 170,
    "'.</w>": 171,
    "'.format(": 172,
    "'1": 173,
    "'1'])</w>": 174,
    "'2000": 175,
    "'201": 176,
    "'2015": 177,
    "'2015-01-01</w>": 178,
    "'2017": 179,
    "'2017-06": 180,
    "'2018": 181,
    "'2018-01-03": 182,
    "'2018-01-03',</w>": 183,
    "'2018-01-05": 184,
    "'2018-01-05',</w>": 185,
    "'2018-01-08": 186,
    "'2018-01-08'],</w>": 187,
    "'2018-04": 188,
    "'2018-04-": 189,
    "'2018-04-30',</w>": 190,
    "'2018-10-28</w>": 191,
    "'3</w>": 192,
    "'5": 193,
    "'5h": 194,
    "':": 195,
    "':</w>": 196,
    "'</w>": 197,
    "'[": 198,
    "'[spark-": 199,
    "']": 200,
    "']))</w>": 201,
    "']).": 202,
    "'])</w>": 203,
    "'],</w>": 204,
    "']</w>": 205,
    "']})</w>": 206,
    "'_": 207,
    "'_'</w>": 208,
    "'__": 209,
    "'a": 210,
    "'a'),</w>": 211,
    "'a'</w>": 212,
    "'a'])</w>": 213,
    "'a'],</w>": 214,
    "'age": 215,
    "'age':</w>": 216,
    "'age'])</w>": 217,
    "'alice": 218,
    "'alice',</w>": 219,
    "'all": 220,
    "'all',</w>": 221,
    "'all'</w>": 222,
    "'all'},</w>": 223,
    "'any": 224,
    "'any'</w>": 225,
    "'ap": 226,
    "'append": 227,
    "'append'},</w>": 228,
    "'auto": 229,
    "'auto',</w>": 230,
    "'auto'</w>": 231,
    "'b": 232,
    "'b'),</w>": 233,
    "'b',</w>": 234,
    "'b':</w>": 235,
    "'b'])</w>": 236,
    "'b'],</w>": 237,
    "'b']</w>": 238,
    "'b(quarterly)": 239,
    "'bfill',</w>": 240,
    "'bi": 241,
    "'bias')</w>": 242,
    "'bigint": 243,
    "'bigint'),</w>": 244,
    "'bir": 245,
    "'birth": 246,
    "'blo": 247,
    "'block": 248,
    "'block'</w>": 249,
    "'blosc": 250,
    "'blosc:": 251,
    "'bz2',</w>": 252,
    "'c": 253,
    "'c'),</w>": 254,
    "'c')],</w>": 255,
    "'c',</w>": 256,
    "'c':</w>": 257,
    "'c'</w>": 258,
    "'c'])</w>": 259,
    "'c'],</w>": 260,
    "'categor": 261,
    "'category": 262,
    "'category'</w>": 263,
    "'co": 264,
    "'coer": 265,
    "'coerce": 266,
    "'coerce',</w>": 267,
    "'coerce'},</w>": 268,
    "'col": 269,
    "'col2':</w>": 270,
    "'columns": 271,
    "'columns'},</w>": 272,
    "'coyo": 273,
    "'coyote": 274,
    "'coyote',</w>": 275,
    "'d": 276,
    "'d'</w>": 277,
    "'d'])</w>": 278,
    "'data": 279,
    "'data'))</w>": 280,
    "'datetime": 281,
    "'datetime':</w>": 282,
    "'datetime'</w>": 283,
    "'dog": 284,
    "'dog'],</w>": 285,
    "'dtype": 286,
    "'dtype'):</w>": 287,
    "'e": 288,
    "'e',</w>": 289,
    "'e'],</w>": 290,
    "'eleph": 291,
    "'elephan": 292,
    "'elephant',</w>": 293,
    "'f": 294,
    "'fail": 295,
    "'fail'</w>": 296,
    "'fastparquet": 297,
    "'fastparquet'},</w>": 298,
    "'fix": 299,
    "'fixed": 300,
    "'foo": 301,
    "'foo',</w>": 302,
    "'g": 303,
    "'gd": 304,
    "'gdp": 305,
    "'gi": 306,
    "'giraffe": 307,
    "'giraffe',</w>": 308,
    "'gzip',</w>": 309,
    "'h": 310,
    "'h',</w>": 311,
    "'hor": 312,
    "'horse": 313,
    "'horse']</w>": 314,
    "'hr": 315,
    "'i',</w>": 316,
    "'id'</w>": 317,
    "'ignore": 318,
    "'ignore',</w>": 319,
    "'ignore':</w>": 320,
    "'ignore'</w>": 321,
    "'ignore'},</w>": 322,
    "'index": 323,
    "'index',</w>": 324,
    "'index'.</w>": 325,
    "'index':</w>": 326,
    "'index'</w>": 327,
    "'infer": 328,
    "'infer'</w>": 329,
    "'inner": 330,
    "'inner').": 331,
    "'inplace": 332,
    "'inplace')</w>": 333,
    "'int": 334,
    "'int'),</w>": 335,
    "'int')]</w>": 336,
    "'integer": 337,
    "'integer'},</w>": 338,
    "'iso": 339,
    "'items'</w>": 340,
    "'j": 341,
    "'k": 342,
    "'kend": 343,
    "'kendall',</w>": 344,
    "'key": 345,
    "'key'</w>": 346,
    "'l": 347,
    "'l'</w>": 348,
    "'last": 349,
    "'left": 350,
    "'left':</w>": 351,
    "'left'</w>": 352,
    "'left'},</w>": 353,
    "'life": 354,
    "'lifespan": 355,
    "'lifespan':</w>": 356,
    "'ll</w>": 357,
    "'loc": 358,
    "'loc',</w>": 359,
    "'m": 360,
    "'m'</w>": 361,
    "'major": 362,
    "'major',</w>": 363,
    "'medi": 364,
    "'medium": 365,
    "'method": 366,
    "'method'</w>": 367,
    "'micro": 368,
    "'microsecond": 369,
    "'min": 370,
    "'min',</w>": 371,
    "'minor": 372,
    "'minor'}</w>": 373,
    "'minute": 374,
    "'minute',</w>": 375,
    "'multi": 376,
    "'multi':</w>": 377,
    "'n": 378,
    "'name": 379,
    "'name'</w>": 380,
    "'name'])</w>": 381,
    "'names'</w>": 382,
    "'nan": 383,
    "'nan'))</w>": 384,
    "'nearest": 385,
    "'nearest'}</w>": 386,
    "'ns'</w>": 387,
    "'num_wing": 388,
    "'num_wings':</w>": 389,
    "'o": 390,
    "'o'),</w>": 391,
    "'outer": 392,
    "'outer').": 393,
    "'outer',</w>": 394,
    "'p": 395,
    "'pad": 396,
    "'pad'</w>": 397,
    "'pandas.core.": 398,
    "'pandas.core.frame.": 399,
    "'pandas.core.frame.dataframe": 400,
    "'pandas.core.frame.dataframe'</w>": 401,
    "'parquet": 402,
    "'parquet'.</w>": 403,
    "'parro": 404,
    "'parrot": 405,
    "'parrot',</w>": 406,
    "'parrot'],</w>": 407,
    "'pig": 408,
    "'pig',</w>": 409,
    "'population": 410,
    "'population':</w>": 411,
    "'py": 412,
    "'pyarrow": 413,
    "'pyarrow',</w>": 414,
    "'pyarrow'</w>": 415,
    "'python": 416,
    "'python'],</w>": 417,
    "'r": 418,
    "'rab": 419,
    "'rabbit',</w>": 420,
    "'raise": 421,
    "'raise',</w>": 422,
    "'raise':</w>": 423,
    "'raise'</w>": 424,
    "'raise'},</w>": 425,
    "'re</w>": 426,
    "'record": 427,
    "'records'</w>": 428,
    "'replace": 429,
    "'replace',</w>": 430,
    "'right": 431,
    "'right'},</w>": 432,
    "'row": 433,
    "'row2':</w>": 434,
    "'s": 435,
    "'s</w>": 436,
    "'seto": 437,
    "'setos": 438,
    "'spark.sql.": 439,
    "'spark.sql.execution.arrow.": 440,
    "'string": 441,
    "'string'),</w>": 442,
    "'string')]</w>": 443,
    "'t": 444,
    "'t</w>": 445,
    "'table": 446,
    "'table'}</w>": 447,
    "'timedelta": 448,
    "'timedelta'</w>": 449,
    "'top": 450,
    "'top',</w>": 451,
    "'type": 452,
    "'type':</w>": 453,
    "'us',</w>": 454,
    "'usecols'</w>": 455,
    "'user</w>": 456,
    "'utc": 457,
    "'utc'</w>": 458,
    "'utf-16": 459,
    "'utf-8": 460,
    "'utf8": 461,
    "'utf8'</w>": 462,
    "'val": 463,
    "'value": 464,
    "'value':</w>": 465,
    "'value'</w>": 466,
    "'value'}</w>": 467,
    "'values',</w>": 468,
    "'values'</w>": 469,
    "'virginica',</w>": 470,
    "'vol": 471,
    "'w": 472,
    "'w',</w>": 473,
    "'weight": 474,
    "'weight')</w>": 475,
    "'x": 476,
    "'xz',</w>": 477,
    "'y": 478,
    "'y',</w>": 479,
    "'year": 480,
    "'year'])</w>": 481,
    "'yellow": 482,
    "'z": 483,
    "'z']})</w>": 484,
    "'zip": 485,
    "'zip',</w>": 486,
    "'{": 487,
    "'{\"f1\":</w>": 488,
    "'}": 489,
    "'},</w>": 490,
    "'}</w>": 491,
    "(": 492,
    "(\"": 493,
    "(\".</w>": 494,
    "(\"a": 495,
    "(\"a\",</w>": 496,
    "(\"a:</w>": 497,
    "(\"b": 498,
    "(\"b\",</w>": 499,
    "(\"id": 500,
    "(\"id\",</w>": 501,
    "(\"key\",</w>": 502,
    "(\"select</w>": 503,
    "('": 504,
    "('2',</w>": 505,
    "('</w>": 506,
    "('a": 507,
    "('test": 508,
    "('test')\").collect()</w>": 509,
    "((": 510,
    "((\"</w>": 511,
    "()": 512,
    "())</w>": 513,
    "(),</w>": 514,
    "().": 515,
    "():</w>": 516,
    "()</w>": 517,
    "(-": 518,
    "(.": 519,
    "(0)</w>": 520,
    "(0,</w>": 521,
    "(0.0,</w>": 522,
    "(0</w>": 523,
    "(1)</w>": 524,
    "(1,</w>": 525,
    "(1.0,</w>": 526,
    "(100,</w>": 527,
    "(196": 528,
    "(1960,</w>": 529,
    "(1961,</w>": 530,
    "(1962,</w>": 531,
    "(1</w>": 532,
    "(2,</w>": 533,
    "(2.0,</w>": 534,
    "(3,</w>": 535,
    "(3.0,</w>": 536,
    "(4,</w>": 537,
    "(5.0,</w>": 538,
    "(6": 539,
    "(6,": 540,
    "(:class:</w>": 541,
    "(</w>": 542,
    "([": 543,
    "([\"a\",</w>": 544,
    "(['a',</w>": 545,
    "([],)],</w>": 546,
    "(_": 547,
    "(a)</w>": 548,
    "(a,</w>": 549,
    "(a-hdfs-path</w>": 550,
    "(a</w>": 551,
    "(abc": 552,
    "(abcindexclass,</w>": 553,
    "(abcseries,</w>": 554,
    "(age</w>": 555,
    "(and</w>": 556,
    "(arg,</w>": 557,
    "(as</w>": 558,
    "(at):</w>": 559,
    "(attribute": 560,
    "(available</w>": 561,
    "(axis=": 562,
    "(axis=1):</w>": 563,
    "(but</w>": 564,
    "(byteorder</w>": 565,
    "(callable,</w>": 566,
    "(can</w>": 567,
    "(category)</w>": 568,
    "(cls,</w>": 569,
    "(col": 570,
    "(collections.": 571,
    "(collections.ordereddict</w>": 572,
    "(column</w>": 573,
    "(count</w>": 574,
    "(cp</w>": 575,
    "(csv)</w>": 576,
    "(c{": 577,
    "(d,</w>": 578,
    "(d.": 579,
    "(data,</w>": 580,
    "(defaul": 581,
    "(default": 582,
    "(default),</w>": 583,
    "(default).</w>": 584,
    "(default:</w>": 585,
    "(del": 586,
    "(depending</w>": 587,
    "(df,</w>": 588,
    "(df.": 589,
    "(dict,</w>": 590,
    "(do</w>": 591,
    "(e": 592,
    "(e.g.,</w>": 593,
    "(e.g.</w>": 594,
    "(exclusi": 595,
    "(exclusive)</w>": 596,
    "(f": 597,
    "(feature</w>": 598,
    "(float,</w>": 599,
    "(for</w>": 600,
    "(gh": 601,
    "(gh</w>": 602,
    "(hierarchi": 603,
    "(hierarchical": 604,
    "(hierarchical),</w>": 605,
    "(i": 606,
    "(i,</w>": 607,
    "(i.": 608,
    "(i.e.,</w>": 609,
    "(if</w>": 610,
    "(in</w>": 611,
    "(including</w>": 612,
    "(inclusi": 613,
    "(inclusive": 614,
    "(index)</w>": 615,
    "(index,</w>": 616,
    "(index=": 617,
    "(index=index_": 618,
    "(index=index_mapper,</w>": 619,
    "(int,</w>": 620,
    "(is_": 621,
    "(j": 622,
    "(k": 623,
    "(kcl)</w>": 624,
    "(key)</w>": 625,
    "(key,</w>": 626,
    "(label": 627,
    "(label,</w>": 628,
    "(lambda</w>": 629,
    "(left,</w>": 630,
    "(len(": 631,
    "(like</w>": 632,
    "(list,</w>": 633,
    "(m</w>": 634,
    "(mapper,</w>": 635,
    "(mask,</w>": 636,
    "(min_": 637,
    "(min_spacing,</w>": 638,
    "(most</w>": 639,
    "(msg": 640,
    "(msg)</w>": 641,
    "(msg.format(": 642,
    "(n": 643,
    "(name": 644,
    "(name)s</w>": 645,
    "(new_": 646,
    "(not</w>": 647,
    "(np.": 648,
    "(obj,</w>": 649,
    "(of</w>": 650,
    "(one</w>": 651,
    "(only</w>": 652,
    "(optional": 653,
    "(optional)</w>": 654,
    "(or</w>": 655,
    "(other)</w>": 656,
    "(p": 657,
    "(partition_": 658,
    "(partition_id,</w>": 659,
    "(pd_table,</w>": 660,
    "(pickle": 661,
    "(quarter": 662,
    "(quarterly": 663,
    "(quarterly)": 664,
    "(r": 665,
    "(result,</w>": 666,
    "(s):</w>": 667,
    "(s)</w>": 668,
    "(s,</w>": 669,
    "(same</w>": 670,
    "(sc.parallelize(": 671,
    "(see</w>": 672,
    "(see_also": 673,
    "(see_also)s</w>": 674,
    "(self):</w>": 675,
    "(self)</w>": 676,
    "(self,</w>": 677,
    "(self.": 678,
    "(self.dtype,</w>": 679,
    "(serialize": 680,
    "(serialize)</w>": 681,
    "(series,</w>": 682,
    "(sock": 683,
    "(str,</w>": 684,
    "(string)</w>": 685,
    "(test)=4)]</w>": 686,
    "(that</w>": 687,
    "(the</w>": 688,
    "(this</w>": 689,
    "(top,</w>": 690,
    "(total</w>": 691,
    "(tuple,</w>": 692,
    "(typeerror,</w>": 693,
    "(v": 694,
    "(value": 695,
    "(values=": 696,
    "(where</w>": 697,
    "(which</w>": 698,
    "(width,</w>": 699,
    "(with</w>": 700,
    "(without</w>": 701,
    "(x": 702,
    "(x):</w>": 703,
    "(x,</w>": 704,
    "({": 705,
    ")": 706,
    ")\"</w>": 707,
    ")',</w>": 708,
    ")'</w>": 709,
    ")(": 710,
    "))": 711,
    ")))</w>": 712,
    ")),</w>": 713,
    ")).": 714,
    ")):</w>": 715,
    "))</w>": 716,
    "))]</w>": 717,
    "),": 718,
    "),</w>": 719,
    ").": 720,
    ").</w>": 721,
    ").__": 722,
    ").__finalize__(self)</w>": 723,
    ").__name__))</w>": 724,
    ").ali": 725,
    ").alias('": 726,
    ").collec": 727,
    ").collect()</w>": 728,
    ").replace('nan": 729,
    ").show()</w>": 730,
    ").sort": 731,
    ").strip()</w>": 732,
    "):</w>": 733,
    ");</w>": 734,
    ")</w>": 735,
    ")=": 736,
    ")[0]</w>": 737,
    ")[:": 738,
    ")[:n": 739,
    ")[:n]</w>": 740,
    ")])),</w>": 741,
    ")]).": 742,
    ")])</w>": 743,
    ")],</w>": 744,
    ")]</w>": 745,
    ")s</w>": 746,
    ")})</w>": 747,
    ")}</w>": 748,
    "*": 749,
    "+": 750,
    ",": 751,
    ",),</w>": 752,
    ",)</w>": 753,
    ",</w>": 754,
    ",true": 755,
    ",true),": 756,
    "-": 757,
    "--": 758,
    "----": 759,
    "--------": 760,
    "----------------": 761,
    "--------------------------------": 762,
    "------------------------------------------------": 763,
    "------------------------------------------------------------</w>": 764,
    "-----------------------------</w>": 765,
    "------------------------</w>": 766,
    "---------------</w>": 767,
    "--------------</w>": 768,
    "-------------</w>": 769,
    "------------</w>": 770,
    "----------</w>": 771,
    "--------</w>": 772,
    "-------</w>": 773,
    "------</w>": 774,
    "-----</w>": 775,
    "----</w>": 776,
    "---</w>": 777,
    "--</w>": 778,
    "-0": 779,
    "-0.": 780,
    "-0.707": 781,
    "-01": 782,
    "-01-": 783,
    "-01-0": 784,
    "-01-01',</w>": 785,
    "-01-01</w>": 786,
    "-01-04',</w>": 787,
    "-01-10</w>": 788,
    "-01</w>": 789,
    "-02-28</w>": 790,
    "-03": 791,
    "-03-11</w>": 792,
    "-03-2": 793,
    "-03-29</w>": 794,
    "-04": 795,
    "-06": 796,
    "-08": 797,
    "-1": 798,
    "-1,</w>": 799,
    "-1.0": 800,
    "-1.08": 801,
    "-1.0856": 802,
    "-1.085631</w>": 803,
    "-10": 804,
    "-10-28</w>": 805,
    "-10</w>": 806,
    "-11-01</w>": 807,
    "-11</w>": 808,
    "-12-": 809,
    "-13</w>": 810,
    "-1</w>": 811,
    "-1]</w>": 812,
    "-2": 813,
    "-25</w>": 814,
    "-28</w>": 815,
    "-3,</w>": 816,
    "-31',</w>": 817,
    "-3</w>": 818,
    "-4,</w>": 819,
    "-4</w>": 820,
    "-5.0</w>": 821,
    "-5</w>": 822,
    "-</w>": 823,
    "-=</w>": 824,
    "-bit</w>": 825,
    "-dimensional</w>": 826,
    "-format</w>": 827,
    "-level</w>": 828,
    "-like,</w>": 829,
    "-like</w>": 830,
    ".": 831,
    "..": 832,
    "...": 833,
    "...)</w>": 834,
    "...,</w>": 835,
    "....": 836,
    ".......</w>": 837,
    "...;</w>": 838,
    "...</w>": 839,
    "...]:</w>": 840,
    "..</w>": 841,
    ".0,</w>": 842,
    ".0</w>": 843,
    ".1": 844,
    ".</w>": 845,
    "._": 846,
    ".__": 847,
    ".at[]</w>": 848,
    ".format(": 849,
    ".format(type=": 850,
    ".i": 851,
    ".iat[]</w>": 852,
    ".j": 853,
    ".join(": 854,
    ".jpe": 855,
    ".jpeg</w>": 856,
    ".r": 857,
    ".values</w>": 858,
    "/": 859,
    "0": 860,
    "0\"</w>": 861,
    "0',</w>": 862,
    "0))</w>": 863,
    "0),</w>": 864,
    "0).": 865,
    "0).any():</w>": 866,
    "0):</w>": 867,
    "0)</w>": 868,
    "0)]</w>": 869,
    "0,": 870,
    "0,</w>": 871,
    "0-": 872,
    "0-01": 873,
    "0.": 874,
    "0.,</w>": 875,
    "0.0": 876,
    "0.0,</w>": 877,
    "0.08</w>": 878,
    "0.0</w>": 879,
    "0.0j</w>": 880,
    "0.1,</w>": 881,
    "0.105": 882,
    "0.18": 883,
    "0.18.": 884,
    "0.18.0</w>": 885,
    "0.18.1</w>": 886,
    "0.19": 887,
    "0.19.": 888,
    "0.19.0</w>": 889,
    "0.19.2</w>": 890,
    "0.1</w>": 891,
    "0.2": 892,
    "0.20.0</w>": 893,
    "0.21.0</w>": 894,
    "0.24.": 895,
    "0.24.0</w>": 896,
    "0.24.1</w>": 897,
    "0.28": 898,
    "0.28297": 899,
    "0.282978</w>": 900,
    "0.3</w>": 901,
    "0.4</w>": 902,
    "0.5": 903,
    "0.5,</w>": 904,
    "0.5</w>": 905,
    "0.6": 906,
    "0.7": 907,
    "0.75": 908,
    "0.75)],</w>": 909,
    "0.7</w>": 910,
    "0.8": 911,
    "0.9": 912,
    "0.99": 913,
    "0.994,</w>": 914,
    "0.9973": 915,
    "0.997345</w>": 916,
    "0.</w>": 917,
    "00": 918,
    "00',</w>": 919,
    "00'</w>": 920,
    "00']))</w>": 921,
    "0000": 922,
    "000000</w>": 923,
    "0000</w>": 924,
    "000</w>": 925,
    "00:": 926,
    "00:00',</w>": 927,
    "00:00:": 928,
    "00:00:00": 929,
    "00:00:00</w>": 930,
    "00:00</w>": 931,
    "00:01": 932,
    "00:01:00</w>": 933,
    "00:02:00</w>": 934,
    "00:02:30</w>": 935,
    "00:03": 936,
    "00:03:00</w>": 937,
    "00:06:00</w>": 938,
    "00</w>": 939,
    "01": 940,
    "01</w>": 941,
    "01jan": 942,
    "01jan196": 943,
    "01jan1960</w>": 944,
    "02": 945,
    "02:": 946,
    "02:00</w>": 947,
    "02:30</w>": 948,
    "03": 949,
    "03:": 950,
    "04": 951,
    "05": 952,
    "05:": 953,
    "06": 954,
    "06:": 955,
    "06:00</w>": 956,
    "06:05:": 957,
    "07": 958,
    "08</w>": 959,
    "09:": 960,
    "09:00',</w>": 961,
    "09:00:": 962,
    "09:04": 963,
    "0:": 964,
    "0:</w>": 965,
    "0</w>": 966,
    "0])</w>": 967,
    "0],</w>": 968,
    "0]</w>": 969,
    "0_": 970,
    "0g\"</w>": 971,
    "0th</w>": 972,
    "0x": 973,
    "0x2": 974,
    "1": 975,
    "1\")</w>": 976,
    "1\",</w>": 977,
    "1\":": 978,
    "1\"</w>": 979,
    "1'),</w>": 980,
    "1')</w>": 981,
    "1',</w>": 982,
    "1':</w>": 983,
    "1(": 984,
    "1))</w>": 985,
    "1),</w>": 986,
    "1).": 987,
    "1):</w>": 988,
    "1)</w>": 989,
    "1)=": 990,
    "1)])</w>": 991,
    "1)]</w>": 992,
    "1,": 993,
    "1,2,": 994,
    "1,2</w>": 995,
    "1,</w>": 996,
    "1-": 997,
    "1-d</w>": 998,
    "1-dimensional.</w>": 999,
    "1.": 1000,
    "1.,</w>": 1001,
    "1.0": 1002,
    "1.0).": 1003,
    "1.0).count()</w>": 1004,
    "1.0,</w>": 1005,
    "1.0</w>": 1006,
    "1.0}": 1007,
    "1.1,</w>": 1008,
    "1.2)</w>": 1009,
    "1.3</w>": 1010,
    "1.5)</w>": 1011,
    "1.5,</w>": 1012,
    "1.5</w>": 1013,
    "1.8</w>": 1014,
    "1.9,</w>": 1015,
    "1.9</w>": 1016,
    "10": 1017,
    "10)})</w>": 1018,
    "10,</w>": 1019,
    "10.": 1020,
    "10.0": 1021,
    "10.0)],</w>": 1022,
    "10.1145</w>": 1023,
    "100": 1024,
    "100,</w>": 1025,
    "1000": 1026,
    "1000))</w>": 1027,
    "1000),</w>": 1028,
    "1000)</w>": 1029,
    "1000,</w>": 1030,
    "1000</w>": 1031,
    "105": 1032,
    "1067": 1033,
    "10678": 1034,
    "1067811865": 1035,
    "1067811865475</w>": 1036,
    "10</w>": 1037,
    "11": 1038,
    "11300</w>": 1039,
    "1145</w>": 1040,
    "11865": 1041,
    "12": 1042,
    "12128</w>": 1043,
    "128</w>": 1044,
    "12:": 1045,
    "12:00:00</w>": 1046,
    "13": 1047,
    "13203": 1048,
    "14": 1049,
    "15": 1050,
    "1500": 1051,
    "16": 1052,
    "16</w>": 1053,
    "17": 1054,
    "17.": 1055,
    "17.5,</w>": 1056,
    "18": 1057,
    "182</w>": 1058,
    "19": 1059,
    "1937": 1060,
    "1937894</w>": 1061,
    "1940": 1062,
    "1940-04": 1063,
    "1940-04-25</w>": 1064,
    "196": 1065,
    "1960": 1066,
    "197": 1067,
    "1970</w>": 1068,
    "1980</w>": 1069,
    "199": 1070,
    "1997,</w>": 1071,
    "1:": 1072,
    "1:</w>": 1073,
    "1</w>": 1074,
    "1=": 1075,
    "1=u'alice": 1076,
    "1])</w>": 1077,
    "1],</w>": 1078,
    "1]</w>": 1079,
    "1]])</w>": 1080,
    "1]],</w>": 1081,
    "1_": 1082,
    "1d": 1083,
    "1d(": 1084,
    "1d-": 1085,
    "1d</w>": 1086,
    "1d_": 1087,
    "1e": 1088,
    "1e-": 1089,
    "1st</w>": 1090,
    "1})</w>": 1091,
    "1}</w>": 1092,
    "2": 1093,
    "2\")</w>": 1094,
    "2\",</w>": 1095,
    "2\":": 1096,
    "2\"</w>": 1097,
    "2\"])</w>": 1098,
    "2'),</w>": 1099,
    "2',</w>": 1100,
    "2':</w>": 1101,
    "2'])</w>": 1102,
    "2'],</w>": 1103,
    "2)))</w>": 1104,
    "2))</w>": 1105,
    "2))]</w>": 1106,
    "2),</w>": 1107,
    "2).": 1108,
    "2):</w>": 1109,
    "2)</w>": 1110,
    "2)])</w>": 1111,
    "2)]</w>": 1112,
    "2,": 1113,
    "2,</w>": 1114,
    "2-": 1115,
    "2-d</w>": 1116,
    "2.": 1117,
    "2.,</w>": 1118,
    "2.0": 1119,
    "2.0,</w>": 1120,
    "2.12": 1121,
    "2.1213203": 1122,
    "2.1213203435": 1123,
    "2.121320343559": 1124,
    "2.12132034355964": 1125,
    "2.1213203435596424</w>": 1126,
    "2.1</w>": 1127,
    "2.2,</w>": 1128,
    "2.2</w>": 1129,
    "2.3,</w>": 1130,
    "2.3.0.</w>": 1131,
    "2.3.0</w>": 1132,
    "2.3</w>": 1133,
    "2.4.0</w>": 1134,
    "2.4</w>": 1135,
    "2.5,</w>": 1136,
    "2.5</w>": 1137,
    "2.8</w>": 1138,
    "2.9,</w>": 1139,
    "2.9</w>": 1140,
    "2.]))</w>": 1141,
    "20": 1142,
    "200": 1143,
    "2000": 1144,
    "2000-01": 1145,
    "2000-01-01</w>": 1146,
    "2008</w>": 1147,
    "2009": 1148,
    "2009-12-": 1149,
    "201": 1150,
    "2012,</w>": 1151,
    "2013,</w>": 1152,
    "2014": 1153,
    "2015": 1154,
    "2015-03-29</w>": 1155,
    "2015-11-01</w>": 1156,
    "2016": 1157,
    "2016-01-": 1158,
    "2016-01-0": 1159,
    "2016-01-09</w>": 1160,
    "2016-01-10</w>": 1161,
    "2016-01-31</w>": 1162,
    "2018": 1163,
    "2018',</w>": 1164,
    "2018,</w>": 1165,
    "2018-0": 1166,
    "2018-04": 1167,
    "2018-04-0": 1168,
    "2018-04-09</w>": 1169,
    "2018-04-10</w>": 1170,
    "2018-04-11</w>": 1171,
    "2018-04-13</w>": 1172,
    "2018-10-28</w>": 1173,
    "2019": 1174,
    "2019]],</w>": 1175,
    "2036": 1176,
    "20</w>": 1177,
    "21": 1178,
    "21,</w>": 1179,
    "21</w>": 1180,
    "22</w>": 1181,
    "23": 1182,
    "2337": 1183,
    "23:": 1184,
    "23:59:": 1185,
    "23:59:5": 1186,
    "24": 1187,
    "24.": 1188,
    "24.0</w>": 1189,
    "249": 1190,
    "249's</w>": 1191,
    "24</w>": 1192,
    "25": 1193,
    "258356": 1194,
    "2583560</w>": 1195,
    "26": 1196,
    "27": 1197,
    "28": 1198,
    "28))]</w>": 1199,
    "28]</w>": 1200,
    "29": 1201,
    "297": 1202,
    "2:": 1203,
    "2:</w>": 1204,
    "2</w>": 1205,
    "2=": 1206,
    "2=u'row": 1207,
    "2])</w>": 1208,
    "2],</w>": 1209,
    "2]</w>": 1210,
    "2]],</w>": 1211,
    "2]},</w>": 1212,
    "2_": 1213,
    "2d</w>": 1214,
    "2}</w>": 1215,
    "3": 1216,
    "3')]</w>": 1217,
    "3',</w>": 1218,
    "3':</w>": 1219,
    "3)))</w>": 1220,
    "3))</w>": 1221,
    "3),</w>": 1222,
    "3).": 1223,
    "3).count()</w>": 1224,
    "3)</w>": 1225,
    "3)],</w>": 1226,
    "3)]</w>": 1227,
    "3,": 1228,
    "3,</w>": 1229,
    "3.": 1230,
    "3.,</w>": 1231,
    "3.0": 1232,
    "3.0,</w>": 1233,
    "3.0.</w>": 1234,
    "3.0</w>": 1235,
    "3.2,</w>": 1236,
    "3.2</w>": 1237,
    "3.3,</w>": 1238,
    "3.3</w>": 1239,
    "3.4,</w>": 1240,
    "3.4</w>": 1241,
    "3.5</w>": 1242,
    "3.6</w>": 1243,
    "3.8,</w>": 1244,
    "3.8</w>": 1245,
    "30": 1246,
    "30',</w>": 1247,
    "300</w>": 1248,
    "31": 1249,
    "31',</w>": 1250,
    "31'],</w>": 1251,
    "31</w>": 1252,
    "32": 1253,
    "32,</w>": 1254,
    "32.</w>": 1255,
    "32</w>": 1256,
    "33": 1257,
    "35": 1258,
    "36": 1259,
    "37": 1260,
    "389": 1261,
    "389.0</w>": 1262,
    "38</w>": 1263,
    "3:": 1264,
    "3:</w>": 1265,
    "3</w>": 1266,
    "3]),</w>": 1267,
    "3]).": 1268,
    "3])</w>": 1269,
    "3],</w>": 1270,
    "3]</w>": 1271,
    "3]],</w>": 1272,
    "3]})</w>": 1273,
    "3rd</w>": 1274,
    "3t": 1275,
    "3t',</w>": 1276,
    "3t,</w>": 1277,
    "4": 1278,
    "4'),</w>": 1279,
    "4',</w>": 1280,
    "4))</w>": 1281,
    "4),</w>": 1282,
    "4).": 1283,
    "4).getnumpartitions()</w>": 1284,
    "4)</w>": 1285,
    "4)],</w>": 1286,
    "4)]</w>": 1287,
    "4,": 1288,
    "4,</w>": 1289,
    "4.": 1290,
    "4.0": 1291,
    "4.0.</w>": 1292,
    "4.0</w>": 1293,
    "4.56": 1294,
    "4.]))</w>": 1295,
    "40": 1296,
    "400": 1297,
    "404</w>": 1298,
    "408": 1299,
    "42)</w>": 1300,
    "43": 1301,
    "43400": 1302,
    "434000,</w>": 1303,
    "434000</w>": 1304,
    "435": 1305,
    "45": 1306,
    "4520</w>": 1307,
    "4567": 1308,
    "456789": 1309,
    "45</w>": 1310,
    "47": 1311,
    "475</w>": 1312,
    "48": 1313,
    "49": 1314,
    "4:</w>": 1315,
    "4</w>": 1316,
    "4]).": 1317,
    "4])</w>": 1318,
    "4],</w>": 1319,
    "4]</w>": 1320,
    "4]],</w>": 1321,
    "4]})</w>": 1322,
    "4]},</w>": 1323,
    "4},</w>": 1324,
    "5": 1325,
    "5')]</w>": 1326,
    "5),</w>": 1327,
    "5).": 1328,
    "5):</w>": 1329,
    "5)</w>": 1330,
    "5)]</w>": 1331,
    "5,": 1332,
    "5,</w>": 1333,
    "5.": 1334,
    "5.,</w>": 1335,
    "5.0),</w>": 1336,
    "5.0,</w>": 1337,
    "5.0</w>": 1338,
    "5.0],</w>": 1339,
    "5.0]</w>": 1340,
    "50": 1341,
    "50,</w>": 1342,
    "50</w>": 1343,
    "50],</w>": 1344,
    "52,</w>": 1345,
    "55</w>": 1346,
    "56": 1347,
    "57": 1348,
    "58": 1349,
    "59": 1350,
    "59000000</w>": 1351,
    "59:": 1352,
    "5:</w>": 1353,
    "5</w>": 1354,
    "5]).": 1355,
    "5])</w>": 1356,
    "5],</w>": 1357,
    "5]</w>": 1358,
    "5]]</w>": 1359,
    "6": 1360,
    "6),</w>": 1361,
    "6)</w>": 1362,
    "6)]</w>": 1363,
    "6,</w>": 1364,
    "6.": 1365,
    "60": 1366,
    "600": 1367,
    "62.": 1368,
    "62.6</w>": 1369,
    "64": 1370,
    "64-bit</w>": 1371,
    "65": 1372,
    "65000000</w>": 1373,
    "66": 1374,
    "6666": 1375,
    "67": 1376,
    "69,</w>": 1377,
    "6:</w>": 1378,
    "6</w>": 1379,
    "6])),</w>": 1380,
    "6])</w>": 1381,
    "6],</w>": 1382,
    "6]</w>": 1383,
    "6]],</w>": 1384,
    "6]})</w>": 1385,
    "7": 1386,
    "7),</w>": 1387,
    "7,</w>": 1388,
    "7.": 1389,
    "7.0</w>": 1390,
    "7.0],</w>": 1391,
    "70,</w>": 1392,
    "707": 1393,
    "73": 1394,
    "75": 1395,
    "758": 1396,
    "77.0</w>": 1397,
    "7</w>": 1398,
    "8": 1399,
    "8),</w>": 1400,
    "8)</w>": 1401,
    "8,</w>": 1402,
    "8.": 1403,
    "80.5,</w>": 1404,
    "80.5</w>": 1405,
    "80000</w>": 1406,
    "80</w>": 1407,
    "83": 1408,
    "8356": 1409,
    "84</w>": 1410,
    "86": 1411,
    "88": 1412,
    "88]</w>": 1413,
    "89": 1414,
    "894</w>": 1415,
    "8:</w>": 1416,
    "8</w>": 1417,
    "8],</w>": 1418,
    "9": 1419,
    "9',</w>": 1420,
    "9)</w>": 1421,
    "9,</w>": 1422,
    "9.": 1423,
    "90</w>": 1424,
    "92": 1425,
    "922337": 1426,
    "9223372036": 1427,
    "92233720368": 1428,
    "922337203685": 1429,
    "92233720368547": 1430,
    "92233720368547758": 1431,
    "97": 1432,
    "98": 1433,
    "99": 1434,
    "9999": 1435,
    "9:": 1436,
    "9</w>": 1437,
    "9]</w>": 1438,
    ":": 1439,
    ":-1]</w>": 1440,
    ":...</w>": 1441,
    ":00</w>": 1442,
    ":30": 1443,
    ":30:": 1444,
    "::</w>": 1445,
    ":</w>": 1446,
    ":],</w>": 1447,
    ":]</w>": 1448,
    ":attr:</w>": 1449,
    ":class:</w>": 1450,
    ":context:</w>": 1451,
    ":d": 1452,
    ":func:</w>": 1453,
    ":math:</w>": 1454,
    ":meth": 1455,
    ":meth:</w>": 1456,
    ":only</w>": 1457,
    ":param:</w>": 1458,
    ":param</w>": 1459,
    ":py": 1460,
    ":py:attr:</w>": 1461,
    ":py:class:</w>": 1462,
    ":re": 1463,
    ":ref:</w>": 1464,
    ":return": 1465,
    ":return:</w>": 1466,
    ":sub": 1467,
    ":sub:</w>": 1468,
    ";": 1469,
    ";</w>": 1470,
    "<": 1471,
    "</w>": 1472,
    "=": 1473,
    "=\"": 1474,
    "='": 1475,
    "='f": 1476,
    "='ignore": 1477,
    "='ignore'):</w>": 1478,
    "='right": 1479,
    "='right').sum()</w>": 1480,
    "=0,</w>": 1481,
    "=1,</w>": 1482,
    "=2,</w>": 1483,
    "=</w>": 1484,
    "==": 1485,
    "==</w>": 1486,
    "====": 1487,
    "========": 1488,
    "================": 1489,
    "==================</w>": 1490,
    "========================": 1491,
    "============================": 1492,
    "====================================": 1493,
    "=====================================</w>": 1494,
    "=_wrap_inplace_": 1495,
    "=_wrap_inplace_method(new_method": 1496,
    "=_wrap_inplace_method(new_methods[\"__": 1497,
    "=datetime.": 1498,
    "=datetime.date(": 1499,
    "=datetime.datetime(1997,</w>": 1500,
    "=engine": 1501,
    "=engine,</w>": 1502,
    "=false": 1503,
    "=false):</w>": 1504,
    "=false)</w>": 1505,
    "=false</w>": 1506,
    "=none": 1507,
    "=none):</w>": 1508,
    "=none,</w>": 1509,
    "=self.": 1510,
    "=true": 1511,
    "=true):</w>": 1512,
    "=true)</w>": 1513,
    "=true,</w>": 1514,
    "=true.</w>": 1515,
    "=true</w>": 1516,
    "=u'": 1517,
    "=u'value": 1518,
    "=x,</w>": 1519,
    "=x</w>": 1520,
    "={": 1521,
    ">": 1522,
    "?": 1523,
    "@": 1524,
    "[": 1525,
    "[\"": 1526,
    "[\"[sep": 1527,
    "[\"[sep]": 1528,
    "[\"[sep]\"]</w>": 1529,
    "[\"a": 1530,
    "[\"b": 1531,
    "[\"c": 1532,
    "[\"c1\",</w>": 1533,
    "[\"id\",</w>": 1534,
    "['": 1535,
    "['a": 1536,
    "['a',</w>": 1537,
    "['a']).": 1538,
    "['a']).select(": 1539,
    "['cat',</w>": 1540,
    "['col": 1541,
    "['col1',</w>": 1542,
    "['data": 1543,
    "['data'])</w>": 1544,
    "['dog": 1545,
    "['dog',</w>": 1546,
    "['dt": 1547,
    "['dt'])</w>": 1548,
    "['falcon": 1549,
    "['falcon',</w>": 1550,
    "['s": 1551,
    "['s',": 1552,
    "['s',])</w>": 1553,
    "['snail": 1554,
    "['snail',</w>": 1555,
    "['step": 1556,
    "['str": 1557,
    "['str'])</w>": 1558,
    "['t": 1559,
    "['t'])</w>": 1560,
    "[(": 1561,
    "[('age": 1562,
    "[('age',</w>": 1563,
    "[('i',</w>": 1564,
    "[(k,</w>": 1565,
    "[-1": 1566,
    "[-1,</w>": 1567,
    "[-1]</w>": 1568,
    "[0": 1569,
    "[0.0": 1570,
    "[0.0]),</w>": 1571,
    "[0])</w>": 1572,
    "[0].": 1573,
    "[0]</w>": 1574,
    "[0][0]</w>": 1575,
    "[0]]</w>": 1576,
    "[1": 1577,
    "[1,</w>": 1578,
    "[1.0": 1579,
    "[1.0]),</w>": 1580,
    "[1:": 1581,
    "[1]": 1582,
    "[1]</w>": 1583,
    "[2": 1584,
    "[2,</w>": 1585,
    "[2.0": 1586,
    "[2.0]),</w>": 1587,
    "[2018,</w>": 1588,
    "[3": 1589,
    "[3,</w>": 1590,
    "[4": 1591,
    "[4,</w>": 1592,
    "[5": 1593,
    "[6": 1594,
    "[7,</w>": 1595,
    "[:": 1596,
    "[:,</w>": 1597,
    "[::-1]</w>": 1598,
    "[:cap_": 1599,
    "[:cap_length]</w>": 1600,
    "[</w>": 1601,
    "[[": 1602,
    "[]))</w>": 1603,
    "[])]</w>": 1604,
    "[],</w>": 1605,
    "[]</w>": 1606,
    "[a,</w>": 1607,
    "[a</w>": 1608,
    "[a]</w>": 1609,
    "[b": 1610,
    "[b,</w>": 1611,
    "[b1,</w>": 1612,
    "[cl": 1613,
    "[class_column": 1614,
    "[col]</w>": 1615,
    "[col_": 1616,
    "[false,</w>": 1617,
    "[i": 1618,
    "[i])</w>": 1619,
    "[j": 1620,
    "[j])</w>": 1621,
    "[k]</w>": 1622,
    "[key]</w>": 1623,
    "[labeledpoint(": 1624,
    "[labeledpoint(1.1,</w>": 1625,
    "[len</w>": 1626,
    "[m": 1627,
    "[m]</w>": 1628,
    "[mask]</w>": 1629,
    "[n": 1630,
    "[np.": 1631,
    "[np.number": 1632,
    "[ns]": 1633,
    "[ns]')</w>": 1634,
    "[ns]',</w>": 1635,
    "[ns]</w>": 1636,
    "[p": 1637,
    "[pd.": 1638,
    "[points[": 1639,
    "[r": 1640,
    "[row(": 1641,
    "[row(_": 1642,
    "[row(_1=u'alice": 1643,
    "[row(_1=u'alice',</w>": 1644,
    "[row(age=": 1645,
    "[row(age=2,</w>": 1646,
    "[row(csv": 1647,
    "[row(d": 1648,
    "[row(date": 1649,
    "[row(date=datetime.date(": 1650,
    "[row(date=datetime.date(1997,</w>": 1651,
    "[row(month": 1652,
    "[row(name=u'alice',</w>": 1653,
    "[row(r": 1654,
    "[row(r=": 1655,
    "[row(string": 1656,
    "[row(udf": 1657,
    "[row(udf:": 1658,
    "[row(udf:javastringlength": 1659,
    "[row(year=": 1660,
    "[row(year=2012,</w>": 1661,
    "[self.": 1662,
    "[sep": 1663,
    "[sep]</w>": 1664,
    "[slice(none": 1665,
    "[slice(none)]</w>": 1666,
    "[true,</w>": 1667,
    "[value": 1668,
    "[x.": 1669,
    "[x</w>": 1670,
    "[{": 1671,
    "\\": 1672,
    "]": 1673,
    "]',</w>": 1674,
    "]'</w>": 1675,
    "])": 1676,
    "])),</w>": 1677,
    "]))</w>": 1678,
    "]),</w>": 1679,
    "]).": 1680,
    "]):</w>": 1681,
    "])</w>": 1682,
    "])]</w>": 1683,
    "],": 1684,
    "],)],</w>": 1685,
    "],</w>": 1686,
    "].": 1687,
    "]:</w>": 1688,
    "]</w>": 1689,
    "][": 1690,
    "][0]</w>": 1691,
    "][spark-": 1692,
    "][sql]</w>": 1693,
    "][wip": 1694,
    "]]))</w>": 1695,
    "]]),</w>": 1696,
    "]])</w>": 1697,
    "]],</w>": 1698,
    "]]</w>": 1699,
    "]})</w>": 1700,
    "]},</w>": 1701,
    "]}</w>": 1702,
    "^": 1703,
    "_": 1704,
    "_,</w>": 1705,
    "_.</w>": 1706,
    "_.__": 1707,
    "_.__doc__</w>": 1708,
    "_2=": 1709,
    "_2=1)]</w>": 1710,
    "_</w>": 1711,
    "__": 1712,
    "__.</w>": 1713,
    "__dict__</w>": 1714,
    "__init__.</w>": 1715,
    "_add_": 1716,
    "_add_numeric_": 1717,
    "_agg_": 1718,
    "_align_": 1719,
    "_apply_": 1720,
    "_arith_": 1721,
    "_arith_method_": 1722,
    "_arith_method_sparse_": 1723,
    "_as</w>": 1724,
    "_block_": 1725,
    "_c": 1726,
    "_char": 1727,
    "_check_": 1728,
    "_check_series_convert_timestamp": 1729,
    "_convert_": 1730,
    "_convert_list": 1731,
    "_convert_listlike(arg,</w>": 1732,
    "_convert_to_": 1733,
    "_convert_to_vector": 1734,
    "_create_": 1735,
    "_default_": 1736,
    "_default_hash_key</w>": 1737,
    "_dtype(": 1738,
    "_ensure_": 1739,
    "_evaluate_": 1740,
    "_exception_": 1741,
    "_exception_message": 1742,
    "_exception_message(e": 1743,
    "_extend_": 1744,
    "_factori": 1745,
    "_flex_": 1746,
    "_flex_doc_": 1747,
    "_format_": 1748,
    "_from_": 1749,
    "_gen_": 1750,
    "_gen_eval_": 1751,
    "_gen_eval_kwarg": 1752,
    "_get_": 1753,
    "_group_": 1754,
    "_group_selection_context(self):</w>": 1755,
    "_handle_": 1756,
    "_has_": 1757,
    "_has_null": 1758,
    "_has_nulltype(": 1759,
    "_heapif": 1760,
    "_heapreplace</w>": 1761,
    "_infer_": 1762,
    "_int64": 1763,
    "_inter": 1764,
    "_is": 1765,
    "_is_": 1766,
    "_is_multiple": 1767,
    "_is_multiple(del": 1768,
    "_is_multiple(delta,</w>": 1769,
    "_isna_": 1770,
    "_java_": 1771,
    "_java_obj.": 1772,
    "_java_obj.set": 1773,
    "_java_obj</w>": 1774,
    "_load_from_": 1775,
    "_make_": 1776,
    "_make_arithmetic_": 1777,
    "_make_arithmetic_op(": 1778,
    "_make_arithmetic_op(operator.": 1779,
    "_make_comparison_": 1780,
    "_make_comparison_op(": 1781,
    "_make_comparison_op(operator.": 1782,
    "_make_evaluate_": 1783,
    "_make_evaluate_binop(": 1784,
    "_make_pret": 1785,
    "_make_pretty_": 1786,
    "_make_stat_": 1787,
    "_make_stat_function(</w>": 1788,
    "_make_type_": 1789,
    "_make_type_verifier(": 1790,
    "_make_type_verifier(structtype([": 1791,
    "_maybe_": 1792,
    "_nest_": 1793,
    "_nest_lvl</w>": 1794,
    "_ns_": 1795,
    "_old_": 1796,
    "_one_": 1797,
    "_or_": 1798,
    "_or_bu": 1799,
    "_parse_": 1800,
    "_parse_datatype_": 1801,
    "_parse_datatype_json_": 1802,
    "_parse_datatype_string": 1803,
    "_parse_datatype_string(\"a:</w>": 1804,
    "_py": 1805,
    "_py2": 1806,
    "_py2java(sc,</w>": 1807,
    "_raise_": 1808,
    "_raw_": 1809,
    "_re": 1810,
    "_recode": 1811,
    "_recode_": 1812,
    "_recode_for_categorie": 1813,
    "_recode_for_categories(": 1814,
    "_reorder_": 1815,
    "_reorder_for_": 1816,
    "_reorder_for_extension_": 1817,
    "_reorder_for_extension_array_": 1818,
    "_set_": 1819,
    "_sif": 1820,
    "_t": 1821,
    "_td_": 1822,
    "_to_": 1823,
    "_to_java_": 1824,
    "_to_java_column(": 1825,
    "_to_java_column(col": 1826,
    "_to_java_column(col),</w>": 1827,
    "_to_seq(": 1828,
    "_to_seq(sc,</w>": 1829,
    "_un": 1830,
    "_unpickle_": 1831,
    "_validate_": 1832,
    "_values</w>": 1833,
    "_vector_": 1834,
    "_vector_size(": 1835,
    "_wrap_": 1836,
    "_wrap_inplace_": 1837,
    "`": 1838,
    "a": 1839,
    "a',</w>": 1840,
    "a':</w>": 1841,
    "a(": 1842,
    "a))</w>": 1843,
    "a):</w>": 1844,
    "a)</w>": 1845,
    "a)=": 1846,
    "a,": 1847,
    "a,</w>": 1848,
    "a-": 1849,
    "a-2</w>": 1850,
    "a-hdf": 1851,
    "a-hdfs-": 1852,
    "a-hdfs-path</w>": 1853,
    "a-suffix": 1854,
    "a-z": 1855,
    "a.": 1856,
    "a.dot(": 1857,
    "a.squared_distance(": 1858,
    "a0</w>": 1859,
    "a1</w>": 1860,
    "a2</w>": 1861,
    "a3</w>": 1862,
    "a4</w>": 1863,
    "a5</w>": 1864,
    "a:</w>": 1865,
    "a</w>": 1866,
    "a=": 1867,
    "a]</w>": 1868,
    "a_": 1869,
    "ab": 1870,
    "abc": 1871,
    "abc.": 1872,
    "abcdataframe):</w>": 1873,
    "abcindex": 1874,
    "abcindexclass)):</w>": 1875,
    "abcindexclass):</w>": 1876,
    "abcindexclass,</w>": 1877,
    "abcserie": 1878,
    "abcseries)):</w>": 1879,
    "abcseries):</w>": 1880,
    "abcseries,</w>": 1881,
    "abilities</w>": 1882,
    "ability</w>": 1883,
    "able": 1884,
    "able,</w>": 1885,
    "able</w>": 1886,
    "abled.</w>": 1887,
    "ables</w>": 1888,
    "abo": 1889,
    "above,</w>": 1890,
    "above</w>": 1891,
    "abs(": 1892,
    "abs(mat.": 1893,
    "abs(mat.mean()</w>": 1894,
    "abs(mat.std()</w>": 1895,
    "abs(stats.": 1896,
    "abs(stats.mean()</w>": 1897,
    "abs(stats.stdev()</w>": 1898,
    "absol": 1899,
    "absolute</w>": 1900,
    "ac": 1901,
    "acc</w>": 1902,
    "acce": 1903,
    "accep": 1904,
    "accept</w>": 1905,
    "acceptable_": 1906,
    "acceptable_types(": 1907,
    "acceptable_types(obj)</w>": 1908,
    "accepted</w>": 1909,
    "accepting</w>": 1910,
    "accepts</w>": 1911,
    "access</w>": 1912,
    "accessing</w>": 1913,
    "accesskey": 1914,
    "accessor": 1915,
    "accessors.</w>": 1916,
    "accessors</w>": 1917,
    "accommodates</w>": 1918,
    "according</w>": 1919,
    "account</w>": 1920,
    "accounts</w>": 1921,
    "accum_": 1922,
    "accumul": 1923,
    "accumulator": 1924,
    "accurate</w>": 1925,
    "ace": 1926,
    "ach": 1927,
    "ach</w>": 1928,
    "ache": 1929,
    "ache.": 1930,
    "ached</w>": 1931,
    "achie": 1932,
    "achieve</w>": 1933,
    "acing": 1934,
    "ack": 1935,
    "ack</w>": 1936,
    "acro": 1937,
    "across</w>": 1938,
    "act": 1939,
    "act</w>": 1940,
    "acti": 1941,
    "action</w>": 1942,
    "activ": 1943,
    "activated</w>": 1944,
    "active</w>": 1945,
    "activecontext</w>": 1946,
    "actly</w>": 1947,
    "actu": 1948,
    "actual</w>": 1949,
    "actually</w>": 1950,
    "acy</w>": 1951,
    "ad": 1952,
    "ad(": 1953,
    "ad.</w>": 1954,
    "ad</w>": 1955,
    "ad_": 1956,
    "adapti": 1957,
    "add": 1958,
    "add)</w>": 1959,
    "add,</w>": 1960,
    "add</w>": 1961,
    "add_": 1962,
    "add_one": 1963,
    "add_one(": 1964,
    "add_one(id": 1965,
    "add_one(id)=": 1966,
    "added</w>": 1967,
    "adding</w>": 1968,
    "addsub_": 1969,
    "aded</w>": 1970,
    "ader": 1971,
    "ading": 1972,
    "ading</w>": 1973,
    "adj": 1974,
    "adjust": 1975,
    "adjust(": 1976,
    "adjust_": 1977,
    "adjusted": 1978,
    "adjusted.</w>": 1979,
    "adjusted</w>": 1980,
    "ado": 1981,
    "ads</w>": 1982,
    "adv": 1983,
    "advan": 1984,
    "af": 1985,
    "af</w>": 1986,
    "afari</w>": 1987,
    "afe": 1988,
    "after": 1989,
    "after</w>": 1990,
    "ag": 1991,
    "ag</w>": 1992,
    "again": 1993,
    "against</w>": 1994,
    "agate</w>": 1995,
    "age": 1996,
    "age).collect()</w>": 1997,
    "age)=": 1998,
    "age)=2),</w>": 1999,
    "age)=5)]</w>": 2000,
    "age.": 2001,
    "age2=": 2002,
    "age</w>": 2003,
    "age=": 2004,
    "age=1)]</w>": 2005,
    "age=5)]</w>": 2006,
    "age=5,</w>": 2007,
    "agen": 2008,
    "ages=u'": 2009,
    "agg": 2010,
    "agg(": 2011,
    "agg_": 2012,
    "agg_general": 2013,
    "aggfunc</w>": 2014,
    "aggreg": 2015,
    "aggregate": 2016,
    "aggregate(": 2017,
    "aggregation</w>": 2018,
    "agon": 2019,
    "agonal</w>": 2020,
    "ai": 2021,
    "ailable.</w>": 2022,
    "ailable</w>": 2023,
    "ain": 2024,
    "ain</w>": 2025,
    "ait": 2026,
    "ait</w>": 2027,
    "aitany": 2028,
    "ak": 2029,
    "akima": 2030,
    "al": 2031,
    "al</w>": 2032,
    "ala</w>": 2033,
    "ale": 2034,
    "ale</w>": 2035,
    "alfred</w>": 2036,
    "algo": 2037,
    "algorith": 2038,
    "algorithm.</w>": 2039,
    "algorithm</w>": 2040,
    "algorithms.": 2041,
    "algorithms</w>": 2042,
    "algos.": 2043,
    "algos.take_": 2044,
    "ali": 2045,
    "alias</w>": 2046,
    "aliases.</w>": 2047,
    "aliases</w>": 2048,
    "alice": 2049,
    "alified</w>": 2050,
    "alig": 2051,
    "align": 2052,
    "align_": 2053,
    "align_keys</w>": 2054,
    "aligner</w>": 2055,
    "alignment</w>": 2056,
    "aling</w>": 2057,
    "all": 2058,
    "all',</w>": 2059,
    "all(": 2060,
    "all():</w>": 2061,
    "all</w>": 2062,
    "all_": 2063,
    "all_date": 2064,
    "all_of_": 2065,
    "allo": 2066,
    "allow": 2067,
    "allow_": 2068,
    "allow_dup": 2069,
    "allow_fill": 2070,
    "allow_fill=": 2071,
    "allowback": 2072,
    "allowbackslashescaping": 2073,
    "allowbackslashescapingany": 2074,
    "allowcommen": 2075,
    "allownumericle": 2076,
    "allownumericleading": 2077,
    "allownumericleadingzero": 2078,
    "allows</w>": 2079,
    "allowsinglequote": 2080,
    "allowun": 2081,
    "allowunquoted": 2082,
    "allowunquotedcontrol": 2083,
    "allowunquotedcontrolchar": 2084,
    "allowunquotedfield": 2085,
    "ally</w>": 2086,
    "alon": 2087,
    "along": 2088,
    "along</w>": 2089,
    "alph": 2090,
    "alpha-2</w>": 2091,
    "alpha</w>": 2092,
    "alpha=": 2093,
    "alread": 2094,
    "already</w>": 2095,
    "also": 2096,
    "also</w>": 2097,
    "alt_": 2098,
    "alter": 2099,
    "alternatively,</w>": 2100,
    "always</w>": 2101,
    "am": 2102,
    "am</w>": 2103,
    "amb": 2104,
    "ambigu": 2105,
    "ambiguous,</w>": 2106,
    "ambiguous</w>": 2107,
    "ame": 2108,
    "ame</w>": 2109,
    "aming": 2110,
    "amma</w>": 2111,
    "amon": 2112,
    "among</w>": 2113,
    "amoun": 2114,
    "amount</w>": 2115,
    "amp_": 2116,
    "ample": 2117,
    "amples</w>": 2118,
    "ampling": 2119,
    "ampling</w>": 2120,
    "an": 2121,
    "an</w>": 2122,
    "an_": 2123,
    "analy": 2124,
    "analysis,</w>": 2125,
    "ance</w>": 2126,
    "and": 2127,
    "and</w>": 2128,
    "and_": 2129,
    "ane": 2130,
    "anel": 2131,
    "ang": 2132,
    "angu": 2133,
    "anguilla</w>": 2134,
    "ani": 2135,
    "animal</w>": 2136,
    "aniti": 2137,
    "anke": 2138,
    "another_": 2139,
    "another_param": 2140,
    "ans": 2141,
    "ant</w>": 2142,
    "any": 2143,
    "any(": 2144,
    "any():</w>": 2145,
    "any</w>": 2146,
    "anything</w>": 2147,
    "ap": 2148,
    "ap</w>": 2149,
    "apache.": 2150,
    "apane": 2151,
    "ape": 2152,
    "api": 2153,
    "api.": 2154,
    "api.python.": 2155,
    "app": 2156,
    "appear</w>": 2157,
    "append": 2158,
    "append(": 2159,
    "append</w>": 2160,
    "appli": 2161,
    "applicable</w>": 2162,
    "application</w>": 2163,
    "applied</w>": 2164,
    "applies</w>": 2165,
    "apply": 2166,
    "apply(lambda</w>": 2167,
    "apply(np.": 2168,
    "apply_": 2169,
    "apply_along": 2170,
    "apply_along_": 2171,
    "applymap</w>": 2172,
    "appro": 2173,
    "approach</w>": 2174,
    "approp": 2175,
    "appropri": 2176,
    "appropriate</w>": 2177,
    "approx": 2178,
    "approximate</w>": 2179,
    "approximately</w>": 2180,
    "apti": 2181,
    "ar": 2182,
    "ar',</w>": 2183,
    "ar</w>": 2184,
    "arac": 2185,
    "aran": 2186,
    "arange(": 2187,
    "arange(len(": 2188,
    "arbitrary</w>": 2189,
    "arch": 2190,
    "archi": 2191,
    "archive</w>": 2192,
    "archive_": 2193,
    "archive_file,</w>": 2194,
    "archive_file</w>": 2195,
    "ard": 2196,
    "ard'</w>": 2197,
    "ard.</w>": 2198,
    "ard</w>": 2199,
    "ardi": 2200,
    "ards</w>": 2201,
    "are": 2202,
    "are</w>": 2203,
    "area</w>": 2204,
    "ared</w>": 2205,
    "arest</w>": 2206,
    "arg": 2207,
    "arg):</w>": 2208,
    "arg)</w>": 2209,
    "arg,</w>": 2210,
    "arg.": 2211,
    "arg0</w>": 2212,
    "arg=": 2213,
    "arg_": 2214,
    "arg_val_": 2215,
    "arge": 2216,
    "args(self,</w>": 2217,
    "args):</w>": 2218,
    "args)</w>": 2219,
    "args,</w>": 2220,
    "args:</w>": 2221,
    "args</w>": 2222,
    "args[0]</w>": 2223,
    "argsort</w>": 2224,
    "argumen": 2225,
    "argument": 2226,
    "argument</w>": 2227,
    "arguments:</w>": 2228,
    "arguments</w>": 2229,
    "arg}</w>": 2230,
    "ari": 2231,
    "arie": 2232,
    "arily</w>": 2233,
    "aring</w>": 2234,
    "arith": 2235,
    "arith_": 2236,
    "arith_flex</w>": 2237,
    "arith_special</w>": 2238,
    "arithme": 2239,
    "arithmeti": 2240,
    "arithmetic</w>": 2241,
    "arithmetic_": 2242,
    "arly</w>": 2243,
    "arn": 2244,
    "arn</w>": 2245,
    "arning</w>": 2246,
    "around</w>": 2247,
    "arr": 2248,
    "arr).": 2249,
    "arr):</w>": 2250,
    "arr)</w>": 2251,
    "arr,</w>": 2252,
    "arr.": 2253,
    "arr.dtype,</w>": 2254,
    "arr</w>": 2255,
    "arr_": 2256,
    "arr_value.": 2257,
    "arra": 2258,
    "array": 2259,
    "array's</w>": 2260,
    "array(": 2261,
    "array('d',</w>": 2262,
    "array(),</w>": 2263,
    "array()</w>": 2264,
    "array(['a',</w>": 2265,
    "array([('a',</w>": 2266,
    "array([1,</w>": 2267,
    "array-like,</w>": 2268,
    "array-like</w>": 2269,
    "array.": 2270,
    "array.array('d',</w>": 2271,
    "array.shape</w>": 2272,
    "array</w>": 2273,
    "array_": 2274,
    "array_dtype(": 2275,
    "array_equivalen": 2276,
    "array_like,</w>": 2277,
    "array_like</w>": 2278,
    "arrays(": 2279,
    "arrays,</w>": 2280,
    "arrays.": 2281,
    "arrays.pandasarray</w>": 2282,
    "arrays</w>": 2283,
    "arraytype(": 2284,
    "arraytype(short": 2285,
    "arrow": 2286,
    "arrow.": 2287,
    "arrow</w>": 2288,
    "arrow_": 2289,
    "arrow_type</w>": 2290,
    "arti": 2291,
    "article": 2292,
    "ary.</w>": 2293,
    "ary</w>": 2294,
    "as": 2295,
    "as')</w>": 2296,
    "as(\"": 2297,
    "as(\"csv": 2298,
    "as(\"csv\")).collect()</w>": 2299,
    "as('": 2300,
    "as)</w>": 2301,
    "as,</w>": 2302,
    "as.": 2303,
    "as2.": 2304,
    "as</w>": 2305,
    "as_": 2306,
    "as_index</w>": 2307,
    "asarray</w>": 2308,
    "ascending": 2309,
    "ascending:</w>": 2310,
    "ascending=": 2311,
    "ascending=false)</w>": 2312,
    "ascending=true,</w>": 2313,
    "asci": 2314,
    "ascii</w>": 2315,
    "asdict()</w>": 2316,
    "ase": 2317,
    "ase.</w>": 2318,
    "ase</w>": 2319,
    "ased</w>": 2320,
    "ases.</w>": 2321,
    "ases</w>": 2322,
    "asfreq": 2323,
    "asfreq()</w>": 2324,
    "ash": 2325,
    "asi": 2326,
    "asi8</w>": 2327,
    "asia</w>": 2328,
    "asier</w>": 2329,
    "asing</w>": 2330,
    "asnondeterministi": 2331,
    "asnondeterministic()</w>": 2332,
    "ason</w>": 2333,
    "assem": 2334,
    "assemble</w>": 2335,
    "asser": 2336,
    "assert</w>": 2337,
    "assert_": 2338,
    "assert_acceptable_types(obj)</w>": 2339,
    "assertionerror": 2340,
    "assig": 2341,
    "assign": 2342,
    "assign(": 2343,
    "assign</w>": 2344,
    "assigned</w>": 2345,
    "assignmen": 2346,
    "assignments,</w>": 2347,
    "asso": 2348,
    "associ": 2349,
    "associated</w>": 2350,
    "associative</w>": 2351,
    "asstring": 2352,
    "ast": 2353,
    "ast):</w>": 2354,
    "ast</w>": 2355,
    "ast_": 2356,
    "astext": 2357,
    "astype(": 2358,
    "astype('": 2359,
    "astype('f8": 2360,
    "astype('f8')</w>": 2361,
    "astype('i8": 2362,
    "astype('i8',</w>": 2363,
    "astype(dtype)</w>": 2364,
    "astype(dtype,</w>": 2365,
    "astype(np.": 2366,
    "astype(np.float64)</w>": 2367,
    "astype(object)</w>": 2368,
    "asure</w>": 2369,
    "asy</w>": 2370,
    "at": 2371,
    "at):</w>": 2372,
    "at.": 2373,
    "at</w>": 2374,
    "at[]</w>": 2375,
    "at_": 2376,
    "ate": 2377,
    "ate</w>": 2378,
    "ate_": 2379,
    "ated.</w>": 2380,
    "ated</w>": 2381,
    "atedataframe([": 2382,
    "ately</w>": 2383,
    "ater": 2384,
    "ater</w>": 2385,
    "ates</w>": 2386,
    "atest</w>": 2387,
    "atex</w>": 2388,
    "ath": 2389,
    "ati": 2390,
    "ating</w>": 2391,
    "ation": 2392,
    "ation,</w>": 2393,
    "ation.</w>": 2394,
    "ation</w>": 2395,
    "ation_": 2396,
    "ations.</w>": 2397,
    "ations</w>": 2398,
    "atis": 2399,
    "ative": 2400,
    "ative</w>": 2401,
    "atives</w>": 2402,
    "atle": 2403,
    "atleast_": 2404,
    "atleast_2": 2405,
    "ato": 2406,
    "atomic</w>": 2407,
    "ator": 2408,
    "ator</w>": 2409,
    "att": 2410,
    "attemp": 2411,
    "attempt</w>": 2412,
    "attempted</w>": 2413,
    "attempts</w>": 2414,
    "attr": 2415,
    "attr:</w>": 2416,
    "attri": 2417,
    "attribute": 2418,
    "attribute,</w>": 2419,
    "attributeerror:</w>": 2420,
    "attrs)</w>": 2421,
    "attrs,</w>": 2422,
    "attrs.": 2423,
    "attrs</w>": 2424,
    "aturday,</w>": 2425,
    "ause</w>": 2426,
    "aussi": 2427,
    "auth": 2428,
    "auth_": 2429,
    "auth_local_": 2430,
    "auth_local_we": 2431,
    "authenti": 2432,
    "authenticate</w>": 2433,
    "authentication</w>": 2434,
    "auto": 2435,
    "automati": 2436,
    "automatically</w>": 2437,
    "av": 2438,
    "available.</w>": 2439,
    "available</w>": 2440,
    "ave": 2441,
    "ave</w>": 2442,
    "ave_": 2443,
    "avg": 2444,
    "avg(": 2445,
    "avg(age)=": 2446,
    "avi": 2447,
    "aving</w>": 2448,
    "avo": 2449,
    "avoid</w>": 2450,
    "avor</w>": 2451,
    "avro": 2452,
    "aw": 2453,
    "await": 2454,
    "awaitany": 2455,
    "aware</w>": 2456,
    "awk": 2457,
    "ax": 2458,
    "ax):</w>": 2459,
    "ax,</w>": 2460,
    "ax.": 2461,
    "ax.get_": 2462,
    "ax.set_": 2463,
    "ax0_": 2464,
    "ax1.": 2465,
    "ax=": 2466,
    "ax=ax,</w>": 2467,
    "ax=none,</w>": 2468,
    "ax_": 2469,
    "ax_freq</w>": 2470,
    "axe": 2471,
    "axes(": 2472,
    "axes):</w>": 2473,
    "axes)</w>": 2474,
    "axes,</w>": 2475,
    "axes.": 2476,
    "axes.append(": 2477,
    "axes.append(ax": 2478,
    "axes:</w>": 2479,
    "axes</w>": 2480,
    "axes=none,</w>": 2481,
    "axes[": 2482,
    "axes]</w>": 2483,
    "axes_": 2484,
    "axis": 2485,
    "axis(": 2486,
    "axis(axis)</w>": 2487,
    "axis)</w>": 2488,
    "axis,</w>": 2489,
    "axis.": 2490,
    "axis.</w>": 2491,
    "axis.axes</w>": 2492,
    "axis.get_": 2493,
    "axis.set_": 2494,
    "axis:</w>": 2495,
    "axis</w>": 2496,
    "axis=": 2497,
    "axis=0):</w>": 2498,
    "axis=0)</w>": 2499,
    "axis=0,</w>": 2500,
    "axis=0</w>": 2501,
    "axis=1)</w>": 2502,
    "axis=1</w>": 2503,
    "axis=axis)</w>": 2504,
    "axis=axis,</w>": 2505,
    "axis=self.": 2506,
    "axis=self.axis)</w>": 2507,
    "axis={'index',</w>": 2508,
    "axis]</w>": 2509,
    "axis_": 2510,
    "axis_desc": 2511,
    "axis_descr,</w>": 2512,
    "axis_name</w>": 2513,
    "axis_number</w>": 2514,
    "axis_propertie": 2515,
    "axvline": 2516,
    "axvlines_": 2517,
    "ay": 2518,
    "ay</w>": 2519,
    "ayer": 2520,
    "a}</w>": 2521,
    "b": 2522,
    "b')</w>": 2523,
    "b',</w>": 2524,
    "b'</w>": 2525,
    "b):</w>": 2526,
    "b)</w>": 2527,
    "b,": 2528,
    "b,</w>": 2529,
    "b-": 2530,
    "b.": 2531,
    "b.dec_": 2532,
    "b.dec_att": 2533,
    "b.po": 2534,
    "b.pos_": 2535,
    "b.pos_ff.": 2536,
    "b0</w>": 2537,
    "b1</w>": 2538,
    "b2</w>": 2539,
    "b2]</w>": 2540,
    "b:</w>": 2541,
    "b</w>": 2542,
    "b=": 2543,
    "b])</w>": 2544,
    "b]</w>": 2545,
    "b_": 2546,
    "ba": 2547,
    "back": 2548,
    "back.": 2549,
    "back</w>": 2550,
    "back_": 2551,
    "back_server_": 2552,
    "backfill</w>": 2553,
    "backg": 2554,
    "backw": 2555,
    "backward": 2556,
    "backward</w>": 2557,
    "backwards</w>": 2558,
    "bad</w>": 2559,
    "bad_": 2560,
    "bar": 2561,
    "bar</w>": 2562,
    "barrier": 2563,
    "barriertask": 2564,
    "barriertaskcontext</w>": 2565,
    "bars</w>": 2566,
    "base": 2567,
    "base)</w>": 2568,
    "base-": 2569,
    "base-type</w>": 2570,
    "base.": 2571,
    "based</w>": 2572,
    "basestring": 2573,
    "basestring):</w>": 2574,
    "basi": 2575,
    "basic</w>": 2576,
    "bat": 2577,
    "batch": 2578,
    "batch,</w>": 2579,
    "batch</w>": 2580,
    "batch_": 2581,
    "batchsize)</w>": 2582,
    "batchsize</w>": 2583,
    "batman</w>": 2584,
    "batmobile</w>": 2585,
    "bcp</w>": 2586,
    "be": 2587,
    "be,</w>": 2588,
    "be</w>": 2589,
    "be_": 2590,
    "bear</w>": 2591,
    "bec": 2592,
    "because</w>": 2593,
    "bed": 2594,
    "bed</w>": 2595,
    "been</w>": 2596,
    "before": 2597,
    "before</w>": 2598,
    "begin": 2599,
    "beh": 2600,
    "behavi": 2601,
    "behavior": 2602,
    "behavior).</w>": 2603,
    "behavior</w>": 2604,
    "behaviour": 2605,
    "behaviour).</w>": 2606,
    "behaviour</w>": 2607,
    "being</w>": 2608,
    "belong": 2609,
    "belongs</w>": 2610,
    "below": 2611,
    "below).</w>": 2612,
    "below:</w>": 2613,
    "ber": 2614,
    "ber</w>": 2615,
    "berkele": 2616,
    "berkeley</w>": 2617,
    "bert": 2618,
    "bert-": 2619,
    "bert-base-": 2620,
    "bert</w>": 2621,
    "best": 2622,
    "best</w>": 2623,
    "best_": 2624,
    "best_non_": 2625,
    "best_non_null_": 2626,
    "bestmodel,</w>": 2627,
    "betwe": 2628,
    "between</w>": 2629,
    "beyond</w>": 2630,
    "bf": 2631,
    "bfg": 2632,
    "bfill": 2633,
    "bfill:</w>": 2634,
    "bi": 2635,
    "bias": 2636,
    "bias)</w>": 2637,
    "bias,</w>": 2638,
    "bias</w>": 2639,
    "bias_": 2640,
    "bias_i</w>": 2641,
    "biase": 2642,
    "big": 2643,
    "bigquery": 2644,
    "bigquery.</w>": 2645,
    "bigquery</w>": 2646,
    "bility.</w>": 2647,
    "bility</w>": 2648,
    "bin": 2649,
    "bin</w>": 2650,
    "bination</w>": 2651,
    "binations</w>": 2652,
    "bine": 2653,
    "bing</w>": 2654,
    "bining</w>": 2655,
    "binop(": 2656,
    "bins)</w>": 2657,
    "bins,</w>": 2658,
    "bins.</w>": 2659,
    "bins</w>": 2660,
    "bins=": 2661,
    "bins=bins,</w>": 2662,
    "bio.": 2663,
    "bio.write(": 2664,
    "bio.write(struct.pack": 2665,
    "bir": 2666,
    "bird</w>": 2667,
    "birth</w>": 2668,
    "bit',</w>": 2669,
    "bit</w>": 2670,
    "bitrary</w>": 2671,
    "bl": 2672,
    "blan": 2673,
    "blank</w>": 2674,
    "blankline</w>": 2675,
    "ble": 2676,
    "ble.</w>": 2677,
    "ble</w>": 2678,
    "blemodel</w>": 2679,
    "bli": 2680,
    "blk": 2681,
    "blk.": 2682,
    "blk.mgr_": 2683,
    "blkno": 2684,
    "blknos,</w>": 2685,
    "blknos[": 2686,
    "blo": 2687,
    "block": 2688,
    "block(": 2689,
    "block.": 2690,
    "block;</w>": 2691,
    "block</w>": 2692,
    "block_": 2693,
    "block_manager_": 2694,
    "blocking": 2695,
    "blockmanager": 2696,
    "blockmanager</w>": 2697,
    "blockmatrix(": 2698,
    "blocks": 2699,
    "blocks)</w>": 2700,
    "blocks,</w>": 2701,
    "blocks.</w>": 2702,
    "blocks:</w>": 2703,
    "blocks</w>": 2704,
    "bly</w>": 2705,
    "bm</w>": 2706,
    "bn</w>": 2707,
    "bo": 2708,
    "bod": 2709,
    "body</w>": 2710,
    "boo": 2711,
    "bool": 2712,
    "bool(": 2713,
    "bool):</w>": 2714,
    "bool)</w>": 2715,
    "bool,</w>": 2716,
    "bool_": 2717,
    "bool_dtype(": 2718,
    "bool_special</w>": 2719,
    "boole": 2720,
    "boolean": 2721,
    "boolean,</w>": 2722,
    "boot": 2723,
    "bootstrap</w>": 2724,
    "bootstrapping</w>": 2725,
    "bop)</w>": 2726,
    "bor": 2727,
    "both": 2728,
    "both.</w>": 2729,
    "botto": 2730,
    "bottom": 2731,
    "bound": 2732,
    "bound</w>": 2733,
    "boundarie": 2734,
    "boundaries,</w>": 2735,
    "boundaries_": 2736,
    "boundary.</w>": 2737,
    "boundary</w>": 2738,
    "bounded": 2739,
    "bounded</w>": 2740,
    "bounds": 2741,
    "bounds_": 2742,
    "box": 2743,
    "box</w>": 2744,
    "box=false</w>": 2745,
    "box=true</w>": 2746,
    "box_": 2747,
    "boxed</w>": 2748,
    "boxes</w>": 2749,
    "boxplot</w>": 2750,
    "br": 2751,
    "bre": 2752,
    "brea": 2753,
    "break</w>": 2754,
    "broad": 2755,
    "broadcast</w>": 2756,
    "brune": 2757,
    "brunei</w>": 2758,
    "brute": 2759,
    "brute-": 2760,
    "brute-force</w>": 2761,
    "bs": 2762,
    "bs</w>": 2763,
    "bserver</w>": 2764,
    "bsz": 2765,
    "bsz,</w>": 2766,
    "bsz]</w>": 2767,
    "bu": 2768,
    "buf,</w>": 2769,
    "buf.": 2770,
    "buf.write('</w>": 2771,
    "buf</w>": 2772,
    "buf=": 2773,
    "buffer": 2774,
    "buffer</w>": 2775,
    "bug": 2776,
    "buil": 2777,
    "build</w>": 2778,
    "build_": 2779,
    "build_path,</w>": 2780,
    "builder": 2781,
    "builder(": 2782,
    "built-": 2783,
    "built-in</w>": 2784,
    "builtin</w>": 2785,
    "bull": 2786,
    "bullwhip</w>": 2787,
    "bus": 2788,
    "busine": 2789,
    "business": 2790,
    "business</w>": 2791,
    "but</w>": 2792,
    "bute": 2793,
    "buted</w>": 2794,
    "bution": 2795,
    "bution</w>": 2796,
    "bw_": 2797,
    "bw_limit</w>": 2798,
    "by": 2799,
    "by,</w>": 2800,
    "by-": 2801,
    "by</w>": 2802,
    "by=": 2803,
    "by=by,</w>": 2804,
    "by_": 2805,
    "by_name</w>": 2806,
    "bykey": 2807,
    "bykey(": 2808,
    "bykey(true,</w>": 2809,
    "bykey</w>": 2810,
    "byte": 2811,
    "byteorder</w>": 2812,
    "bytesspilled</w>": 2813,
    "bzip": 2814,
    "bzip2,</w>": 2815,
    "c": 2816,
    "c',</w>": 2817,
    "c(": 2818,
    "c()</w>": 2819,
    "c):</w>": 2820,
    "c)</w>": 2821,
    "c,</w>": 2822,
    "c.": 2823,
    "c.</w>": 2824,
    "c.sort_values(": 2825,
    "c0": 2826,
    "c0=u'value": 2827,
    "c:</w>": 2828,
    "c</w>": 2829,
    "c=": 2830,
    "c]</w>": 2831,
    "c_": 2832,
    "ca": 2833,
    "ca',</w>": 2834,
    "cable</w>": 2835,
    "cache": 2836,
    "cache,</w>": 2837,
    "cache_": 2838,
    "cache_array</w>": 2839,
    "cache_dir": 2840,
    "cache_dir)</w>": 2841,
    "cache_dir=": 2842,
    "cache_dir=cache_dir)</w>": 2843,
    "cal": 2844,
    "cal</w>": 2845,
    "cal_": 2846,
    "calcul": 2847,
    "calculate</w>": 2848,
    "calend": 2849,
    "calendar</w>": 2850,
    "call": 2851,
    "callable": 2852,
    "callable(": 2853,
    "callable,</w>": 2854,
    "callable},</w>": 2855,
    "callback</w>": 2856,
    "callmllib": 2857,
    "callmllibfunc(\"": 2858,
    "calls</w>": 2859,
    "callsite": 2860,
    "cally.</w>": 2861,
    "cally</w>": 2862,
    "can": 2863,
    "can</w>": 2864,
    "cannot</w>": 2865,
    "cap": 2866,
    "cap_": 2867,
    "capturing</w>": 2868,
    "car": 2869,
    "care": 2870,
    "careful</w>": 2871,
    "carte": 2872,
    "cartesi": 2873,
    "cartesian</w>": 2874,
    "case": 2875,
    "case):</w>": 2876,
    "case,</w>": 2877,
    "case-": 2878,
    "case-in": 2879,
    "case-insensitive</w>": 2880,
    "case</w>": 2881,
    "cases,</w>": 2882,
    "cast": 2883,
    "cast)</w>": 2884,
    "cast</w>": 2885,
    "cast_": 2886,
    "casting": 2887,
    "cat": 2888,
    "cat.": 2889,
    "cat.categories</w>": 2890,
    "cat.map({'a':</w>": 2891,
    "cat.take([0,</w>": 2892,
    "cat</w>": 2893,
    "catalog.": 2894,
    "catch</w>": 2895,
    "cate": 2896,
    "cate</w>": 2897,
    "categor": 2898,
    "categori": 2899,
    "categorical": 2900,
    "categorical.</w>": 2901,
    "categorical</w>": 2902,
    "categoricaldtype</w>": 2903,
    "categoricalfeaturesinfo": 2904,
    "categoricalfeaturesinfo:</w>": 2905,
    "categoricals.</w>": 2906,
    "categoricals</w>": 2907,
    "categorie": 2908,
    "categories)</w>": 2909,
    "categories,</w>": 2910,
    "categories.": 2911,
    "categories.</w>": 2912,
    "categories</w>": 2913,
    "categories=": 2914,
    "categorize": 2915,
    "category)</w>": 2916,
    "category</w>": 2917,
    "cation": 2918,
    "cation.": 2919,
    "cation.</w>": 2920,
    "cation</w>": 2921,
    "catwo": 2922,
    "catwoman</w>": 2923,
    "causes</w>": 2924,
    "cb": 2925,
    "ce": 2926,
    "ce(": 2927,
    "ce(['a',</w>": 2928,
    "ce)</w>": 2929,
    "ce,</w>": 2930,
    "ce.</w>": 2931,
    "ce</w>": 2932,
    "ce=": 2933,
    "ce_": 2934,
    "ced</w>": 2935,
    "ceil": 2936,
    "cel": 2937,
    "cell": 2938,
    "cell.</w>": 2939,
    "cells.</w>": 2940,
    "cells</w>": 2941,
    "cen": 2942,
    "center": 2943,
    "central</w>": 2944,
    "centro": 2945,
    "cep": 2946,
    "cer": 2947,
    "certain</w>": 2948,
    "ces.</w>": 2949,
    "ces</w>": 2950,
    "cewe": 2951,
    "cf.": 2952,
    "ch": 2953,
    "ch.": 2954,
    "ch</w>": 2955,
    "ch_": 2956,
    "chall()</w>": 2957,
    "chan": 2958,
    "change": 2959,
    "change</w>": 2960,
    "changed</w>": 2961,
    "changes</w>": 2962,
    "changing</w>": 2963,
    "channel": 2964,
    "char": 2965,
    "charac": 2966,
    "charto": 2967,
    "chartoescapequote": 2968,
    "chartoescapequoteescaping": 2969,
    "chartoescapequoteescaping:</w>": 2970,
    "check": 2971,
    "check_": 2972,
    "check_string_": 2973,
    "checkpo": 2974,
    "chemy.": 2975,
    "chemy</w>": 2976,
    "cher": 2977,
    "ches</w>": 2978,
    "chil": 2979,
    "child": 2980,
    "child</w>": 2981,
    "childpos</w>": 2982,
    "chine": 2983,
    "chinese</w>": 2984,
    "cho": 2985,
    "choi": 2986,
    "choice": 2987,
    "choice</w>": 2988,
    "choo": 2989,
    "choose</w>": 2990,
    "choosing</w>": 2991,
    "chosen": 2992,
    "chosen</w>": 2993,
    "chro": 2994,
    "chrome</w>": 2995,
    "chun": 2996,
    "chunk": 2997,
    "chunksize)</w>": 2998,
    "chunksize,</w>": 2999,
    "chunksize</w>": 3000,
    "chunksize=": 3001,
    "chunksize=chunksize)</w>": 3002,
    "chunksize=chunksize,</w>": 3003,
    "ci": 3004,
    "cien": 3005,
    "cing</w>": 3006,
    "cir": 3007,
    "cit</w>": 3008,
    "citly</w>": 3009,
    "cj": 3010,
    "cjk</w>": 3011,
    "ck": 3012,
    "ck</w>": 3013,
    "cl": 3014,
    "cl)</w>": 3015,
    "cla": 3016,
    "clas": 3017,
    "class": 3018,
    "class(": 3019,
    "class)):</w>": 3020,
    "class):</w>": 3021,
    "class,</w>": 3022,
    "class:</w>": 3023,
    "class</w>": 3024,
    "class__": 3025,
    "class__.__": 3026,
    "classe": 3027,
    "classes</w>": 3028,
    "classifi": 3029,
    "classification.</w>": 3030,
    "classifier": 3031,
    "classname.": 3032,
    "classname</w>": 3033,
    "clause.</w>": 3034,
    "clause</w>": 3035,
    "cle": 3036,
    "clean</w>": 3037,
    "clean_": 3038,
    "clear": 3039,
    "clear</w>": 3040,
    "clien": 3041,
    "client</w>": 3042,
    "clip": 3043,
    "clip(": 3044,
    "clip(lower": 3045,
    "clip(lower=": 3046,
    "clip(upper": 3047,
    "clip(upper=": 3048,
    "clipbo": 3049,
    "clipboard.</w>": 3050,
    "clipboard</w>": 3051,
    "clipping</w>": 3052,
    "clo": 3053,
    "close": 3054,
    "close()</w>": 3055,
    "close-": 3056,
    "close-fig": 3057,
    "close-figs</w>": 3058,
    "closed": 3059,
    "closed,</w>": 3060,
    "closed=": 3061,
    "closed=closed,</w>": 3062,
    "closest</w>": 3063,
    "closure": 3064,
    "closure</w>": 3065,
    "cloud.": 3066,
    "cloud.google.": 3067,
    "cloud.google.com</w>": 3068,
    "cls": 3069,
    "cls):</w>": 3070,
    "cls)</w>": 3071,
    "cls,</w>": 3072,
    "cls.": 3073,
    "cls._": 3074,
    "cls.__": 3075,
    "cls.__r": 3076,
    "cls._axis_": 3077,
    "cls</w>": 3078,
    "clu": 3079,
    "cluster": 3080,
    "clusters.</w>": 3081,
    "cm": 3082,
    "cnames_": 3083,
    "co": 3084,
    "co.": 3085,
    "co.co_": 3086,
    "co_": 3087,
    "code": 3088,
    "code,</w>": 3089,
    "code-": 3090,
    "code-block": 3091,
    "code-block::</w>": 3092,
    "codec": 3093,
    "codec</w>": 3094,
    "codes)</w>": 3095,
    "codes,</w>": 3096,
    "codes.": 3097,
    "codes=[[0,</w>": 3098,
    "codes=[[1,</w>": 3099,
    "coeff": 3100,
    "coefficien": 3101,
    "coefficient.</w>": 3102,
    "coefficient</w>": 3103,
    "coer": 3104,
    "coerce</w>": 3105,
    "coerce_": 3106,
    "coerce_float</w>": 3107,
    "coerce_float=": 3108,
    "coerce_float=coerce_": 3109,
    "coerce_float=coerce_float,</w>": 3110,
    "coerced</w>": 3111,
    "coerci": 3112,
    "coercible</w>": 3113,
    "coercion</w>": 3114,
    "col": 3115,
    "col))</w>": 3116,
    "col)</w>": 3117,
    "col,</w>": 3118,
    "col0</w>": 3119,
    "col1,</w>": 3120,
    "col1:</w>": 3121,
    "col1</w>": 3122,
    "col2,</w>": 3123,
    "col2:</w>": 3124,
    "col2</w>": 3125,
    "col3</w>": 3126,
    "col:</w>": 3127,
    "col=": 3128,
    "col]</w>": 3129,
    "col_": 3130,
    "col_0</w>": 3131,
    "col_1</w>": 3132,
    "col_fill</w>": 3133,
    "col_name</w>": 3134,
    "collec": 3135,
    "collect": 3136,
    "collect()</w>": 3137,
    "collection": 3138,
    "collections.": 3139,
    "collections.abc.": 3140,
    "collections.abc.mapping</w>": 3141,
    "collections.default": 3142,
    "collections.ordereddict()</w>": 3143,
    "collections</w>": 3144,
    "collectsubmodel": 3145,
    "color": 3146,
    "color=": 3147,
    "colormap": 3148,
    "colormap</w>": 3149,
    "colors</w>": 3150,
    "cols": 3151,
    "cols)</w>": 3152,
    "cols,</w>": 3153,
    "cols:</w>": 3154,
    "cols</w>": 3155,
    "column": 3156,
    "column\")</w>": 3157,
    "column(": 3158,
    "column(s).</w>": 3159,
    "column(sc._jvm.functions.": 3160,
    "column):</w>": 3161,
    "column-": 3162,
    "column-by-": 3163,
    "column-wise.</w>": 3164,
    "column-wise</w>": 3165,
    "column.": 3166,
    "column.</w>": 3167,
    "column.otherwise</w>": 3168,
    "column:</w>": 3169,
    "column</w>": 3170,
    "column=": 3171,
    "column_": 3172,
    "column_format</w>": 3173,
    "columnname": 3174,
    "columnnameof": 3175,
    "columnnameofcorrup": 3176,
    "columnnameofcorruptrecord</w>": 3177,
    "columns": 3178,
    "columns)</w>": 3179,
    "columns,</w>": 3180,
    "columns</w>": 3181,
    "columns=": 3182,
    "columns=['let": 3183,
    "columns=['letter": 3184,
    "columns=['letter',</w>": 3185,
    "columns=columns,</w>": 3186,
    "columns=columns_": 3187,
    "columns=columns_mapper,</w>": 3188,
    "columns=multi": 3189,
    "columns=multicol": 3190,
    "columns={\"a\":</w>": 3191,
    "columns_": 3192,
    "columnsto": 3193,
    "com": 3194,
    "com.": 3195,
    "com.values_from_": 3196,
    "com.values_from_object(": 3197,
    "com</w>": 3198,
    "combination</w>": 3199,
    "combinations</w>": 3200,
    "combine": 3201,
    "combine(": 3202,
    "combine_": 3203,
    "combining</w>": 3204,
    "combop)</w>": 3205,
    "comm": 3206,
    "comma-": 3207,
    "comma-separated</w>": 3208,
    "commen": 3209,
    "commodates</w>": 3210,
    "common-": 3211,
    "common-deno": 3212,
    "common-denominator</w>": 3213,
    "commutative</w>": 3214,
    "comp": 3215,
    "comp_": 3216,
    "comp_flex</w>": 3217,
    "comp_special</w>": 3218,
    "comparable</w>": 3219,
    "comparison": 3220,
    "comparisons</w>": 3221,
    "compat_": 3222,
    "compat_args):</w>": 3223,
    "compat_args)</w>": 3224,
    "compat_args</w>": 3225,
    "compati": 3226,
    "compatibility.</w>": 3227,
    "compatibility</w>": 3228,
    "compatible</w>": 3229,
    "compile": 3230,
    "complex": 3231,
    "complex128</w>": 3232,
    "componen": 3233,
    "component</w>": 3234,
    "components</w>": 3235,
    "compression": 3236,
    "compression,</w>": 3237,
    "compression.": 3238,
    "compression.codec</w>": 3239,
    "compression=": 3240,
    "compression=compression,</w>": 3241,
    "compressioncodec": 3242,
    "computation.": 3243,
    "con": 3244,
    "con</w>": 3245,
    "conc": 3246,
    "concat([": 3247,
    "concat</w>": 3248,
    "concat_": 3249,
    "concat_axis</w>": 3250,
    "concatenate": 3251,
    "cond": 3252,
    "conda</w>": 3253,
    "conda_": 3254,
    "condition": 3255,
    "conditions.</w>": 3256,
    "conditions</w>": 3257,
    "conf": 3258,
    "conf(\"": 3259,
    "conf(\"spark.sql.": 3260,
    "conf(\"spark.sql.shuffle.": 3261,
    "conf(\"spark.sql.shuffle.partition": 3262,
    "conf.": 3263,
    "conf:</w>": 3264,
    "conf</w>": 3265,
    "confiden": 3266,
    "config": 3267,
    "config.": 3268,
    "config_": 3269,
    "config_file</w>": 3270,
    "confli": 3271,
    "conflicts</w>": 3272,
    "conform</w>": 3273,
    "conn_": 3274,
    "conn_info_": 3275,
    "consec": 3276,
    "consecuti": 3277,
    "consecutive</w>": 3278,
    "consen": 3279,
    "consensus</w>": 3280,
    "consider.</w>": 3281,
    "consider</w>": 3282,
    "considered</w>": 3283,
    "considering</w>": 3284,
    "consisten": 3285,
    "consistent</w>": 3286,
    "consisting</w>": 3287,
    "consists</w>": 3288,
    "console</w>": 3289,
    "consolidate:</w>": 3290,
    "constan": 3291,
    "constant.</w>": 3292,
    "construc": 3293,
    "construct_": 3294,
    "construct_1d_": 3295,
    "constructor": 3296,
    "consume</w>": 3297,
    "consumed</w>": 3298,
    "conta": 3299,
    "contain": 3300,
    "containing": 3301,
    "containing:</w>": 3302,
    "contains</w>": 3303,
    "conten": 3304,
    "content)</w>": 3305,
    "content</w>": 3306,
    "contents.</w>": 3307,
    "contents</w>": 3308,
    "contex": 3309,
    "context.": 3310,
    "context:</w>": 3311,
    "context</w>": 3312,
    "contin": 3313,
    "continu": 3314,
    "continuation,</w>": 3315,
    "continue</w>": 3316,
    "continuous</w>": 3317,
    "contri": 3318,
    "control": 3319,
    "control</w>": 3320,
    "controls</w>": 3321,
    "conv": 3322,
    "conv_": 3323,
    "conv_dates</w>": 3324,
    "conven": 3325,
    "convenien": 3326,
    "convenience</w>": 3327,
    "convention": 3328,
    "conventions</w>": 3329,
    "conver": 3330,
    "convergen": 3331,
    "conversion": 3332,
    "conversion.</w>": 3333,
    "conversions</w>": 3334,
    "convert": 3335,
    "convert(": 3336,
    "convert.</w>": 3337,
    "convert</w>": 3338,
    "convert_": 3339,
    "convert_date": 3340,
    "convert_dates</w>": 3341,
    "convert_json_": 3342,
    "convert_json_field_to_": 3343,
    "convert_json_field_to_pandas_type({'name':</w>": 3344,
    "convert_list": 3345,
    "convert_strl</w>": 3346,
    "convert_tokens_to_": 3347,
    "convert_tokens_to_id": 3348,
    "convert_year_": 3349,
    "converted,</w>": 3350,
    "converted.</w>": 3351,
    "converted</w>": 3352,
    "converter": 3353,
    "converti": 3354,
    "convertible": 3355,
    "convertible)</w>": 3356,
    "convertible</w>": 3357,
    "converts</w>": 3358,
    "coordinates</w>": 3359,
    "cop": 3360,
    "copy": 3361,
    "copy(": 3362,
    "copy()</w>": 3363,
    "copy)</w>": 3364,
    "copy,</w>": 3365,
    "copy</w>": 3366,
    "copy=": 3367,
    "copy=copy": 3368,
    "copy=copy)</w>": 3369,
    "copy=copy,</w>": 3370,
    "copy=false": 3371,
    "copy=false).": 3372,
    "copy=false)</w>": 3373,
    "cor": 3374,
    "cording</w>": 3375,
    "core.": 3376,
    "corpus</w>": 3377,
    "corr": 3378,
    "corr).replace('nan": 3379,
    "corr).replace('nan',</w>": 3380,
    "correct</w>": 3381,
    "correl": 3382,
    "correlation</w>": 3383,
    "corresponden": 3384,
    "correspondence</w>": 3385,
    "corrup": 3386,
    "corrupt</w>": 3387,
    "corrupted</w>": 3388,
    "cos(": 3389,
    "cosine</w>": 3390,
    "cost</w>": 3391,
    "coun": 3392,
    "count": 3393,
    "count()</w>": 3394,
    "count.": 3395,
    "count:</w>": 3396,
    "count</w>": 3397,
    "count_": 3398,
    "countapprox": 3399,
    "countapproxdistin": 3400,
    "countby": 3401,
    "countdistin": 3402,
    "counts)</w>": 3403,
    "counts</w>": 3404,
    "cov": 3405,
    "cov</w>": 3406,
    "cover": 3407,
    "covers</w>": 3408,
    "cow</w>": 3409,
    "cp": 3410,
    "cp</w>": 3411,
    "cre": 3412,
    "create": 3413,
    "create</w>": 3414,
    "create_": 3415,
    "created</w>": 3416,
    "createdataframe(": 3417,
    "createdataframe(rdd,</w>": 3418,
    "creates</w>": 3419,
    "creating</w>": 3420,
    "creation</w>": 3421,
    "creden": 3422,
    "credential": 3423,
    "credentials,</w>": 3424,
    "credentials.": 3425,
    "credentials</w>": 3426,
    "cregression": 3427,
    "criteri": 3428,
    "criteria</w>": 3429,
    "criterion</w>": 3430,
    "cro": 3431,
    "cross-": 3432,
    "cross</w>": 3433,
    "cs": 3434,
    "cs.": 3435,
    "cs</w>": 3436,
    "csv": 3437,
    "csv')</w>": 3438,
    "csv(": 3439,
    "csv)</w>": 3440,
    "csv</w>": 3441,
    "ct": 3442,
    "ct</w>": 3443,
    "ctly</w>": 3444,
    "cts</w>": 3445,
    "ctx._": 3446,
    "ctx._jvm.org.apache.": 3447,
    "cu": 3448,
    "cul": 3449,
    "cum": 3450,
    "cum_": 3451,
    "cumul": 3452,
    "cur": 3453,
    "curate</w>": 3454,
    "curren": 3455,
    "current": 3456,
    "current</w>": 3457,
    "current_": 3458,
    "currently,</w>": 3459,
    "currently</w>": 3460,
    "custo": 3461,
    "custom": 3462,
    "custom</w>": 3463,
    "custombusiness": 3464,
    "cut</w>": 3465,
    "cutoff_": 3466,
    "cy": 3467,
    "cython</w>": 3468,
    "cython_": 3469,
    "cythoni": 3470,
    "c{": 3471,
    "c{other": 3472,
    "c{other}.</w>": 3473,
    "c{rdd[(k,</w>": 3474,
    "c{self}</w>": 3475,
    "d": 3476,
    "d\",</w>": 3477,
    "d\"</w>": 3478,
    "d')</w>": 3479,
    "d',</w>": 3480,
    "d'</w>": 3481,
    "d(": 3482,
    "d))</w>": 3483,
    "d)</w>": 3484,
    "d,</w>": 3485,
    "d.": 3486,
    "d.</w>": 3487,
    "d::</w>": 3488,
    "d:</w>": 3489,
    "d</w>": 3490,
    "d]</w>": 3491,
    "d_": 3492,
    "d_table,</w>": 3493,
    "dat": 3494,
    "data": 3495,
    "data()</w>": 3496,
    "data))</w>": 3497,
    "data),</w>": 3498,
    "data).": 3499,
    "data).__finalize__(self)</w>": 3500,
    "data):</w>": 3501,
    "data)</w>": 3502,
    "data)=": 3503,
    "data,</w>": 3504,
    "data-": 3505,
    "data-type</w>": 3506,
    "data.": 3507,
    "data.show()</w>": 3508,
    "data:</w>": 3509,
    "data;</w>": 3510,
    "data</w>": 3511,
    "data=": 3512,
    "data[": 3513,
    "data[col": 3514,
    "data[col].": 3515,
    "data[col].max()</w>": 3516,
    "data_": 3517,
    "data_columns</w>": 3518,
    "data_iter)</w>": 3519,
    "data_to_": 3520,
    "data_to_encode.": 3521,
    "dataf": 3522,
    "dataframe": 3523,
    "dataframe's</w>": 3524,
    "dataframe(": 3525,
    "dataframe(j": 3526,
    "dataframe(jdf,</w>": 3527,
    "dataframe).</w>": 3528,
    "dataframe):</w>": 3529,
    "dataframe)</w>": 3530,
    "dataframe,</w>": 3531,
    "dataframe.": 3532,
    "dataframe.count:</w>": 3533,
    "dataframe.dropna</w>": 3534,
    "dataframe.from_": 3535,
    "dataframe.from_dict(": 3536,
    "dataframe.loc</w>": 3537,
    "dataframe.merge</w>": 3538,
    "dataframe.pivot</w>": 3539,
    "dataframe.plot</w>": 3540,
    "dataframe.query</w>": 3541,
    "dataframe.reset_": 3542,
    "dataframe.reset_index</w>": 3543,
    "dataframe.set_": 3544,
    "dataframe.set_index</w>": 3545,
    "dataframe.sort_values</w>": 3546,
    "dataframe.to_": 3547,
    "dataframe.to_hdf</w>": 3548,
    "dataframe.to_parquet</w>": 3549,
    "dataframe</w>": 3550,
    "dataframes,</w>": 3551,
    "dataframes.</w>": 3552,
    "dataframestat": 3553,
    "dataframestatfunctions.": 3554,
    "dataframe}</w>": 3555,
    "datatype,</w>": 3556,
    "datatype.": 3557,
    "datatype.simple": 3558,
    "datatype.simplestring</w>": 3559,
    "datatype</w>": 3560,
    "datatype_": 3561,
    "date": 3562,
    "date(": 3563,
    "date)</w>": 3564,
    "date,</w>": 3565,
    "date.": 3566,
    "date1</w>": 3567,
    "date</w>": 3568,
    "date_": 3569,
    "date_axis_": 3570,
    "date_axis_info</w>": 3571,
    "date_format</w>": 3572,
    "date_range(": 3573,
    "date_range</w>": 3574,
    "dateformat:</w>": 3575,
    "dateformat=": 3576,
    "dateformat=date": 3577,
    "dateformat=dateformat,</w>": 3578,
    "dateformat=none,</w>": 3579,
    "dateoffset,</w>": 3580,
    "dateoffset</w>": 3581,
    "dates)</w>": 3582,
    "dates,</w>": 3583,
    "dates.": 3584,
    "dates.</w>": 3585,
    "dates</w>": 3586,
    "datetime": 3587,
    "datetime(": 3588,
    "datetime(1997,</w>": 3589,
    "datetime-": 3590,
    "datetime-like,</w>": 3591,
    "datetime-like</w>": 3592,
    "datetime.": 3593,
    "datetime.datetime</w>": 3594,
    "datetime.time</w>": 3595,
    "datetime64": 3596,
    "datetime64[n": 3597,
    "datetime64n": 3598,
    "datetime</w>": 3599,
    "datetime_": 3600,
    "datetimearray</w>": 3601,
    "datetimeformatter</w>": 3602,
    "datetimeindex(['2017": 3603,
    "datetimeindex(['2018-01-01',</w>": 3604,
    "datetimeindex(['2018-01-31',</w>": 3605,
    "datetimeindex):</w>": 3606,
    "datetimeindex,</w>": 3607,
    "datetimeindex.</w>": 3608,
    "datetimeindex</w>": 3609,
    "dating</w>": 3610,
    "day": 3611,
    "day()</w>": 3612,
    "day</w>": 3613,
    "dayfirst</w>": 3614,
    "days": 3615,
    "days',</w>": 3616,
    "days,</w>": 3617,
    "days:</w>": 3618,
    "days</w>": 3619,
    "days=": 3620,
    "db": 3621,
    "dbapi": 3622,
    "dbapi2</w>": 3623,
    "dbname</w>": 3624,
    "dd": 3625,
    "dd</w>": 3626,
    "ddl-": 3627,
    "ddl-formatted</w>": 3628,
    "ddl</w>": 3629,
    "de": 3630,
    "de</w>": 3631,
    "deal</w>": 3632,
    "dealing</w>": 3633,
    "debug": 3634,
    "dec_": 3635,
    "decimal": 3636,
    "decimal)</w>": 3637,
    "decimal.": 3638,
    "decimal.decimal)</w>": 3639,
    "decimal=": 3640,
    "decimals</w>": 3641,
    "decision": 3642,
    "decisiontree</w>": 3643,
    "deco": 3644,
    "decoding</w>": 3645,
    "decre": 3646,
    "decreasing</w>": 3647,
    "ded::</w>": 3648,
    "ded</w>": 3649,
    "deep": 3650,
    "deep=": 3651,
    "deep=deep": 3652,
    "def": 3653,
    "def</w>": 3654,
    "defa": 3655,
    "defaul": 3656,
    "default": 3657,
    "default),</w>": 3658,
    "default).</w>": 3659,
    "default</w>": 3660,
    "default_": 3661,
    "defaultdict(": 3662,
    "defaultdict(list)</w>": 3663,
    "defaultparallelis": 3664,
    "defaultvalue": 3665,
    "define</w>": 3666,
    "defined</w>": 3667,
    "defines</w>": 3668,
    "deflate": 3669,
    "deflate).</w>": 3670,
    "degre": 3671,
    "degrees</w>": 3672,
    "del": 3673,
    "delay": 3674,
    "delaythreshold</w>": 3675,
    "delete": 3676,
    "delete(": 3677,
    "delimited</w>": 3678,
    "delta.": 3679,
    "delta</w>": 3680,
    "den": 3681,
    "deno": 3682,
    "denom</w>": 3683,
    "dense": 3684,
    "dense1.": 3685,
    "dense1.squared_distance(": 3686,
    "dense1.squared_distance(dense": 3687,
    "densevector": 3688,
    "density</w>": 3689,
    "density_": 3690,
    "dep": 3691,
    "dependen": 3692,
    "dependent.</w>": 3693,
    "depending</w>": 3694,
    "deprecation": 3695,
    "deprecationwarning)</w>": 3696,
    "depth": 3697,
    "depth</w>": 3698,
    "der": 3699,
    "deri": 3700,
    "deriv": 3701,
    "derivatives</w>": 3702,
    "desc": 3703,
    "descri": 3704,
    "describe": 3705,
    "describe()</w>": 3706,
    "describing</w>": 3707,
    "descrip": 3708,
    "description": 3709,
    "description</w>": 3710,
    "descriptor</w>": 3711,
    "desi": 3712,
    "desig": 3713,
    "designed</w>": 3714,
    "desired.</w>": 3715,
    "desired</w>": 3716,
    "destro": 3717,
    "detail": 3718,
    "detail</w>": 3719,
    "details.</w>": 3720,
    "details</w>": 3721,
    "deter": 3722,
    "determine</w>": 3723,
    "determined</w>": 3724,
    "determines</w>": 3725,
    "deterministi": 3726,
    "deterministic</w>": 3727,
    "dev": 3728,
    "dev</w>": 3729,
    "devi": 3730,
    "deviation</w>": 3731,
    "dex": 3732,
    "df": 3733,
    "df(self._j": 3734,
    "df),</w>": 3735,
    "df)</w>": 3736,
    "df,</w>": 3737,
    "df.": 3738,
    "df.age</w>": 3739,
    "df.agg(": 3740,
    "df.apply(lambda</w>": 3741,
    "df.apply(np.": 3742,
    "df.assign(": 3743,
    "df.assign(temp_": 3744,
    "df.assign(temp_f=": 3745,
    "df.clip(lower=": 3746,
    "df.collect()</w>": 3747,
    "df.create": 3748,
    "df.createor": 3749,
    "df.createorreplacetemp": 3750,
    "df.d": 3751,
    "df.describe": 3752,
    "df.describe(": 3753,
    "df.describe(include=": 3754,
    "df.dtypes</w>": 3755,
    "df.eval": 3756,
    "df.groupby": 3757,
    "df.groupby(\"id": 3758,
    "df.groupby(\"id\").": 3759,
    "df.groupby('": 3760,
    "df.groupby('a": 3761,
    "df.groupby('a').": 3762,
    "df.groupby('a').resample('": 3763,
    "df.groupby('a').resample('3t',</w>": 3764,
    "df.groupby('a')</w>": 3765,
    "df.groupby('id": 3766,
    "df.groupby('id').": 3767,
    "df.iter": 3768,
    "df.itertuple": 3769,
    "df.join(": 3770,
    "df.join(df2,</w>": 3771,
    "df.n": 3772,
    "df.nlarge": 3773,
    "df.nlargest(3,</w>": 3774,
    "df.nsmalle": 3775,
    "df.nsmallest(3,</w>": 3776,
    "df.plot.": 3777,
    "df.plot.are": 3778,
    "df.plot.bar": 3779,
    "df.quantile": 3780,
    "df.rename(": 3781,
    "df.rename(index=": 3782,
    "df.rename(index=str,</w>": 3783,
    "df.reset_": 3784,
    "df.reset_index(": 3785,
    "df.reset_index(level='class',</w>": 3786,
    "df.sample(": 3787,
    "df.select(": 3788,
    "df.select(array_": 3789,
    "df.select(df.": 3790,
    "df.select(df.age.": 3791,
    "df.select(regexp_": 3792,
    "df.select(regexp_ex": 3793,
    "df.select(regexp_extract('str": 3794,
    "df.select(regexp_extract('str',</w>": 3795,
    "df.select(to_": 3796,
    "df.select_": 3797,
    "df.set_": 3798,
    "df.sort_values(": 3799,
    "df.to_": 3800,
    "df.to_json(orien": 3801,
    "df.update(new_": 3802,
    "df.update(new_df)</w>": 3803,
    "df.with": 3804,
    "df.write.": 3805,
    "df.x": 3806,
    "df1,</w>": 3807,
    "df1.": 3808,
    "df1.combine(": 3809,
    "df1.combine(df2,</w>": 3810,
    "df2)</w>": 3811,
    "df2,</w>": 3812,
    "df2.": 3813,
    "df2.collect()</w>": 3814,
    "df2.dtypes</w>": 3815,
    "df2.name,</w>": 3816,
    "df2</w>": 3817,
    "df3.": 3818,
    "df3</w>": 3819,
    "df4.": 3820,
    "df4.na.": 3821,
    "df</w>": 3822,
    "df[": 3823,
    "df[df.": 3824,
    "df_": 3825,
    "df_0": 3826,
    "df_multi_": 3827,
    "df_multi_level_": 3828,
    "df_multi_level_cols": 3829,
    "df_multi_level_cols2.": 3830,
    "df_single_": 3831,
    "dfile.": 3832,
    "di": 3833,
    "diagonal</w>": 3834,
    "dic": 3835,
    "dict": 3836,
    "dict(": 3837,
    "dict()</w>": 3838,
    "dict(zip(": 3839,
    "dict)):</w>": 3840,
    "dict,</w>": 3841,
    "dict.": 3842,
    "dict:</w>": 3843,
    "dict</w>": 3844,
    "dict_": 3845,
    "dict__</w>": 3846,
    "dict}</w>": 3847,
    "differ": 3848,
    "differen": 3849,
    "difference(": 3850,
    "difference</w>": 3851,
    "different,</w>": 3852,
    "different.</w>": 3853,
    "different</w>": 3854,
    "different_": 3855,
    "differently</w>": 3856,
    "differs</w>": 3857,
    "dim": 3858,
    "dim=": 3859,
    "dimen": 3860,
    "dimension": 3861,
    "dimension</w>": 3862,
    "dimensional.</w>": 3863,
    "dimensional</w>": 3864,
    "dimensions</w>": 3865,
    "ding": 3866,
    "ding</w>": 3867,
    "dir": 3868,
    "dir(": 3869,
    "dir,</w>": 3870,
    "direc": 3871,
    "direct": 3872,
    "direction": 3873,
    "directly,</w>": 3874,
    "directly.</w>": 3875,
    "director": 3876,
    "directory</w>": 3877,
    "dis": 3878,
    "disable</w>": 3879,
    "disabled.</w>": 3880,
    "disk": 3881,
    "disk.</w>": 3882,
    "disk</w>": 3883,
    "diskbytesspilled</w>": 3884,
    "dispat": 3885,
    "dispatch": 3886,
    "dispatch</w>": 3887,
    "dispatch_to_": 3888,
    "dispatch_to_index_": 3889,
    "display": 3890,
    "display.": 3891,
    "display_": 3892,
    "display_width</w>": 3893,
    "displays</w>": 3894,
    "distan": 3895,
    "distance(": 3896,
    "distance</w>": 3897,
    "distin": 3898,
    "distinct</w>": 3899,
    "distingu": 3900,
    "distinguish</w>": 3901,
    "distri": 3902,
    "distributed</w>": 3903,
    "distribution": 3904,
    "distribution</w>": 3905,
    "div": 3906,
    "dlib</w>": 3907,
    "dm": 3908,
    "dm2)])</w>": 3909,
    "dn't</w>": 3910,
    "do": 3911,
    "do</w>": 3912,
    "do_": 3913,
    "do_setop(other)</w>": 3914,
    "doc": 3915,
    "doc_": 3916,
    "doc__</w>": 3917,
    "doc_span.": 3918,
    "docs.": 3919,
    "docs.python.org</w>": 3920,
    "docs</w>": 3921,
    "docte": 3922,
    "doctest:</w>": 3923,
    "documen": 3924,
    "document": 3925,
    "documentation.</w>": 3926,
    "documentation</w>": 3927,
    "documented</w>": 3928,
    "doe": 3929,
    "does": 3930,
    "does</w>": 3931,
    "doesn't</w>": 3932,
    "dog": 3933,
    "dog</w>": 3934,
    "dogs</w>": 3935,
    "doi.": 3936,
    "doi.org</w>": 3937,
    "doing</w>": 3938,
    "don": 3939,
    "don't</w>": 3940,
    "dot": 3941,
    "dot(": 3942,
    "dotnet=": 3943,
    "dotnet=1500": 3944,
    "dotnet=48": 3945,
    "dotnet=4800": 3946,
    "dou": 3947,
    "double": 3948,
    "double\",</w>": 3949,
    "double</w>": 3950,
    "dow": 3951,
    "down": 3952,
    "downcast)</w>": 3953,
    "downcast</w>": 3954,
    "download</w>": 3955,
    "downsample</w>": 3956,
    "draw</w>": 3957,
    "drawing</w>": 3958,
    "drawn</w>": 3959,
    "dri": 3960,
    "driver": 3961,
    "driver's</w>": 3962,
    "driver</w>": 3963,
    "drop": 3964,
    "drop:</w>": 3965,
    "drop_": 3966,
    "drop_duplicates</w>": 3967,
    "dropduplicate": 3968,
    "dropfieldifall": 3969,
    "dropmalformed</w>": 3970,
    "dropna": 3971,
    "dropna)</w>": 3972,
    "dropna</w>": 3973,
    "dropna=": 3974,
    "dropna=dropna)</w>": 3975,
    "dropped.": 3976,
    "dropped.</w>": 3977,
    "dropped</w>": 3978,
    "dropping</w>": 3979,
    "drops</w>": 3980,
    "ds</w>": 3981,
    "dst</w>": 3982,
    "dstre": 3983,
    "dstream": 3984,
    "dstream's</w>": 3985,
    "dstream</w>": 3986,
    "dt": 3987,
    "dt):</w>": 3988,
    "dt)</w>": 3989,
    "dt.": 3990,
    "dt.weekday()</w>": 3991,
    "dt</w>": 3992,
    "dta</w>": 3993,
    "dtype": 3994,
    "dtype(": 3995,
    "dtype)):</w>": 3996,
    "dtype))</w>": 3997,
    "dtype),</w>": 3998,
    "dtype):</w>": 3999,
    "dtype)</w>": 4000,
    "dtype,</w>": 4001,
    "dtype.": 4002,
    "dtype.categories)</w>": 4003,
    "dtype.kind</w>": 4004,
    "dtype.name</w>": 4005,
    "dtype.type,</w>": 4006,
    "dtype.type</w>": 4007,
    "dtype:</w>": 4008,
    "dtype</w>": 4009,
    "dtype=": 4010,
    "dtype='": 4011,
    "dtype='category": 4012,
    "dtype='category')</w>": 4013,
    "dtype='datetime64[ns]": 4014,
    "dtype='datetime64[ns]',</w>": 4015,
    "dtype='int64')</w>": 4016,
    "dtype='m8": 4017,
    "dtype='m8[ns]')</w>": 4018,
    "dtype='object')</w>": 4019,
    "dtype='period[m": 4020,
    "dtype='period[m]',</w>": 4021,
    "dtype='timedelta64": 4022,
    "dtype='timedelta64[ns]',</w>": 4023,
    "dtype=[('i',</w>": 4024,
    "dtype=bool)</w>": 4025,
    "dtype=dtype))</w>": 4026,
    "dtype=dtype)</w>": 4027,
    "dtype=dtype,</w>": 4028,
    "dtype=np.": 4029,
    "dtype=np.float64)</w>": 4030,
    "dtype=np.intp": 4031,
    "dtype=np.intp)</w>": 4032,
    "dtype=np.object_": 4033,
    "dtype=np.object_)</w>": 4034,
    "dtype=object)</w>": 4035,
    "dtype=self.": 4036,
    "dtype=self.dtype)</w>": 4037,
    "dtype=self.dtype,</w>": 4038,
    "dtype_": 4039,
    "dtype_mapping": 4040,
    "dtype_mapping</w>": 4041,
    "dtypes:</w>": 4042,
    "dtypes</w>": 4043,
    "due</w>": 4044,
    "dum": 4045,
    "dummie": 4046,
    "dummy.": 4047,
    "dummy.p": 4048,
    "dummy.pkl": 4049,
    "dummy.pkl\")</w>": 4050,
    "dump": 4051,
    "dump_": 4052,
    "dumps(": 4053,
    "dup": 4054,
    "dupli": 4055,
    "duplicate": 4056,
    "duplicates()</w>": 4057,
    "duplicates,</w>": 4058,
    "duplicates.</w>": 4059,
    "duplicates</w>": 4060,
    "duplication.</w>": 4061,
    "during</w>": 4062,
    "dy": 4063,
    "dynami": 4064,
    "e": 4065,
    "e))</w>": 4066,
    "e.": 4067,
    "e.,</w>": 4068,
    "e.</w>": 4069,
    "e.args</w>": 4070,
    "e.g": 4071,
    "e.g.": 4072,
    "e.g.,</w>": 4073,
    "e.g.:</w>": 4074,
    "e.g.</w>": 4075,
    "e:</w>": 4076,
    "e</w>": 4077,
    "each</w>": 4078,
    "ear": 4079,
    "earlier</w>": 4080,
    "easier</w>": 4081,
    "easy</w>": 4082,
    "ec": 4083,
    "ect</w>": 4084,
    "ect_": 4085,
    "ed": 4086,
    "ed,</w>": 4087,
    "ed-": 4088,
    "ed</w>": 4089,
    "ed_type</w>": 4090,
    "eded</w>": 4091,
    "edge": 4092,
    "edge</w>": 4093,
    "edo": 4094,
    "eff": 4095,
    "effect</w>": 4096,
    "efficien": 4097,
    "efficient</w>": 4098,
    "efficiently</w>": 4099,
    "eg.</w>": 4100,
    "eg</w>": 4101,
    "eigen": 4102,
    "either:</w>": 4103,
    "either</w>": 4104,
    "el": 4105,
    "ele": 4106,
    "elemen": 4107,
    "element": 4108,
    "element-": 4109,
    "element-wise</w>": 4110,
    "element</w>": 4111,
    "elements.</w>": 4112,
    "elements</w>": 4113,
    "ellip": 4114,
    "ellipsis</w>": 4115,
    "else:</w>": 4116,
    "else</w>": 4117,
    "em": 4118,
    "emb_": 4119,
    "embed": 4120,
    "embed.": 4121,
    "embed.weight.": 4122,
    "embedding": 4123,
    "embeddings</w>": 4124,
    "emp": 4125,
    "emplo": 4126,
    "employed</w>": 4127,
    "empty": 4128,
    "empty</w>": 4129,
    "emptyvalue:</w>": 4130,
    "en": 4131,
    "en-": 4132,
    "en-us</w>": 4133,
    "en.": 4134,
    "en.wikipedia.": 4135,
    "en.wikipedia.org</w>": 4136,
    "en</w>": 4137,
    "enabled": 4138,
    "enabled'</w>": 4139,
    "enc": 4140,
    "enco": 4141,
    "encode": 4142,
    "encode(\"": 4143,
    "encode.": 4144,
    "encoding": 4145,
    "encoding)</w>": 4146,
    "encoding,</w>": 4147,
    "encoding:</w>": 4148,
    "encoding</w>": 4149,
    "encoding=": 4150,
    "encoding=encoding,</w>": 4151,
    "encodings</w>": 4152,
    "encryp": 4153,
    "encryption</w>": 4154,
    "end": 4155,
    "end):</w>": 4156,
    "end=": 4157,
    "end='2017": 4158,
    "end='2017-01-04',</w>": 4159,
    "end=none,</w>": 4160,
    "end_": 4161,
    "end_date</w>": 4162,
    "end_index</w>": 4163,
    "end_logit=": 4164,
    "end_position</w>": 4165,
    "end_slice</w>": 4166,
    "enfor": 4167,
    "engine": 4168,
    "engine.": 4169,
    "engine.execute": 4170,
    "engine.execute(\"select</w>": 4171,
    "engine</w>": 4172,
    "enh": 4173,
    "enou": 4174,
    "enough</w>": 4175,
    "ensure</w>": 4176,
    "ensure_": 4177,
    "ensure_index(": 4178,
    "ensure_index_from_": 4179,
    "ensure_index_from_sequence": 4180,
    "ensure_int64(": 4181,
    "ensure_object(": 4182,
    "ensure_platform_": 4183,
    "ensures</w>": 4184,
    "enti": 4185,
    "entire</w>": 4186,
    "entrie": 4187,
    "entries,</w>": 4188,
    "entries</w>": 4189,
    "entry.": 4190,
    "entry</w>": 4191,
    "enumerate": 4192,
    "enumerate(": 4193,
    "envi": 4194,
    "environ": 4195,
    "environmen": 4196,
    "ep": 4197,
    "epms,</w>": 4198,
    "epoch": 4199,
    "epoch.": 4200,
    "epoch_": 4201,
    "epoch_id)</w>": 4202,
    "epoch_id</w>": 4203,
    "eq": 4204,
    "equ": 4205,
    "equal": 4206,
    "equals(": 4207,
    "equals</w>": 4208,
    "equi": 4209,
    "equivalen": 4210,
    "equivalent.</w>": 4211,
    "equivalent</w>": 4212,
    "er": 4213,
    "er</w>": 4214,
    "err": 4215,
    "error": 4216,
    "error):</w>": 4217,
    "error:</w>": 4218,
    "error_": 4219,
    "error_msg": 4220,
    "errors,</w>": 4221,
    "errors</w>": 4222,
    "errors=": 4223,
    "errors='raise": 4224,
    "errors='raise'):</w>": 4225,
    "errors=error": 4226,
    "errors=errors)</w>": 4227,
    "es.</w>": 4228,
    "es</w>": 4229,
    "esc": 4230,
    "escape": 4231,
    "escape_char": 4232,
    "escapequote": 4233,
    "escaping": 4234,
    "especially</w>": 4235,
    "essentially</w>": 4236,
    "estimate</w>": 4237,
    "estimation</w>": 4238,
    "estimator": 4239,
    "estimatorparammap": 4240,
    "et": 4241,
    "et</w>": 4242,
    "etc)</w>": 4243,
    "etc.": 4244,
    "etc.</w>": 4245,
    "ets</w>": 4246,
    "euclide": 4247,
    "euclidean</w>": 4248,
    "eval": 4249,
    "eval</w>": 4250,
    "eval_": 4251,
    "evaltype=": 4252,
    "evalu": 4253,
    "evaluate": 4254,
    "evaluate</w>": 4255,
    "evaluate_": 4256,
    "evaluates</w>": 4257,
    "evaluation.</w>": 4258,
    "evaluation</w>": 4259,
    "evaluator": 4260,
    "evaluator</w>": 4261,
    "even": 4262,
    "even</w>": 4263,
    "evenly</w>": 4264,
    "event</w>": 4265,
    "every": 4266,
    "every</w>": 4267,
    "everything</w>": 4268,
    "evol": 4269,
    "evolving.</w>": 4270,
    "ew": 4271,
    "ex": 4272,
    "exact": 4273,
    "exact</w>": 4274,
    "exactly</w>": 4275,
    "example": 4276,
    "example,</w>": 4277,
    "example.is_": 4278,
    "example.is_impossible:</w>": 4279,
    "examples)</w>": 4280,
    "examples:</w>": 4281,
    "examples</w>": 4282,
    "exce": 4283,
    "excel": 4284,
    "excel.": 4285,
    "excep": 4286,
    "except</w>": 4287,
    "exception": 4288,
    "exception).</w>": 4289,
    "exception:</w>": 4290,
    "exception_": 4291,
    "exceptions.</w>": 4292,
    "exceptions</w>": 4293,
    "exclu": 4294,
    "exclude</w>": 4295,
    "excluding</w>": 4296,
    "exec": 4297,
    "execute": 4298,
    "execute</w>": 4299,
    "executed</w>": 4300,
    "execution.": 4301,
    "execution.arrow.": 4302,
    "execution</w>": 4303,
    "exist": 4304,
    "existing": 4305,
    "existing</w>": 4306,
    "existing_": 4307,
    "exists,</w>": 4308,
    "exists.</w>": 4309,
    "exp": 4310,
    "exp(": 4311,
    "expen": 4312,
    "expensi": 4313,
    "expensive.</w>": 4314,
    "expensive</w>": 4315,
    "experimen": 4316,
    "experimental.</w>": 4317,
    "experimental</w>": 4318,
    "expli": 4319,
    "explicit</w>": 4320,
    "explicitly</w>": 4321,
    "expmean)</w>": 4322,
    "expmean</w>": 4323,
    "exponen": 4324,
    "exponent</w>": 4325,
    "expr": 4326,
    "expression": 4327,
    "expression.</w>": 4328,
    "expressions.": 4329,
    "expressions.</w>": 4330,
    "expressions</w>": 4331,
    "expstd)</w>": 4332,
    "expstd</w>": 4333,
    "exten": 4334,
    "extend_": 4335,
    "extension": 4336,
    "extension</w>": 4337,
    "extension_": 4338,
    "extensionarray</w>": 4339,
    "exter": 4340,
    "external</w>": 4341,
    "extra:</w>": 4342,
    "extra</w>": 4343,
    "extra=none):</w>": 4344,
    "extra_": 4345,
    "extract</w>": 4346,
    "extract_": 4347,
    "extracted</w>": 4348,
    "eye": 4349,
    "f": 4350,
    "f',</w>": 4351,
    "f(": 4352,
    "f(</w>": 4353,
    "f):</w>": 4354,
    "f)</w>": 4355,
    "f,</w>": 4356,
    "f-": 4357,
    "f.": 4358,
    "f.close()</w>": 4359,
    "f.log_": 4360,
    "f.log_softmax(": 4361,
    "f1": 4362,
    "f2=u'row": 4363,
    "f8": 4364,
    "f8')])</w>": 4365,
    "f:</w>": 4366,
    "f</w>": 4367,
    "f=": 4368,
    "f_": 4369,
    "fa": 4370,
    "face</w>": 4371,
    "face_": 4372,
    "face_location": 4373,
    "factori": 4374,
    "factoriz": 4375,
    "fail": 4376,
    "fail_": 4377,
    "fail_on_": 4378,
    "fail_on_stopiteration(": 4379,
    "failfast</w>": 4380,
    "fails,</w>": 4381,
    "fails</w>": 4382,
    "fal": 4383,
    "falcon": 4384,
    "falcon</w>": 4385,
    "fall": 4386,
    "fallback</w>": 4387,
    "falls</w>": 4388,
    "false": 4389,
    "false).</w>": 4390,
    "false)</w>": 4391,
    "false,</w>": 4392,
    "false])</w>": 4393,
    "false],</w>": 4394,
    "false},</w>": 4395,
    "fast</w>": 4396,
    "fastpath": 4397,
    "fastpath=true)</w>": 4398,
    "fe": 4399,
    "feat": 4400,
    "feature": 4401,
    "feature</w>": 4402,
    "feature_": 4403,
    "featuresinfo": 4404,
    "featuresubset": 4405,
    "featuresubsetstrate": 4406,
    "featuresubsetstrateg": 4407,
    "fer": 4408,
    "fer</w>": 4409,
    "feren": 4410,
    "ferred</w>": 4411,
    "fet": 4412,
    "fetchall()</w>": 4413,
    "fewer</w>": 4414,
    "ff": 4415,
    "ff.": 4416,
    "ff</w>": 4417,
    "ffect</w>": 4418,
    "ffer": 4419,
    "ffer</w>": 4420,
    "ffff": 4421,
    "ffi": 4422,
    "fficien": 4423,
    "ffill": 4424,
    "ffill:</w>": 4425,
    "ffix": 4426,
    "ffle": 4427,
    "fi": 4428,
    "fiden": 4429,
    "fie": 4430,
    "fiel": 4431,
    "field": 4432,
    "field(": 4433,
    "field</w>": 4434,
    "field_to_": 4435,
    "fieldifall": 4436,
    "fields,</w>": 4437,
    "fields.</w>": 4438,
    "fields:</w>": 4439,
    "fig": 4440,
    "fig.": 4441,
    "fig.add_": 4442,
    "fig.add_subplot(2,</w>": 4443,
    "fig.subplot": 4444,
    "fig.subplots_": 4445,
    "fig.subplots_adjust(": 4446,
    "figsize</w>": 4447,
    "figsize=": 4448,
    "figsize=fig": 4449,
    "figsize=figsize,</w>": 4450,
    "figure": 4451,
    "figure()</w>": 4452,
    "fil": 4453,
    "file": 4454,
    "file(": 4455,
    "file))</w>": 4456,
    "file).strip()</w>": 4457,
    "file):</w>": 4458,
    "file)</w>": 4459,
    "file,</w>": 4460,
    "file-": 4461,
    "file-like</w>": 4462,
    "file.": 4463,
    "file:</w>": 4464,
    "file</w>": 4465,
    "file_": 4466,
    "fileinput</w>": 4467,
    "files,</w>": 4468,
    "files.": 4469,
    "files.</w>": 4470,
    "files:</w>": 4471,
    "fill": 4472,
    "fill',</w>": 4473,
    "fill'</w>": 4474,
    "fill(": 4475,
    "fill</w>": 4476,
    "fill_": 4477,
    "fill_method</w>": 4478,
    "fill_value": 4479,
    "fill_value))</w>": 4480,
    "fill_value)</w>": 4481,
    "fill_value,</w>": 4482,
    "fill_value=": 4483,
    "fill_value=fill_value)</w>": 4484,
    "fill_value=fill_value,</w>": 4485,
    "fill_zero": 4486,
    "fillna(": 4487,
    "fillna</w>": 4488,
    "fillna_": 4489,
    "filt</w>": 4490,
    "filter": 4491,
    "filter</w>": 4492,
    "filter_": 4493,
    "finali": 4494,
    "finalize__": 4495,
    "finalize__(self)</w>": 4496,
    "find_common_type</w>": 4497,
    "fine": 4498,
    "fine-": 4499,
    "fine</w>": 4500,
    "fined</w>": 4501,
    "fines</w>": 4502,
    "fir": 4503,
    "first": 4504,
    "first</w>": 4505,
    "first_": 4506,
    "first_row": 4507,
    "fit_": 4508,
    "five</w>": 4509,
    "fix": 4510,
    "fixed-": 4511,
    "fixed-size</w>": 4512,
    "fixed-width</w>": 4513,
    "fixed</w>": 4514,
    "fixme:</w>": 4515,
    "fl": 4516,
    "flag": 4517,
    "flag</w>": 4518,
    "flags.": 4519,
    "flat": 4520,
    "flavor</w>": 4521,
    "flected</w>": 4522,
    "flet": 4523,
    "fletcher": 4524,
    "fletcher32</w>": 4525,
    "flex</w>": 4526,
    "flex_": 4527,
    "flexi": 4528,
    "flexible</w>": 4529,
    "fli": 4530,
    "flo": 4531,
    "float": 4532,
    "float,</w>": 4533,
    "float16</w>": 4534,
    "float32,</w>": 4535,
    "float32.</w>": 4536,
    "float32</w>": 4537,
    "float64": 4538,
    "float64(": 4539,
    "float64)</w>": 4540,
    "float64:": 4541,
    "float64:sparse</w>": 4542,
    "float64</w>": 4543,
    "float</w>": 4544,
    "float=": 4545,
    "float_": 4546,
    "float_dtype(": 4547,
    "float_format</w>": 4548,
    "floating": 4549,
    "floating-": 4550,
    "floating-point</w>": 4551,
    "florid": 4552,
    "florida</w>": 4553,
    "flow": 4554,
    "flow.": 4555,
    "flow:</w>": 4556,
    "flow</w>": 4557,
    "flush": 4558,
    "flush()</w>": 4559,
    "fm": 4560,
    "fmt.": 4561,
    "fmt.startswith": 4562,
    "fmt.startswith((\"</w>": 4563,
    "fmt</w>": 4564,
    "fn</w>": 4565,
    "fn_": 4566,
    "fname,</w>": 4567,
    "fname</w>": 4568,
    "fname_": 4569,
    "fo": 4570,
    "fol": 4571,
    "follo": 4572,
    "following</w>": 4573,
    "fon": 4574,
    "font": 4575,
    "font.": 4576,
    "fontsize=self.": 4577,
    "fontsize=self.font": 4578,
    "fontsize=self.fontsize)</w>": 4579,
    "foo": 4580,
    "footer": 4581,
    "for": 4582,
    "for</w>": 4583,
    "for_": 4584,
    "for_categorie": 4585,
    "for_dtype(np.": 4586,
    "force</w>": 4587,
    "force_": 4588,
    "forci": 4589,
    "forcibly</w>": 4590,
    "fore": 4591,
    "fore</w>": 4592,
    "foreach": 4593,
    "form": 4594,
    "form</w>": 4595,
    "form_": 4596,
    "forman": 4597,
    "format": 4598,
    "format(": 4599,
    "format,</w>": 4600,
    "format.": 4601,
    "format:</w>": 4602,
    "format</w>": 4603,
    "format=": 4604,
    "format=none,</w>": 4605,
    "format_": 4606,
    "formatted</w>": 4607,
    "formatter": 4608,
    "formatter</w>": 4609,
    "formatting</w>": 4610,
    "formed": 4611,
    "formed</w>": 4612,
    "forming</w>": 4613,
    "forms</w>": 4614,
    "forw": 4615,
    "forward</w>": 4616,
    "fp": 4617,
    "fr</w>": 4618,
    "frac</w>": 4619,
    "fraction": 4620,
    "fraction</w>": 4621,
    "fraction=": 4622,
    "frame": 4623,
    "frame's</w>": 4624,
    "frame,</w>": 4625,
    "frame.": 4626,
    "frame[class_column": 4627,
    "frame[col_": 4628,
    "frame[col_name]</w>": 4629,
    "frame_": 4630,
    "france</w>": 4631,
    "fre": 4632,
    "fred</w>": 4633,
    "free": 4634,
    "freedo": 4635,
    "freedom.</w>": 4636,
    "freedom</w>": 4637,
    "freq": 4638,
    "freq)</w>": 4639,
    "freq,</w>": 4640,
    "freq:</w>": 4641,
    "freq</w>": 4642,
    "freq=": 4643,
    "freq='": 4644,
    "freq='3": 4645,
    "freq='3m')</w>": 4646,
    "freq='d": 4647,
    "freq='d')</w>": 4648,
    "freq='q": 4649,
    "freq='t": 4650,
    "freq='t')</w>": 4651,
    "freq=freq)</w>": 4652,
    "freq_": 4653,
    "freq_code": 4654,
    "freq_infer</w>": 4655,
    "frequen": 4656,
    "frequenc": 4657,
    "frequency</w>": 4658,
    "frequent</w>": 4659,
    "fri": 4660,
    "friend": 4661,
    "friendly</w>": 4662,
    "fro": 4663,
    "from": 4664,
    "from</w>": 4665,
    "from_": 4666,
    "from_t": 4667,
    "from_tf:</w>": 4668,
    "fsyn": 4669,
    "ftp</w>": 4670,
    "ftypes</w>": 4671,
    "ful": 4672,
    "ful</w>": 4673,
    "fully-": 4674,
    "fully-qualified</w>": 4675,
    "fully</w>": 4676,
    "fun,</w>": 4677,
    "func": 4678,
    "func(": 4679,
    "func(\"": 4680,
    "func(iterator):</w>": 4681,
    "func):</w>": 4682,
    "func)</w>": 4683,
    "func:</w>": 4684,
    "func</w>": 4685,
    "func=": 4686,
    "func_": 4687,
    "func_n": 4688,
    "function": 4689,
    "function(</w>": 4690,
    "function(self._": 4691,
    "function).</w>": 4692,
    "function.</w>": 4693,
    "function:</w>": 4694,
    "function</w>": 4695,
    "functions,</w>": 4696,
    "functions.": 4697,
    "functions:</w>": 4698,
    "functions</w>": 4699,
    "fur": 4700,
    "further</w>": 4701,
    "future": 4702,
    "future,</w>": 4703,
    "futurewarning,</w>": 4704,
    "fw_": 4705,
    "fy</w>": 4706,
    "g": 4707,
    "g\"</w>": 4708,
    "g,</w>": 4709,
    "g.": 4710,
    "g.</w>": 4711,
    "g.nth": 4712,
    "g2,</w>": 4713,
    "g</w>": 4714,
    "g_": 4715,
    "gain</w>": 4716,
    "gamma</w>": 4717,
    "gap": 4718,
    "gap</w>": 4719,
    "gaps</w>": 4720,
    "gate": 4721,
    "gateway": 4722,
    "gateway.": 4723,
    "gaussi": 4724,
    "gaussian</w>": 4725,
    "gb": 4726,
    "gbq</w>": 4727,
    "gc": 4728,
    "gd": 4729,
    "gdp</w>": 4730,
    "ge": 4731,
    "ge</w>": 4732,
    "ged::</w>": 4733,
    "ged</w>": 4734,
    "gen": 4735,
    "gen_": 4736,
    "gene": 4737,
    "general": 4738,
    "generi": 4739,
    "generic</w>": 4740,
    "ger": 4741,
    "ger.": 4742,
    "ger</w>": 4743,
    "ges</w>": 4744,
    "get": 4745,
    "get</w>": 4746,
    "get_": 4747,
    "get_dummie": 4748,
    "get_duplicates()</w>": 4749,
    "get_group_": 4750,
    "get_indexer_": 4751,
    "get_indexer_for": 4752,
    "get_loc(": 4753,
    "get_loc</w>": 4754,
    "get_op_result_": 4755,
    "get_option": 4756,
    "get_return_": 4757,
    "get_return_value</w>": 4758,
    "get_used_": 4759,
    "get_used_memory()</w>": 4760,
    "get_values()</w>": 4761,
    "getattr": 4762,
    "getattr(": 4763,
    "getattr(other,</w>": 4764,
    "getattr(self.": 4765,
    "getattr(self._j": 4766,
    "getattr(self._jc,</w>": 4767,
    "getattr(self.attrs,</w>": 4768,
    "gether.</w>": 4769,
    "gether</w>": 4770,
    "getjavastoragelevel(": 4771,
    "getjavastoragelevel(storagelevel)</w>": 4772,
    "getnumpartition": 4773,
    "getnumpartitions()</w>": 4774,
    "getor": 4775,
    "getorcreate": 4776,
    "getorcreate()</w>": 4777,
    "getting</w>": 4778,
    "getvalue()</w>": 4779,
    "gh": 4780,
    "gh.</w>": 4781,
    "gh</w>": 4782,
    "ght</w>": 4783,
    "gi": 4784,
    "gin": 4785,
    "gine": 4786,
    "gine</w>": 4787,
    "ging": 4788,
    "ging</w>": 4789,
    "gini": 4790,
    "gith": 4791,
    "githu": 4792,
    "github.": 4793,
    "github.com</w>": 4794,
    "give</w>": 4795,
    "given": 4796,
    "given,</w>": 4797,
    "given.</w>": 4798,
    "given</w>": 4799,
    "gives</w>": 4800,
    "glo": 4801,
    "glob": 4802,
    "global": 4803,
    "globals,</w>": 4804,
    "glom().collect()</w>": 4805,
    "gmen": 4806,
    "go": 4807,
    "goes</w>": 4808,
    "going</w>": 4809,
    "goo": 4810,
    "good,</w>": 4811,
    "good</w>": 4812,
    "goog": 4813,
    "google": 4814,
    "google-": 4815,
    "google-auth": 4816,
    "google-auth-": 4817,
    "google-auth-oauthlib.readthedocs.io</w>": 4818,
    "google.": 4819,
    "google.auth": 4820,
    "google.auth.": 4821,
    "google.oauth": 4822,
    "google.oauth2.": 4823,
    "google.oauth2.service_ac": 4824,
    "google.oauth2.service_account.": 4825,
    "google.oauth2.service_account.credentials.": 4826,
    "google.oauth2.service_account.credentials.from_": 4827,
    "google.oauth2.service_account.credentials.from_service_ac": 4828,
    "google.oauth2.service_account.credentials.from_service_account_": 4829,
    "google</w>": 4830,
    "google_": 4831,
    "google_auth_": 4832,
    "google_auth_oauthlib.": 4833,
    "google_auth_oauthlib.flow.": 4834,
    "google_auth_oauthlib.flow.html</w>": 4835,
    "google_auth_oauthlib.flow.in": 4836,
    "google_auth_oauthlib.flow.installed": 4837,
    "google_auth_oauthlib.flow.installedapp": 4838,
    "gor": 4839,
    "gorith": 4840,
    "gos.": 4841,
    "got:</w>": 4842,
    "got</w>": 4843,
    "gp": 4844,
    "gpr": 4845,
    "gpt2": 4846,
    "gr": 4847,
    "grad_": 4848,
    "grad_nor": 4849,
    "gradien": 4850,
    "gradient": 4851,
    "gradient</w>": 4852,
    "gradientboo": 4853,
    "graphi": 4854,
    "gre": 4855,
    "greater</w>": 4856,
    "green": 4857,
    "gress</w>": 4858,
    "grid": 4859,
    "grid</w>": 4860,
    "gridsize</w>": 4861,
    "group": 4862,
    "group(": 4863,
    "group,</w>": 4864,
    "group._": 4865,
    "group._v_": 4866,
    "group</w>": 4867,
    "group_": 4868,
    "group_index</w>": 4869,
    "group_info</w>": 4870,
    "groupby": 4871,
    "groupeddata.": 4872,
    "grouper": 4873,
    "grouper,</w>": 4874,
    "grouper.": 4875,
    "grouper</w>": 4876,
    "groupers</w>": 4877,
    "grouping": 4878,
    "groupings)</w>": 4879,
    "groupings,</w>": 4880,
    "groupings</w>": 4881,
    "groups,</w>": 4882,
    "groups.</w>": 4883,
    "groups</w>": 4884,
    "groupsort_": 4885,
    "gso": 4886,
    "gso_": 4887,
    "gt": 4888,
    "gu": 4889,
    "guaran": 4890,
    "guarante": 4891,
    "guarantee</w>": 4892,
    "guaranteed</w>": 4893,
    "guarantees</w>": 4894,
    "guide</w>": 4895,
    "gw.": 4896,
    "gzip": 4897,
    "gzip',</w>": 4898,
    "h": 4899,
    "h)</w>": 4900,
    "h,</w>": 4901,
    "h5": 4902,
    "h5',</w>": 4903,
    "h:": 4904,
    "h:mm": 4905,
    "h:mm:": 4906,
    "h:mm:ss.": 4907,
    "h</w>": 4908,
    "hack</w>": 4909,
    "had</w>": 4910,
    "hado": 4911,
    "hadoop": 4912,
    "hadoop-": 4913,
    "hadoop-supported</w>": 4914,
    "hadoop.io.": 4915,
    "hadoop</w>": 4916,
    "hal": 4917,
    "half-": 4918,
    "half</w>": 4919,
    "ham</w>": 4920,
    "hand": 4921,
    "handle": 4922,
    "handle</w>": 4923,
    "handle_": 4924,
    "handled</w>": 4925,
    "handler</w>": 4926,
    "handles</w>": 4927,
    "handling.</w>": 4928,
    "handling</w>": 4929,
    "hap": 4930,
    "hard": 4931,
    "hard</w>": 4932,
    "has": 4933,
    "has</w>": 4934,
    "has_": 4935,
    "hasattr": 4936,
    "hasattr(": 4937,
    "hasattr(ax,</w>": 4938,
    "hasattr(m,</w>": 4939,
    "hash": 4940,
    "hash_": 4941,
    "hash_key,</w>": 4942,
    "hash_key</w>": 4943,
    "hashable": 4944,
    "hashable</w>": 4945,
    "hasnans:</w>": 4946,
    "hassummary:</w>": 4947,
    "have</w>": 4948,
    "have_": 4949,
    "having</w>": 4950,
    "hdf": 4951,
    "hdf('data.": 4952,
    "hdf('data.h5',</w>": 4953,
    "hdf.": 4954,
    "hdf5</w>": 4955,
    "hdf</w>": 4956,
    "hdfs,</w>": 4957,
    "hdfs:</w>": 4958,
    "hdfs</w>": 4959,
    "hdfstore</w>": 4960,
    "he": 4961,
    "head": 4962,
    "head</w>": 4963,
    "head_": 4964,
    "header": 4965,
    "header,</w>": 4966,
    "header=": 4967,
    "header=header,</w>": 4968,
    "headers</w>": 4969,
    "heap": 4970,
    "heap,</w>": 4971,
    "heap[": 4972,
    "heap[0]</w>": 4973,
    "heapif": 4974,
    "heapq.": 4975,
    "heapreplace</w>": 4976,
    "heig": 4977,
    "height</w>": 4978,
    "height=": 4979,
    "height=8": 4980,
    "height=80),</w>": 4981,
    "height=85),</w>": 4982,
    "height=85)]</w>": 4983,
    "hel": 4984,
    "help</w>": 4985,
    "helper</w>": 4986,
    "here": 4987,
    "here,</w>": 4988,
    "hex": 4989,
    "hexagon": 4990,
    "hexagonal</w>": 4991,
    "hexagons</w>": 4992,
    "hi": 4993,
    "hidden_": 4994,
    "hierarchi": 4995,
    "hierarchical</w>": 4996,
    "hig": 4997,
    "high": 4998,
    "highe": 4999,
    "highest</w>": 5000,
    "highest_": 5001,
    "highest_protocol.</w>": 5002,
    "highlight_": 5003,
    "highly</w>": 5004,
    "hist</w>": 5005,
    "histo": 5006,
    "histog": 5007,
    "histogram</w>": 5008,
    "ho": 5009,
    "hog": 5010,
    "hold_": 5011,
    "holiday_": 5012,
    "holiday_dates</w>": 5013,
    "homo": 5014,
    "homogene": 5015,
    "homogeneous</w>": 5016,
    "hoo": 5017,
    "hori": 5018,
    "horiz": 5019,
    "horizon": 5020,
    "horizontal</w>": 5021,
    "host": 5022,
    "hour": 5023,
    "hours</w>": 5024,
    "how": 5025,
    "how)</w>": 5026,
    "how,</w>": 5027,
    "how</w>": 5028,
    "how=": 5029,
    "how=how,</w>": 5030,
    "howe": 5031,
    "however,</w>": 5032,
    "however</w>": 5033,
    "ht": 5034,
    "ht</w>": 5035,
    "html": 5036,
    "html</w>": 5037,
    "http": 5038,
    "http:</w>": 5039,
    "http_": 5040,
    "http_status</w>": 5041,
    "https:</w>": 5042,
    "hu": 5043,
    "human</w>": 5044,
    "hy": 5045,
    "hyd": 5046,
    "i": 5047,
    "i',</w>": 5048,
    "i):</w>": 5049,
    "i)</w>": 5050,
    "i,</w>": 5051,
    "i.": 5052,
    "i.e.,</w>": 5053,
    "i.e.</w>": 5054,
    "i.i.": 5055,
    "i.i.d.</w>": 5056,
    "i8": 5057,
    "i8'),</w>": 5058,
    "i8')</w>": 5059,
    "i:</w>": 5060,
    "i</w>": 5061,
    "i=": 5062,
    "i]</w>": 5063,
    "ibase.": 5064,
    "ibase.default_": 5065,
    "ibm</w>": 5066,
    "icewe": 5067,
    "id": 5068,
    "id\",</w>": 5069,
    "id':</w>": 5070,
    "id'</w>": 5071,
    "id))</w>": 5072,
    "id):</w>": 5073,
    "id)</w>": 5074,
    "id,</w>": 5075,
    "id</w>": 5076,
    "id=": 5077,
    "idden_": 5078,
    "ide</w>": 5079,
    "idempo": 5080,
    "idempoten": 5081,
    "identi": 5082,
    "identical</w>": 5083,
    "identif": 5084,
    "identifying</w>": 5085,
    "ids)</w>": 5086,
    "ids,</w>": 5087,
    "ids</w>": 5088,
    "idx": 5089,
    "idx.": 5090,
    "idx.set_name": 5091,
    "idx.slice_": 5092,
    "idx1.": 5093,
    "idx1</w>": 5094,
    "idx2)</w>": 5095,
    "idx2</w>": 5096,
    "idx</w>": 5097,
    "idx]</w>": 5098,
    "ie": 5099,
    "ie10</w>": 5100,
    "iee": 5101,
    "ieee": 5102,
    "ieee</w>": 5103,
    "iel": 5104,
    "ierarchi": 5105,
    "if": 5106,
    "if</w>": 5107,
    "if_": 5108,
    "if_exist": 5109,
    "ig": 5110,
    "igen": 5111,
    "igh": 5112,
    "ignore": 5113,
    "ignore_": 5114,
    "ignore_exception_": 5115,
    "ignore_exception_detail</w>": 5116,
    "ignore_index</w>": 5117,
    "ignore_index=true)</w>": 5118,
    "ignored": 5119,
    "ignored).</w>": 5120,
    "ignorele": 5121,
    "ignoreleading": 5122,
    "ignoreleadingwhitespace:</w>": 5123,
    "ignoretrailing": 5124,
    "ignoretrailingwhitespace:</w>": 5125,
    "ignoring</w>": 5126,
    "ij</w>": 5127,
    "il": 5128,
    "ill": 5129,
    "illa</w>": 5130,
    "im": 5131,
    "ima": 5132,
    "image": 5133,
    "image,</w>": 5134,
    "image_": 5135,
    "imal</w>": 5136,
    "imate</w>": 5137,
    "imately</w>": 5138,
    "img": 5139,
    "img:</w>": 5140,
    "img_": 5141,
    "immedi": 5142,
    "immediately</w>": 5143,
    "imple": 5144,
    "implemen": 5145,
    "implementation.</w>": 5146,
    "implementation</w>": 5147,
    "implemented</w>": 5148,
    "impli": 5149,
    "implicit</w>": 5150,
    "implicitly</w>": 5151,
    "impor": 5152,
    "import(": 5153,
    "import</w>": 5154,
    "importerror": 5155,
    "importerror(\"": 5156,
    "importerror:</w>": 5157,
    "impossible:</w>": 5158,
    "in": 5159,
    "in-": 5160,
    "in-place.</w>": 5161,
    "in-place</w>": 5162,
    "in.</w>": 5163,
    "in</w>": 5164,
    "inc</w>": 5165,
    "inches</w>": 5166,
    "inclu": 5167,
    "include": 5168,
    "include,</w>": 5169,
    "include</w>": 5170,
    "include=": 5171,
    "include_": 5172,
    "including</w>": 5173,
    "inclusi": 5174,
    "inclusive.</w>": 5175,
    "incomparable</w>": 5176,
    "incompati": 5177,
    "incompatible</w>": 5178,
    "incorrect</w>": 5179,
    "incre": 5180,
    "increase</w>": 5181,
    "increasing</w>": 5182,
    "incremen": 5183,
    "incremental</w>": 5184,
    "ind": 5185,
    "ind</w>": 5186,
    "inden": 5187,
    "indent_": 5188,
    "independen": 5189,
    "independent</w>": 5190,
    "index": 5191,
    "index')</w>": 5192,
    "index(": 5193,
    "index(['2017": 5194,
    "index(['2018-01-01',</w>": 5195,
    "index(['2018-01-31',</w>": 5196,
    "index([1,</w>": 5197,
    "index(multiindex).</w>": 5198,
    "index)):</w>": 5199,
    "index))</w>": 5200,
    "index),</w>": 5201,
    "index):</w>": 5202,
    "index)</w>": 5203,
    "index,</w>": 5204,
    "index.": 5205,
    "index.</w>": 5206,
    "index._": 5207,
    "index._simple_new": 5208,
    "index:</w>": 5209,
    "index;</w>": 5210,
    "index</w>": 5211,
    "index=": 5212,
    "index=['a',</w>": 5213,
    "index=['cat',</w>": 5214,
    "index=['falcon',</w>": 5215,
    "index=[1,</w>": 5216,
    "index=i)</w>": 5217,
    "index=index)</w>": 5218,
    "index=index,</w>": 5219,
    "index=left.index,</w>": 5220,
    "index=pd.datetime": 5221,
    "index=true)</w>": 5222,
    "index]</w>": 5223,
    "index_": 5224,
    "index_col": 5225,
    "index_col,</w>": 5226,
    "index_col=": 5227,
    "index_col=index_col,</w>": 5228,
    "index_from_": 5229,
    "index_label": 5230,
    "index_like</w>": 5231,
    "index_names,</w>": 5232,
    "index_names</w>": 5233,
    "indexable": 5234,
    "indexable</w>": 5235,
    "indexables</w>": 5236,
    "indexe": 5237,
    "indexed": 5238,
    "indexed</w>": 5239,
    "indexedrow": 5240,
    "indexer": 5241,
    "indexer(": 5242,
    "indexer):</w>": 5243,
    "indexer)</w>": 5244,
    "indexer,</w>": 5245,
    "indexer</w>": 5246,
    "indexer]</w>": 5247,
    "indexer_": 5248,
    "indexers,</w>": 5249,
    "indexers.</w>": 5250,
    "indexers</w>": 5251,
    "indexes)</w>": 5252,
    "indexes,</w>": 5253,
    "indexes.</w>": 5254,
    "indexes:</w>": 5255,
    "indexes</w>": 5256,
    "indexes[0]</w>": 5257,
    "indexing</w>": 5258,
    "indexslice</w>": 5259,
    "indi": 5260,
    "indic": 5261,
    "indicating</w>": 5262,
    "indice": 5263,
    "indices)</w>": 5264,
    "indices,</w>": 5265,
    "indices.</w>": 5266,
    "indices_": 5267,
    "individ": 5268,
    "individu": 5269,
    "individual</w>": 5270,
    "ine": 5271,
    "inf": 5272,
    "infer": 5273,
    "infer</w>": 5274,
    "infer_": 5275,
    "infer_datetime_": 5276,
    "infer_datetime_format</w>": 5277,
    "infer_dtype_": 5278,
    "infer_nrows</w>": 5279,
    "inferen": 5280,
    "inference</w>": 5281,
    "inferred</w>": 5282,
    "inferred_": 5283,
    "inferred_type</w>": 5284,
    "infers</w>": 5285,
    "inferschema</w>": 5286,
    "infl": 5287,
    "influence</w>": 5288,
    "info": 5289,
    "info,</w>": 5290,
    "info</w>": 5291,
    "info_": 5292,
    "info_axis</w>": 5293,
    "info_axis_": 5294,
    "info_columns</w>": 5295,
    "ing": 5296,
    "ing</w>": 5297,
    "ini": 5298,
    "init__.</w>": 5299,
    "initi": 5300,
    "initial": 5301,
    "initiali": 5302,
    "initializ": 5303,
    "initialization": 5304,
    "initialize</w>": 5305,
    "initialmodel": 5306,
    "initialpositionin": 5307,
    "inn": 5308,
    "inner": 5309,
    "inner-": 5310,
    "inner-most</w>": 5311,
    "inplace": 5312,
    "inplace()</w>": 5313,
    "inplace)</w>": 5314,
    "inplace,</w>": 5315,
    "inplace=": 5316,
    "inplace=inplace)</w>": 5317,
    "inplace=inplace,</w>": 5318,
    "inplace_": 5319,
    "inpu": 5320,
    "input(": 5321,
    "input</w>": 5322,
    "input_": 5323,
    "input_id": 5324,
    "input_kwargs</w>": 5325,
    "input_mask,</w>": 5326,
    "input_mask</w>": 5327,
    "inser": 5328,
    "insert</w>": 5329,
    "inserted</w>": 5330,
    "inserting</w>": 5331,
    "insertion</w>": 5332,
    "inside</w>": 5333,
    "inspect.": 5334,
    "install</w>": 5335,
    "installed</w>": 5336,
    "instan": 5337,
    "instance,</w>": 5338,
    "instance.</w>": 5339,
    "instance</w>": 5340,
    "instances</w>": 5341,
    "instanti": 5342,
    "instantiate</w>": 5343,
    "inste": 5344,
    "instead": 5345,
    "instead.": 5346,
    "instead.\",</w>": 5347,
    "instead.</w>": 5348,
    "instead;</w>": 5349,
    "instead</w>": 5350,
    "instruction": 5351,
    "int": 5352,
    "int\").collect()</w>": 5353,
    "int\")</w>": 5354,
    "int(": 5355,
    "int),</w>": 5356,
    "int,": 5357,
    "int,</w>": 5358,
    "int16</w>": 5359,
    "int32": 5360,
    "int32</w>": 5361,
    "int64": 5362,
    "int64')</w>": 5363,
    "int64(": 5364,
    "int64):</w>": 5365,
    "int64index([1,</w>": 5366,
    "int64index</w>": 5367,
    "int8</w>": 5368,
    "int</w>": 5369,
    "inte": 5370,
    "integ": 5371,
    "integer": 5372,
    "integer\",</w>": 5373,
    "integer).</w>": 5374,
    "integer-": 5375,
    "integers.</w>": 5376,
    "integers</w>": 5377,
    "integertype()).": 5378,
    "integertype())</w>": 5379,
    "integertype</w>": 5380,
    "inten": 5381,
    "intent.</w>": 5382,
    "inter": 5383,
    "intercep": 5384,
    "interface</w>": 5385,
    "internal</w>": 5386,
    "interpol": 5387,
    "interpolate</w>": 5388,
    "interpolation": 5389,
    "interpolation)</w>": 5390,
    "interpolation</w>": 5391,
    "interpolation=": 5392,
    "interpolation=interpolation)</w>": 5393,
    "interpret</w>": 5394,
    "interpreted</w>": 5395,
    "intersect</w>": 5396,
    "intersection</w>": 5397,
    "interval": 5398,
    "interval</w>": 5399,
    "interval[": 5400,
    "interval[float64": 5401,
    "interval[float64]):</w>": 5402,
    "intro": 5403,
    "introd": 5404,
    "introduced</w>": 5405,
    "ints</w>": 5406,
    "inv": 5407,
    "invalid</w>": 5408,
    "invalid_": 5409,
    "inver": 5410,
    "inverse</w>": 5411,
    "invo": 5412,
    "invoked,</w>": 5413,
    "invoked</w>": 5414,
    "invol": 5415,
    "involved</w>": 5416,
    "invreduce": 5417,
    "io.": 5418,
    "io.excel.": 5419,
    "io.hdf.": 5420,
    "io.parquet.": 5421,
    "io.parquet.engine</w>": 5422,
    "io.sql.": 5423,
    "io.sql.method</w>": 5424,
    "io</w>": 5425,
    "ip": 5426,
    "ipedi": 5427,
    "ipv": 5428,
    "is": 5429,
    "is(": 5430,
    "is)</w>": 5431,
    "is,</w>": 5432,
    "is.": 5433,
    "is.</w>": 5434,
    "is:</w>": 5435,
    "is</w>": 5436,
    "is=": 5437,
    "is]</w>": 5438,
    "is_": 5439,
    "is_bool_dtype(": 5440,
    "is_categorical_dtype(": 5441,
    "is_categorical_dtype(dtype):</w>": 5442,
    "is_datetime64": 5443,
    "is_datetime64_": 5444,
    "is_datetime64_dtype(": 5445,
    "is_datetime64tz_dtype(": 5446,
    "is_datetime64tz_dtype(dtype):</w>": 5447,
    "is_dict_": 5448,
    "is_dict_like(": 5449,
    "is_dtype_": 5450,
    "is_dtype_equal": 5451,
    "is_dtype_equal(self.dtype,</w>": 5452,
    "is_extension_": 5453,
    "is_extension_array_dtype(": 5454,
    "is_extension_array_dtype(dtype):</w>": 5455,
    "is_file_": 5456,
    "is_float_dtype(": 5457,
    "is_hashable": 5458,
    "is_integer": 5459,
    "is_integer(": 5460,
    "is_list_": 5461,
    "is_list_like(": 5462,
    "is_list_like</w>": 5463,
    "is_ne": 5464,
    "is_nested_": 5465,
    "is_nested_list_": 5466,
    "is_object_dtype(": 5467,
    "is_object_dtype(dtype):</w>": 5468,
    "is_period_dtype(": 5469,
    "is_scalar": 5470,
    "is_scalar(": 5471,
    "is_set": 5472,
    "is_timedelta64": 5473,
    "is_timedelta64_dtype(": 5474,
    "is_timedelta64_dtype(dtype):</w>": 5475,
    "is_withreplacement_": 5476,
    "ise</w>": 5477,
    "ish</w>": 5478,
    "isin": 5479,
    "isinstance(": 5480,
    "isinstance(arg,</w>": 5481,
    "isinstance(arr,</w>": 5482,
    "isinstance(ax,</w>": 5483,
    "isinstance(c,</w>": 5484,
    "isinstance(col,</w>": 5485,
    "isinstance(data,</w>": 5486,
    "isinstance(datatype,</w>": 5487,
    "isinstance(dtype,</w>": 5488,
    "isinstance(indexer,</w>": 5489,
    "isinstance(level,</w>": 5490,
    "isinstance(obj,</w>": 5491,
    "isinstance(other,</w>": 5492,
    "isinstance(schema,</w>": 5493,
    "isinstance(subset,</w>": 5494,
    "isinstance(to_replace,</w>": 5495,
    "isn't</w>": 5496,
    "isna(": 5497,
    "iso": 5498,
    "iso86": 5499,
    "iso8601</w>": 5500,
    "isotoni": 5501,
    "isotonicregression": 5502,
    "issub": 5503,
    "issubclass(": 5504,
    "issubclass(dtype.type,</w>": 5505,
    "issubclass(v": 5506,
    "issubclass(vtype,</w>": 5507,
    "issue": 5508,
    "issue\"</w>": 5509,
    "ist": 5510,
    "isting</w>": 5511,
    "isto": 5512,
    "it": 5513,
    "it's</w>": 5514,
    "it</w>": 5515,
    "itable</w>": 5516,
    "ite": 5517,
    "item": 5518,
    "item):</w>": 5519,
    "item)</w>": 5520,
    "items',</w>": 5521,
    "items'</w>": 5522,
    "items</w>": 5523,
    "itemsize</w>": 5524,
    "iter": 5525,
    "iter)</w>": 5526,
    "iterable": 5527,
    "iterable)</w>": 5528,
    "iterable,</w>": 5529,
    "iteration": 5530,
    "iterations:</w>": 5531,
    "iterator": 5532,
    "iterator):</w>": 5533,
    "iterator)</w>": 5534,
    "iterator:</w>": 5535,
    "itertools.": 5536,
    "itertools.ch": 5537,
    "ither:</w>": 5538,
    "ither</w>": 5539,
    "its</w>": 5540,
    "itself.</w>": 5541,
    "itself</w>": 5542,
    "ix": 5543,
    "ix',</w>": 5544,
    "j": 5545,
    "j)</w>": 5546,
    "j,</w>": 5547,
    "j</w>": 5548,
    "j]</w>": 5549,
    "j_": 5550,
    "jan": 5551,
    "janu": 5552,
    "january</w>": 5553,
    "jav": 5554,
    "java": 5555,
    "java(": 5556,
    "java(sc,</w>": 5557,
    "java.": 5558,
    "java.lan": 5559,
    "java.time.": 5560,
    "java.time.format.": 5561,
    "java.time.format.datetimeformatter</w>": 5562,
    "java_": 5563,
    "java_import(": 5564,
    "java_import(gateway.": 5565,
    "java_import(gateway.jvm,</w>": 5566,
    "java_model.": 5567,
    "java_model</w>": 5568,
    "java_stage.get": 5569,
    "java_storage_": 5570,
    "java_storage_level.": 5571,
    "javafunction(</w>": 5572,
    "javastoragelevel(": 5573,
    "javastring": 5574,
    "javastringlength": 5575,
    "javaud": 5576,
    "jc)</w>": 5577,
    "jc</w>": 5578,
    "jd": 5579,
    "jdb": 5580,
    "jdbc</w>": 5581,
    "jdf</w>": 5582,
    "ji": 5583,
    "jira_re": 5584,
    "jo": 5585,
    "joh": 5586,
    "john</w>": 5587,
    "join": 5588,
    "join(": 5589,
    "jor": 5590,
    "jrdd,</w>": 5591,
    "jrdd.": 5592,
    "jrdd</w>": 5593,
    "jrdd_de": 5594,
    "jrdd_deserializer)</w>": 5595,
    "jrdd_deserializer</w>": 5596,
    "json": 5597,
    "json(": 5598,
    "json(orien": 5599,
    "json_": 5600,
    "jsonformat": 5601,
    "jsonlines.": 5602,
    "jsonlines.org</w>": 5603,
    "jsparksession.": 5604,
    "ju</w>": 5605,
    "juli": 5606,
    "jump</w>": 5607,
    "jupy": 5608,
    "jupyter</w>": 5609,
    "just</w>": 5610,
    "justif": 5611,
    "jv": 5612,
    "jvm,</w>": 5613,
    "jvm.": 5614,
    "jvm.java.lan": 5615,
    "jvm.java.lang.": 5616,
    "jvm.org.apache.": 5617,
    "jvm</w>": 5618,
    "k": 5619,
    "k))</w>": 5620,
    "k)</w>": 5621,
    "k,</w>": 5622,
    "k-": 5623,
    "k-1": 5624,
    "k-1}.</w>": 5625,
    "k-means</w>": 5626,
    "k.</w>": 5627,
    "k0</w>": 5628,
    "k1</w>": 5629,
    "k2</w>": 5630,
    "k3</w>": 5631,
    "k4</w>": 5632,
    "k5</w>": 5633,
    "k:</w>": 5634,
    "k</w>": 5635,
    "k=": 5636,
    "k]</w>": 5637,
    "k_": 5638,
    "kasi": 5639,
    "ke": 5640,
    "ke</w>": 5641,
    "ke_": 5642,
    "ked,</w>": 5643,
    "ked</w>": 5644,
    "keep": 5645,
    "keeps</w>": 5646,
    "kele": 5647,
    "ken": 5648,
    "kend": 5649,
    "kendall</w>": 5650,
    "kes</w>": 5651,
    "key": 5652,
    "key\",</w>": 5653,
    "key))</w>": 5654,
    "key):</w>": 5655,
    "key)</w>": 5656,
    "key,</w>": 5657,
    "key-": 5658,
    "key-value</w>": 5659,
    "key</w>": 5660,
    "key=": 5661,
    "key=key)</w>": 5662,
    "key=key,</w>": 5663,
    "key=lambda</w>": 5664,
    "key]</w>": 5665,
    "keyarr</w>": 5666,
    "keyclass:</w>": 5667,
    "keyconverter": 5668,
    "keys()):</w>": 5669,
    "keys())</w>": 5670,
    "keys()</w>": 5671,
    "keys))</w>": 5672,
    "keys):</w>": 5673,
    "keys)</w>": 5674,
    "keys,</w>": 5675,
    "keys.</w>": 5676,
    "keys:</w>": 5677,
    "keys</w>": 5678,
    "keys=": 5679,
    "keyw": 5680,
    "keyword</w>": 5681,
    "key}</w>": 5682,
    "kg</w>": 5683,
    "kids</w>": 5684,
    "kind": 5685,
    "kind)</w>": 5686,
    "kind,</w>": 5687,
    "kind</w>": 5688,
    "kind=": 5689,
    "kind=kind)</w>": 5690,
    "kind=kind,</w>": 5691,
    "kine": 5692,
    "kinesis</w>": 5693,
    "king</w>": 5694,
    "kl": 5695,
    "kline</w>": 5696,
    "kmeans": 5697,
    "knn</w>": 5698,
    "knn_cl": 5699,
    "knn_clf</w>": 5700,
    "kno": 5701,
    "know": 5702,
    "known</w>": 5703,
    "known_": 5704,
    "ko": 5705,
    "koala</w>": 5706,
    "kon": 5707,
    "ks</w>": 5708,
    "kur": 5709,
    "kv": 5710,
    "kw": 5711,
    "kwarg": 5712,
    "kwarg(": 5713,
    "kwargs))</w>": 5714,
    "kwargs):</w>": 5715,
    "kwargs)</w>": 5716,
    "kwargs.": 5717,
    "kwargs:</w>": 5718,
    "kwargs</w>": 5719,
    "kwd": 5720,
    "kwds):</w>": 5721,
    "kwds)</w>": 5722,
    "kwds.": 5723,
    "l": 5724,
    "l)</w>": 5725,
    "l,</w>": 5726,
    "l-": 5727,
    "l.": 5728,
    "l1</w>": 5729,
    "l:</w>": 5730,
    "l</w>": 5731,
    "l[0]</w>": 5732,
    "l_": 5733,
    "la": 5734,
    "la</w>": 5735,
    "lab": 5736,
    "label": 5737,
    "label))</w>": 5738,
    "label,</w>": 5739,
    "label.</w>": 5740,
    "label:</w>": 5741,
    "label=": 5742,
    "label_": 5743,
    "labeled": 5744,
    "labeledpo": 5745,
    "labeledpoint(": 5746,
    "labeledpoint(0.0,</w>": 5747,
    "labeledpoint(1.0,</w>": 5748,
    "labels):</w>": 5749,
    "labels)</w>": 5750,
    "labels,</w>": 5751,
    "labels.": 5752,
    "labels.</w>": 5753,
    "labels:</w>": 5754,
    "labels</w>": 5755,
    "labels=": 5756,
    "labels=none,</w>": 5757,
    "labels}</w>": 5758,
    "lamb": 5759,
    "lambd": 5760,
    "lambda,</w>": 5761,
    "lambda:</w>": 5762,
    "lambda</w>": 5763,
    "lambda_": 5764,
    "lan": 5765,
    "land</w>": 5766,
    "langu": 5767,
    "language</w>": 5768,
    "large": 5769,
    "largest</w>": 5770,
    "last):</w>": 5771,
    "last</w>": 5772,
    "last_": 5773,
    "lastel": 5774,
    "lastelt</w>": 5775,
    "later</w>": 5776,
    "latest</w>": 5777,
    "latex</w>": 5778,
    "layer": 5779,
    "layer_": 5780,
    "layer_str</w>": 5781,
    "ld": 5782,
    "le": 5783,
    "le',</w>": 5784,
    "le,</w>": 5785,
    "le.": 5786,
    "le</w>": 5787,
    "le_": 5788,
    "lead</w>": 5789,
    "leading</w>": 5790,
    "leaf</w>": 5791,
    "learn</w>": 5792,
    "learning</w>": 5793,
    "least</w>": 5794,
    "leave</w>": 5795,
    "lec": 5796,
    "led</w>": 5797,
    "lef": 5798,
    "left": 5799,
    "left),</w>": 5800,
    "left,</w>": 5801,
    "left.": 5802,
    "left.columns)</w>": 5803,
    "left.index,</w>": 5804,
    "left</w>": 5805,
    "left_": 5806,
    "left_indexer,</w>": 5807,
    "left_indexer</w>": 5808,
    "leg": 5809,
    "legacy</w>": 5810,
    "legs</w>": 5811,
    "leli": 5812,
    "len": 5813,
    "len(": 5814,
    "len(args)</w>": 5815,
    "len(cols)</w>": 5816,
    "len(input_id": 5817,
    "len(input_ids)</w>": 5818,
    "len(level)</w>": 5819,
    "len(obj)</w>": 5820,
    "len(other):</w>": 5821,
    "len(rdd.": 5822,
    "len(rdd.take": 5823,
    "len(self.": 5824,
    "len(self.blocks)</w>": 5825,
    "len(seq": 5826,
    "len(seq)</w>": 5827,
    "len(set(": 5828,
    "len(tokens_": 5829,
    "len(with_con": 5830,
    "len))</w>": 5831,
    "len)</w>": 5832,
    "len,</w>": 5833,
    "len</w>": 5834,
    "len]</w>": 5835,
    "leng": 5836,
    "length": 5837,
    "length):</w>": 5838,
    "length,</w>": 5839,
    "length.</w>": 5840,
    "length:</w>": 5841,
    "length</w>": 5842,
    "length=": 5843,
    "length]</w>": 5844,
    "lengths</w>": 5845,
    "lengthstring": 5846,
    "ler</w>": 5847,
    "les</w>": 5848,
    "less</w>": 5849,
    "let": 5850,
    "let's</w>": 5851,
    "lev": 5852,
    "level": 5853,
    "level(s)</w>": 5854,
    "level))</w>": 5855,
    "level):</w>": 5856,
    "level)</w>": 5857,
    "level,</w>": 5858,
    "level.": 5859,
    "level.</w>": 5860,
    "level</w>": 5861,
    "level=": 5862,
    "level='class',</w>": 5863,
    "level=0)</w>": 5864,
    "level=1)</w>": 5865,
    "level=level)</w>": 5866,
    "level=level,</w>": 5867,
    "level_": 5868,
    "level_number(": 5869,
    "level_number(level)</w>": 5870,
    "levels)</w>": 5871,
    "levels,</w>": 5872,
    "levels.</w>": 5873,
    "levels:</w>": 5874,
    "levels</w>": 5875,
    "leven": 5876,
    "levenshte": 5877,
    "lex": 5878,
    "lexi": 5879,
    "lexical</w>": 5880,
    "lexico": 5881,
    "lexicographi": 5882,
    "lexicographically.</w>": 5883,
    "lh": 5884,
    "li": 5885,
    "lib": 5886,
    "lib.": 5887,
    "lib.maybe_convert_": 5888,
    "lib.maybe_convert_object": 5889,
    "lib.path</w>": 5890,
    "lib</w>": 5891,
    "libfreq": 5892,
    "libfreqs._": 5893,
    "libfrequencie": 5894,
    "libfrequencies.get_": 5895,
    "libfrequencies.get_freq_code": 5896,
    "library.</w>": 5897,
    "library</w>": 5898,
    "libsv": 5899,
    "libsvm</w>": 5900,
    "lier</w>": 5901,
    "life": 5902,
    "lifespan": 5903,
    "lifespan</w>": 5904,
    "lifespan},</w>": 5905,
    "light_": 5906,
    "like": 5907,
    "like(": 5908,
    "like(arg,</w>": 5909,
    "like)</w>": 5910,
    "like,</w>": 5911,
    "like.</w>": 5912,
    "like</w>": 5913,
    "likeli": 5914,
    "likelihoo": 5915,
    "likelihood</w>": 5916,
    "likes.</w>": 5917,
    "likes</w>": 5918,
    "lim": 5919,
    "limbs</w>": 5920,
    "limit(invalid,</w>": 5921,
    "limit)</w>": 5922,
    "limit,</w>": 5923,
    "limit</w>": 5924,
    "limit=": 5925,
    "limit=limit)</w>": 5926,
    "limit=limit,</w>": 5927,
    "limit_": 5928,
    "limit_are": 5929,
    "limit_direction": 5930,
    "limited</w>": 5931,
    "lin": 5932,
    "linal": 5933,
    "linalg.": 5934,
    "linalg</w>": 5935,
    "line": 5936,
    "line(": 5937,
    "line)</w>": 5938,
    "line,</w>": 5939,
    "line-": 5940,
    "line-delimited</w>": 5941,
    "line_": 5942,
    "linear</w>": 5943,
    "lines)</w>": 5944,
    "lines,</w>": 5945,
    "lines.": 5946,
    "lines.</w>": 5947,
    "linesep": 5948,
    "linesep:</w>": 5949,
    "linesep=": 5950,
    "linesep=linesep": 5951,
    "linesep=linesep)</w>": 5952,
    "ling.</w>": 5953,
    "ling</w>": 5954,
    "link": 5955,
    "link</w>": 5956,
    "lion</w>": 5957,
    "lip": 5958,
    "list": 5959,
    "list(": 5960,
    "list('abc": 5961,
    "list('abcd": 5962,
    "list('abcd'))</w>": 5963,
    "list('ba": 5964,
    "list)):</w>": 5965,
    "list)</w>": 5966,
    "list,</w>": 5967,
    "list-": 5968,
    "list-like.</w>": 5969,
    "list-like</w>": 5970,
    "list-likes.</w>": 5971,
    "list-likes</w>": 5972,
    "list-of-": 5973,
    "list_": 5974,
    "ll": 5975,
    "ll</w>": 5976,
    "lm</w>": 5977,
    "lm_": 5978,
    "lm_label_": 5979,
    "lo": 5980,
    "load": 5981,
    "load(": 5982,
    "load</w>": 5983,
    "load_": 5984,
    "load_from_": 5985,
    "load_tf_": 5986,
    "load_tf_weights_": 5987,
    "loaded</w>": 5988,
    "loading</w>": 5989,
    "loads</w>": 5990,
    "lob": 5991,
    "loc": 5992,
    "loc(": 5993,
    "loc</w>": 5994,
    "loc[": 5995,
    "local": 5996,
    "local.": 5997,
    "local</w>": 5998,
    "local_": 5999,
    "locali": 6000,
    "localize</w>": 6001,
    "localized</w>": 6002,
    "location": 6003,
    "location</w>": 6004,
    "locations</w>": 6005,
    "locomo": 6006,
    "locomotion</w>": 6007,
    "locs</w>": 6008,
    "log": 6009,
    "log(": 6010,
    "log-": 6011,
    "log_": 6012,
    "logger.": 6013,
    "logger.info": 6014,
    "logger.info(\"": 6015,
    "logger.info(\"loading</w>": 6016,
    "logger.info(</w>": 6017,
    "logger.warning": 6018,
    "logging</w>": 6019,
    "logi": 6020,
    "logic</w>": 6021,
    "logical</w>": 6022,
    "logical_": 6023,
    "logisti": 6024,
    "logisticregression": 6025,
    "logit(": 6026,
    "logit</w>": 6027,
    "logit=": 6028,
    "logper": 6029,
    "logprob_": 6030,
    "logprob_i</w>": 6031,
    "lon": 6032,
    "long": 6033,
    "long,</w>": 6034,
    "longtable</w>": 6035,
    "loo": 6036,
    "look": 6037,
    "lookup": 6038,
    "lookup(": 6039,
    "lookup</w>": 6040,
    "loose": 6041,
    "loss</w>": 6042,
    "low": 6043,
    "low-level</w>": 6044,
    "lowe": 6045,
    "lower": 6046,
    "lower().": 6047,
    "lower()</w>": 6048,
    "lower-": 6049,
    "lowest</w>": 6050,
    "lr": 6051,
    "lr_": 6052,
    "lr_sched": 6053,
    "lr_scheduled</w>": 6054,
    "ls</w>": 6055,
    "lsuffix</w>": 6056,
    "lvals,</w>": 6057,
    "lvals</w>": 6058,
    "lvl": 6059,
    "lvl</w>": 6060,
    "lx": 6061,
    "lxml</w>": 6062,
    "ly": 6063,
    "ly,</w>": 6064,
    "ly.</w>": 6065,
    "ly</w>": 6066,
    "lying</w>": 6067,
    "lz": 6068,
    "lz4,</w>": 6069,
    "l{": 6070,
    "l{org.apache.": 6071,
    "m": 6072,
    "m\",</w>": 6073,
    "m')</w>": 6074,
    "m',</w>": 6075,
    "m(": 6076,
    "m().collect()</w>": 6077,
    "m):</w>": 6078,
    "m)</w>": 6079,
    "m,</w>": 6080,
    "m-</w>": 6081,
    "m.": 6082,
    "m.</w>": 6083,
    "m2</w>": 6084,
    "m8": 6085,
    "m8[ns]</w>": 6086,
    "m:</w>": 6087,
    "m</w>": 6088,
    "m_": 6089,
    "m_type</w>": 6090,
    "ma": 6091,
    "ma</w>": 6092,
    "maj": 6093,
    "maj_": 6094,
    "maj_spacing": 6095,
    "maj_spacing)</w>": 6096,
    "major": 6097,
    "make</w>": 6098,
    "make_": 6099,
    "make_block": 6100,
    "make_invalid_": 6101,
    "make_invalid_op('__": 6102,
    "makes</w>": 6103,
    "mal": 6104,
    "mal</w>": 6105,
    "malformed</w>": 6106,
    "mali": 6107,
    "mall": 6108,
    "malle": 6109,
    "malta</w>": 6110,
    "mam": 6111,
    "mammal": 6112,
    "mammal',</w>": 6113,
    "mammal</w>": 6114,
    "man": 6115,
    "man</w>": 6116,
    "manager": 6117,
    "manager</w>": 6118,
    "manager_": 6119,
    "manu": 6120,
    "map": 6121,
    "map(": 6122,
    "map(_convert_to_vector": 6123,
    "map(_convert_to_vector),</w>": 6124,
    "map(lambda</w>": 6125,
    "map(len,</w>": 6126,
    "map({'a':</w>": 6127,
    "map)</w>": 6128,
    "map.": 6129,
    "map:</w>": 6130,
    "map</w>": 6131,
    "map[": 6132,
    "map[pretrained_model_name_or_": 6133,
    "map[pretrained_model_name_or_path]</w>": 6134,
    "map_": 6135,
    "mappartition": 6136,
    "mappartitions(": 6137,
    "mapped</w>": 6138,
    "mapper": 6139,
    "mapper,</w>": 6140,
    "mapper</w>": 6141,
    "mapping": 6142,
    "mapping</w>": 6143,
    "maps</w>": 6144,
    "maptype(": 6145,
    "mapvalues(lambda</w>": 6146,
    "mar": 6147,
    "margin": 6148,
    "margins</w>": 6149,
    "mark": 6150,
    "mark</w>": 6151,
    "mas": 6152,
    "mask": 6153,
    "mask)</w>": 6154,
    "mask,</w>": 6155,
    "mask.": 6156,
    "mask.all():</w>": 6157,
    "mask.any():</w>": 6158,
    "mask</w>": 6159,
    "mask=": 6160,
    "mask=mask)</w>": 6161,
    "mask]</w>": 6162,
    "masked_": 6163,
    "masked_lm_": 6164,
    "mat": 6165,
    "mat.": 6166,
    "mat.shape</w>": 6167,
    "match": 6168,
    "match</w>": 6169,
    "matched</w>": 6170,
    "matching</w>": 6171,
    "math:</w>": 6172,
    "mati": 6173,
    "matplot": 6174,
    "matplotlib.": 6175,
    "matplotlib.axe": 6176,
    "matplotlib.axes.": 6177,
    "matplotlib.axes.axes</w>": 6178,
    "matplotlib.axessubplot</w>": 6179,
    "matplotlib.axis.axes</w>": 6180,
    "matplotlib.py": 6181,
    "matplotlib.pyplot.": 6182,
    "matplotlib.pyplot.hist</w>": 6183,
    "matplotlib.pyplot</w>": 6184,
    "matplotlib</w>": 6185,
    "matri": 6186,
    "matrice": 6187,
    "matrices.": 6188,
    "matrices.dense": 6189,
    "matrices.dense(3,</w>": 6190,
    "matrix": 6191,
    "matrix(": 6192,
    "matrix()</w>": 6193,
    "matrix(rows)</w>": 6194,
    "matrix</w>": 6195,
    "matrix_": 6196,
    "max": 6197,
    "max(": 6198,
    "max()</w>": 6199,
    "max(heap,</w>": 6200,
    "max)</w>": 6201,
    "max</w>": 6202,
    "max_": 6203,
    "max_fname_": 6204,
    "max_len)</w>": 6205,
    "max_num_": 6206,
    "max_row": 6207,
    "max_seq_": 6208,
    "max_seq_items</w>": 6209,
    "max_seq_length</w>": 6210,
    "max_speed</w>": 6211,
    "maxbin": 6212,
    "maxbins:</w>": 6213,
    "maxchar": 6214,
    "maxcharsper": 6215,
    "maxdepth": 6216,
    "maxim": 6217,
    "maximum</w>": 6218,
    "maxiteration": 6219,
    "maxiterations:</w>": 6220,
    "maxmal": 6221,
    "maxmalformed": 6222,
    "maxmalformedlogper": 6223,
    "maxpattern": 6224,
    "maxpatternlength=": 6225,
    "maxv</w>": 6226,
    "may": 6227,
    "maybe</w>": 6228,
    "maybe_": 6229,
    "maybe_convert_": 6230,
    "maybe_down": 6231,
    "maybe_promo": 6232,
    "maybe_promote": 6233,
    "maybe_upcast_": 6234,
    "maybe_upcast_putmask": 6235,
    "mdfile.": 6236,
    "me": 6237,
    "me:</w>": 6238,
    "me</w>": 6239,
    "mean": 6240,
    "mean()</w>": 6241,
    "mean)</w>": 6242,
    "mean,</w>": 6243,
    "mean</w>": 6244,
    "means": 6245,
    "means</w>": 6246,
    "measure</w>": 6247,
    "mechanis": 6248,
    "mechanism</w>": 6249,
    "medi": 6250,
    "median</w>": 6251,
    "medium</w>": 6252,
    "meet</w>": 6253,
    "meets</w>": 6254,
    "mem": 6255,
    "member": 6256,
    "membership</w>": 6257,
    "memo": 6258,
    "memoi": 6259,
    "memor": 6260,
    "memory": 6261,
    "memory()</w>": 6262,
    "memory</w>": 6263,
    "memory_": 6264,
    "memory_and_": 6265,
    "memory_usage": 6266,
    "memory_usage(": 6267,
    "mems)</w>": 6268,
    "men": 6269,
    "mename": 6270,
    "ment.</w>": 6271,
    "ment</w>": 6272,
    "mer": 6273,
    "merge": 6274,
    "merge</w>": 6275,
    "merge_": 6276,
    "mergeschema</w>": 6277,
    "merging</w>": 6278,
    "mess": 6279,
    "message": 6280,
    "message</w>": 6281,
    "metadata</w>": 6282,
    "meth": 6283,
    "mething</w>": 6284,
    "metho": 6285,
    "method": 6286,
    "method(new_method": 6287,
    "method,</w>": 6288,
    "method</w>": 6289,
    "method=": 6290,
    "method=method,</w>": 6291,
    "method_": 6292,
    "method_series</w>": 6293,
    "methods.</w>": 6294,
    "metri": 6295,
    "metrics</w>": 6296,
    "mg": 6297,
    "mgr.": 6298,
    "mgr</w>": 6299,
    "mgr_": 6300,
    "mgr_locs</w>": 6301,
    "mi": 6302,
    "mial": 6303,
    "mic</w>": 6304,
    "micro": 6305,
    "micro-": 6306,
    "micro-batch</w>": 6307,
    "microseconds</w>": 6308,
    "mid": 6309,
    "midnight</w>": 6310,
    "min": 6311,
    "min(": 6312,
    "min</w>": 6313,
    "min_": 6314,
    "min_itemsize</w>": 6315,
    "min_period": 6316,
    "min_periods,</w>": 6317,
    "min_periods</w>": 6318,
    "minal_": 6319,
    "minated</w>": 6320,
    "mination()</w>": 6321,
    "minator</w>": 6322,
    "mine</w>": 6323,
    "mined</w>": 6324,
    "mines</w>": 6325,
    "minim": 6326,
    "minimum</w>": 6327,
    "minimum_": 6328,
    "mininfo": 6329,
    "mininfog": 6330,
    "mininstan": 6331,
    "mininstance": 6332,
    "ministi": 6333,
    "minor": 6334,
    "minpartition": 6335,
    "minsuppor": 6336,
    "minsupport=": 6337,
    "minute": 6338,
    "minute)</w>": 6339,
    "mis": 6340,
    "mismatch": 6341,
    "mismatch\"</w>": 6342,
    "mismatch</w>": 6343,
    "missi": 6344,
    "missing": 6345,
    "missing)</w>": 6346,
    "missing_": 6347,
    "mit": 6348,
    "mit</w>": 6349,
    "mix": 6350,
    "mixed,</w>": 6351,
    "mixed</w>": 6352,
    "mixed_type</w>": 6353,
    "mixing</w>": 6354,
    "mixture</w>": 6355,
    "mk": 6356,
    "ml": 6357,
    "ml</w>": 6358,
    "mllib": 6359,
    "mllib-": 6360,
    "mllib-local</w>": 6361,
    "mlutils.": 6362,
    "mlutils</w>": 6363,
    "mm": 6364,
    "mmetri": 6365,
    "mo": 6366,
    "mobile</w>": 6367,
    "mod": 6368,
    "mode": 6369,
    "mode(": 6370,
    "mode)</w>": 6371,
    "mode,</w>": 6372,
    "mode=": 6373,
    "mode=mode,</w>": 6374,
    "mode=none,</w>": 6375,
    "model": 6376,
    "model\",</w>": 6377,
    "model(": 6378,
    "model)</w>": 6379,
    "model,</w>": 6380,
    "model.": 6381,
    "model.__class__.__": 6382,
    "model.__class__.__name__,</w>": 6383,
    "model.numtree": 6384,
    "model.numtrees()</w>": 6385,
    "model.predict(": 6386,
    "model.predict(rdd": 6387,
    "model.predict(rdd).collect()</w>": 6388,
    "model.predict(sparsevector(2,</w>": 6389,
    "model.total": 6390,
    "model.totalnumnode": 6391,
    "model.totalnumnodes()</w>": 6392,
    "model:</w>": 6393,
    "model</w>": 6394,
    "model_": 6395,
    "model_save_": 6396,
    "models</w>": 6397,
    "modif": 6398,
    "modifi": 6399,
    "modification.</w>": 6400,
    "modifying</w>": 6401,
    "modname</w>": 6402,
    "module": 6403,
    "module,</w>": 6404,
    "module_": 6405,
    "module_ho": 6406,
    "moment</w>": 6407,
    "mon": 6408,
    "monkey": 6409,
    "monkey</w>": 6410,
    "monotoni": 6411,
    "monotonic:</w>": 6412,
    "monotonic</w>": 6413,
    "monotonically</w>": 6414,
    "month": 6415,
    "month.</w>": 6416,
    "month_": 6417,
    "months</w>": 6418,
    "months_": 6419,
    "mor": 6420,
    "most</w>": 6421,
    "mostly</w>": 6422,
    "move,</w>": 6423,
    "move</w>": 6424,
    "moved</w>": 6425,
    "moving</w>": 6426,
    "mp": 6427,
    "mpor": 6428,
    "ms": 6429,
    "ms,</w>": 6430,
    "ms.": 6431,
    "ms</w>": 6432,
    "msg": 6433,
    "msg</w>": 6434,
    "mt</w>": 6435,
    "much</w>": 6436,
    "mul": 6437,
    "multi": 6438,
    "multi-": 6439,
    "multi-index</w>": 6440,
    "multi_": 6441,
    "multicolumn</w>": 6442,
    "multiindex": 6443,
    "multiindex(": 6444,
    "multiindex(level": 6445,
    "multiindex(levels=[['cobra',</w>": 6446,
    "multiindex).</w>": 6447,
    "multiindex):</w>": 6448,
    "multiindex,</w>": 6449,
    "multiindex.": 6450,
    "multiindex.</w>": 6451,
    "multiindex.from_": 6452,
    "multiindex</w>": 6453,
    "multiple": 6454,
    "multiples,</w>": 6455,
    "multirow": 6456,
    "multirow</w>": 6457,
    "must</w>": 6458,
    "mutu": 6459,
    "mv</w>": 6460,
    "my": 6461,
    "my</w>": 6462,
    "myla</w>": 6463,
    "n": 6464,
    "n\",</w>": 6465,
    "n\"</w>": 6466,
    "n')</w>": 6467,
    "n'</w>": 6468,
    "n't</w>": 6469,
    "n(": 6470,
    "n(mean,</w>": 6471,
    "n):</w>": 6472,
    "n)</w>": 6473,
    "n,</w>": 6474,
    "n-": 6475,
    "n-1</w>": 6476,
    "n.": 6477,
    "n.</w>": 6478,
    "n:</w>": 6479,
    "n</w>": 6480,
    "n=": 6481,
    "n_": 6482,
    "n_best_": 6483,
    "na": 6484,
    "na(": 6485,
    "na.": 6486,
    "na</w>": 6487,
    "na_": 6488,
    "na_action</w>": 6489,
    "na_f": 6490,
    "na_option</w>": 6491,
    "na_position": 6492,
    "na_position</w>": 6493,
    "na_rep": 6494,
    "na_rep=": 6495,
    "na_sentinel</w>": 6496,
    "na_value</w>": 6497,
    "na_value_": 6498,
    "na_value_for_dtype(np.": 6499,
    "na_values,</w>": 6500,
    "na_values</w>": 6501,
    "nai": 6502,
    "nail": 6503,
    "naive</w>": 6504,
    "nal": 6505,
    "nal</w>": 6506,
    "name": 6507,
    "name\",</w>": 6508,
    "name',</w>": 6509,
    "name':</w>": 6510,
    "name(": 6511,
    "name))</w>": 6512,
    "name),</w>": 6513,
    "name).": 6514,
    "name).</w>": 6515,
    "name):</w>": 6516,
    "name)</w>": 6517,
    "name,</w>": 6518,
    "name.": 6519,
    "name2,</w>": 6520,
    "name:</w>": 6521,
    "name</w>": 6522,
    "name=": 6523,
    "name=arg.": 6524,
    "name=arg.name)</w>": 6525,
    "name=name)</w>": 6526,
    "name=name,</w>": 6527,
    "name=res_": 6528,
    "name=u'alice": 6529,
    "name=u'alice'),</w>": 6530,
    "name=u'alice')]</w>": 6531,
    "name=u'alice',</w>": 6532,
    "name=u'bob": 6533,
    "name=u'bob')]</w>": 6534,
    "name=u'bob',</w>": 6535,
    "name],</w>": 6536,
    "name]</w>": 6537,
    "name_": 6538,
    "name__": 6539,
    "name__))</w>": 6540,
    "name__)</w>": 6541,
    "name__,</w>": 6542,
    "name__</w>": 6543,
    "name_or_": 6544,
    "named": 6545,
    "namedtemporar": 6546,
    "namedtemporary": 6547,
    "namedtemporaryfile(": 6548,
    "namedtemporaryfile(delete": 6549,
    "namedtemporaryfile(delete=true)</w>": 6550,
    "namedtemporaryfile</w>": 6551,
    "namedtuple</w>": 6552,
    "names):</w>": 6553,
    "names)</w>": 6554,
    "names,</w>": 6555,
    "names.</w>": 6556,
    "names:</w>": 6557,
    "names</w>": 6558,
    "names=": 6559,
    "names[i]</w>": 6560,
    "names]</w>": 6561,
    "names_": 6562,
    "name}": 6563,
    "name}</w>": 6564,
    "name}__": 6565,
    "nami": 6566,
    "nan": 6567,
    "nan's</w>": 6568,
    "nan,</w>": 6569,
    "nan-": 6570,
    "nan-mask</w>": 6571,
    "nan.</w>": 6572,
    "nan</w>": 6573,
    "nan],</w>": 6574,
    "nan]</w>": 6575,
    "nano": 6576,
    "nanop": 6577,
    "nanops.": 6578,
    "nanops.nan": 6579,
    "nanops</w>": 6580,
    "nanosecond": 6581,
    "nans:</w>": 6582,
    "nans</w>": 6583,
    "nap": 6584,
    "nat</w>": 6585,
    "native_types(self,</w>": 6586,
    "natively,</w>": 6587,
    "nature</w>": 6588,
    "naur": 6589,
    "nauru</w>": 6590,
    "nb</w>": 6591,
    "nbest_": 6592,
    "nchannel": 6593,
    "nd": 6594,
    "ndarray": 6595,
    "ndarray.": 6596,
    "ndarray</w>": 6597,
    "ndarray[": 6598,
    "ndarray[bool": 6599,
    "ndarray[bool],</w>": 6600,
    "ndarray[bool]</w>": 6601,
    "ndarray[dtype": 6602,
    "ndarray[dtype]</w>": 6603,
    "ndarray[object]</w>": 6604,
    "ndarray_": 6605,
    "ndarray_values</w>": 6606,
    "ndim": 6607,
    "ndim:</w>": 6608,
    "ndim</w>": 6609,
    "ndim=self.": 6610,
    "ne": 6611,
    "nearest</w>": 6612,
    "nece": 6613,
    "necess": 6614,
    "necessarily</w>": 6615,
    "necessary.</w>": 6616,
    "necessary</w>": 6617,
    "ned</w>": 6618,
    "need": 6619,
    "need</w>": 6620,
    "needed</w>": 6621,
    "needs_": 6622,
    "needs_i8": 6623,
    "neg": 6624,
    "neg_": 6625,
    "neg_sample": 6626,
    "negative": 6627,
    "negative:</w>": 6628,
    "negative</w>": 6629,
    "neigh": 6630,
    "neighbor": 6631,
    "neighbors</w>": 6632,
    "ner": 6633,
    "ness</w>": 6634,
    "nest_": 6635,
    "nested</w>": 6636,
    "net=": 6637,
    "neutral</w>": 6638,
    "never</w>": 6639,
    "new": 6640,
    "new_": 6641,
    "new_arg_": 6642,
    "new_axes</w>": 6643,
    "new_axis</w>": 6644,
    "new_blocks</w>": 6645,
    "new_categories</w>": 6646,
    "new_data.": 6647,
    "new_data</w>": 6648,
    "new_df</w>": 6649,
    "new_dtype</w>": 6650,
    "new_index,</w>": 6651,
    "new_index</w>": 6652,
    "new_java_": 6653,
    "new_java_obj": 6654,
    "new_key</w>": 6655,
    "new_labels</w>": 6656,
    "new_mems)</w>": 6657,
    "new_method": 6658,
    "new_mgr_": 6659,
    "new_mgr_locs</w>": 6660,
    "new_obj</w>": 6661,
    "new_shape</w>": 6662,
    "new_values,</w>": 6663,
    "new_values.": 6664,
    "new_values</w>": 6665,
    "newlinalg.": 6666,
    "newly</w>": 6667,
    "nex": 6668,
    "next": 6669,
    "next(": 6670,
    "next</w>": 6671,
    "next_": 6672,
    "next_date</w>": 6673,
    "nextsentence</w>": 6674,
    "ngroup": 6675,
    "ngroups)</w>": 6676,
    "ni": 6677,
    "nice</w>": 6678,
    "night</w>": 6679,
    "ning</w>": 6680,
    "nlevels</w>": 6681,
    "nn": 6682,
    "nn</w>": 6683,
    "nn_cl": 6684,
    "no": 6685,
    "no-": 6686,
    "no-copy</w>": 6687,
    "no</w>": 6688,
    "no_": 6689,
    "node": 6690,
    "node,</w>": 6691,
    "node-like</w>": 6692,
    "nodes),</w>": 6693,
    "nodes).</w>": 6694,
    "nomial": 6695,
    "non": 6696,
    "non-": 6697,
    "non-deterministic</w>": 6698,
    "non-empty</w>": 6699,
    "non-na</w>": 6700,
    "non-nan</w>": 6701,
    "non-none</w>": 6702,
    "non-null</w>": 6703,
    "non-numeric</w>": 6704,
    "non-string,</w>": 6705,
    "non-string</w>": 6706,
    "non-unique</w>": 6707,
    "non-zero</w>": 6708,
    "non_": 6709,
    "non_index_": 6710,
    "nondeterministi": 6711,
    "none": 6712,
    "none\")</w>": 6713,
    "none))</w>": 6714,
    "none),</w>": 6715,
    "none).</w>": 6716,
    "none):</w>": 6717,
    "none)</w>": 6718,
    "none)])</w>": 6719,
    "none,</w>": 6720,
    "none:</w>": 6721,
    "none</w>": 6722,
    "none]</w>": 6723,
    "nonexisten": 6724,
    "nonexistent</w>": 6725,
    "none},</w>": 6726,
    "none}</w>": 6727,
    "nonzero": 6728,
    "nonzero()": 6729,
    "noq": 6730,
    "noqa</w>": 6731,
    "nor": 6732,
    "nore": 6733,
    "noring</w>": 6734,
    "norm</w>": 6735,
    "normal": 6736,
    "normal</w>": 6737,
    "normali": 6738,
    "normalize": 6739,
    "normalize</w>": 6740,
    "normalize=": 6741,
    "normalize=normalize": 6742,
    "normalize=normalize,</w>": 6743,
    "normalize_": 6744,
    "normalize_whitespace</w>": 6745,
    "normalvectorrdd(sc,</w>": 6746,
    "not": 6747,
    "not).</w>": 6748,
    "not</w>": 6749,
    "not_": 6750,
    "not_none": 6751,
    "not_none(</w>": 6752,
    "note": 6753,
    "note::</w>": 6754,
    "note:</w>": 6755,
    "noteboo": 6756,
    "notebook.</w>": 6757,
    "noti": 6758,
    "notice</w>": 6759,
    "notimplemen": 6760,
    "notimplementederror": 6761,
    "notimplementederror(\"": 6762,
    "notimplementederror(</w>": 6763,
    "notna(": 6764,
    "now</w>": 6765,
    "np.": 6766,
    "np.apply_along_": 6767,
    "np.arange(": 6768,
    "np.arange(len(": 6769,
    "np.array(": 6770,
    "np.array</w>": 6771,
    "np.array_": 6772,
    "np.array_equal": 6773,
    "np.as": 6774,
    "np.asarray(": 6775,
    "np.atleast_2": 6776,
    "np.bool_": 6777,
    "np.concatenate": 6778,
    "np.datetime64": 6779,
    "np.dot(": 6780,
    "np.dtype,</w>": 6781,
    "np.dtype</w>": 6782,
    "np.empty": 6783,
    "np.err": 6784,
    "np.errstate(": 6785,
    "np.errstate(all": 6786,
    "np.errstate(all='ignore'):</w>": 6787,
    "np.float64</w>": 6788,
    "np.int": 6789,
    "np.lin": 6790,
    "np.minim": 6791,
    "np.nan": 6792,
    "np.nan),</w>": 6793,
    "np.nan)],</w>": 6794,
    "np.nan,</w>": 6795,
    "np.nan</w>": 6796,
    "np.nan])</w>": 6797,
    "np.ndarray": 6798,
    "np.ndarray)):</w>": 6799,
    "np.ndarray):</w>": 6800,
    "np.object_": 6801,
    "np.object_:</w>": 6802,
    "np.one": 6803,
    "np.putmask": 6804,
    "np.putmask(result,</w>": 6805,
    "np.random.": 6806,
    "np.random.choi": 6807,
    "np.random.choice(['a',</w>": 6808,
    "np.random.rand(": 6809,
    "np.random.rand(3),</w>": 6810,
    "np.tile": 6811,
    "np.timedelta64": 6812,
    "np.where(": 6813,
    "np.zero": 6814,
    "np</w>": 6815,
    "npoints</w>": 6816,
    "nr</w>": 6817,
    "nrow": 6818,
    "nrows</w>": 6819,
    "ns,</w>": 6820,
    "ns_": 6821,
    "ns_to_": 6822,
    "ns_to_s_": 6823,
    "nth": 6824,
    "nul": 6825,
    "null": 6826,
    "null:</w>": 6827,
    "null</w>": 6828,
    "null_": 6829,
    "nullable": 6830,
    "nullable=": 6831,
    "nulls</w>": 6832,
    "nullvalue:</w>": 6833,
    "num": 6834,
    "num_": 6835,
    "num_ar": 6836,
    "num_arms</w>": 6837,
    "num_format_": 6838,
    "num_format_str</w>": 6839,
    "num_leg": 6840,
    "num_legs</w>": 6841,
    "num_specimen_": 6842,
    "num_specimen_seen</w>": 6843,
    "num_wing": 6844,
    "num_wings</w>": 6845,
    "num_wings=": 6846,
    "num_wings=0)</w>": 6847,
    "num_wings=2)</w>": 6848,
    "number": 6849,
    "number(": 6850,
    "number</w>": 6851,
    "number_": 6852,
    "number_of_": 6853,
    "number_of_time": 6854,
    "number_of_times_to_": 6855,
    "number_of_times_to_up": 6856,
    "number_of_times_to_upsample:</w>": 6857,
    "numbers.</w>": 6858,
    "numbers</w>": 6859,
    "numclasse": 6860,
    "numclasses:</w>": 6861,
    "numcols,</w>": 6862,
    "numcols:</w>": 6863,
    "numeri": 6864,
    "numeric": 6865,
    "numeric</w>": 6866,
    "numeric_": 6867,
    "numeric_data()</w>": 6868,
    "numeric_only": 6869,
    "numericle": 6870,
    "numnode": 6871,
    "numpart": 6872,
    "numpartition": 6873,
    "numpartitions)</w>": 6874,
    "numpartitions,</w>": 6875,
    "numpartitions:</w>": 6876,
    "numpartitions=none):</w>": 6877,
    "numpartitions=none,</w>": 6878,
    "numpartsto": 6879,
    "numpy": 6880,
    "numpy's</w>": 6881,
    "numpy.": 6882,
    "numpy.argsort</w>": 6883,
    "numpy.array</w>": 6884,
    "numpy.asarray</w>": 6885,
    "numpy.bus": 6886,
    "numpy.busday": 6887,
    "numpy.busdaycalendar</w>": 6888,
    "numpy.dtype,</w>": 6889,
    "numpy.dtype</w>": 6890,
    "numpy.find_common_type</w>": 6891,
    "numpy.ndarray.": 6892,
    "numpy.ndarray.arg": 6893,
    "numpy.ndarray</w>": 6894,
    "numpy.take</w>": 6895,
    "numrow": 6896,
    "numrows,</w>": 6897,
    "numrows:</w>": 6898,
    "numtree": 6899,
    "numtrees:</w>": 6900,
    "nv.": 6901,
    "nv.validate_": 6902,
    "nv.validate_min": 6903,
    "nv.validate_minmax_": 6904,
    "nv.validate_minmax_axis(axis)</w>": 6905,
    "nv</w>": 6906,
    "nyears</w>": 6907,
    "o": 6908,
    "o)</w>": 6909,
    "o,</w>": 6910,
    "o.": 6911,
    "o</w>": 6912,
    "o_": 6913,
    "oauth": 6914,
    "oauthlib.": 6915,
    "oauthlib.readthedocs.io</w>": 6916,
    "ob": 6917,
    "obj": 6918,
    "obj))</w>": 6919,
    "obj):</w>": 6920,
    "obj)</w>": 6921,
    "obj,</w>": 6922,
    "obj.": 6923,
    "obj.co_": 6924,
    "obj:</w>": 6925,
    "obj</w>": 6926,
    "obj=": 6927,
    "obj=obj)</w>": 6928,
    "obj[": 6929,
    "objec": 6930,
    "object": 6931,
    "object')</w>": 6932,
    "object's</w>": 6933,
    "object(": 6934,
    "object).</w>": 6935,
    "object)</w>": 6936,
    "object-": 6937,
    "object-dtype</w>": 6938,
    "object</w>": 6939,
    "object]</w>": 6940,
    "object_": 6941,
    "object_dtype(": 6942,
    "objectblock</w>": 6943,
    "objects,</w>": 6944,
    "objects.</w>": 6945,
    "objs,</w>": 6946,
    "objs</w>": 6947,
    "obs_": 6948,
    "obs_group_": 6949,
    "obser": 6950,
    "observ": 6951,
    "observation</w>": 6952,
    "observations.</w>": 6953,
    "observations</w>": 6954,
    "oc": 6955,
    "occur": 6956,
    "occurren": 6957,
    "ocv": 6958,
    "of": 6959,
    "of-": 6960,
    "of</w>": 6961,
    "of_": 6962,
    "off": 6963,
    "offset": 6964,
    "offset,</w>": 6965,
    "offset-": 6966,
    "offset-aliases</w>": 6967,
    "offset.</w>": 6968,
    "offset</w>": 6969,
    "offsets</w>": 6970,
    "often</w>": 6971,
    "ok</w>": 6972,
    "ol": 6973,
    "old</w>": 6974,
    "old_": 6975,
    "old_arg_": 6976,
    "ols.": 6977,
    "omit": 6978,
    "omitted</w>": 6979,
    "omitting</w>": 6980,
    "on": 6981,
    "on',</w>": 6982,
    "on't</w>": 6983,
    "on-": 6984,
    "on-disk</w>": 6985,
    "on.</w>": 6986,
    "on</w>": 6987,
    "on_": 6988,
    "once,</w>": 6989,
    "once.</w>": 6990,
    "once</w>": 6991,
    "one": 6992,
    "one\",</w>": 6993,
    "one,</w>": 6994,
    "one-": 6995,
    "one-to-": 6996,
    "one-to-one</w>": 6997,
    "one.</w>": 6998,
    "one</w>": 6999,
    "one_": 7000,
    "onethi": 7001,
    "only": 7002,
    "only</w>": 7003,
    "onto</w>": 7004,
    "oo": 7005,
    "op": 7006,
    "op(": 7007,
    "op('__": 7008,
    "op(op,</w>": 7009,
    "op):</w>": 7010,
    "op)</w>": 7011,
    "op,</w>": 7012,
    "op</w>": 7013,
    "op_": 7014,
    "op_desc": 7015,
    "op_name(": 7016,
    "op_name(op,</w>": 7017,
    "op_name,</w>": 7018,
    "op_name</w>": 7019,
    "op_result_": 7020,
    "open": 7021,
    "open(": 7022,
    "operation": 7023,
    "operations.</w>": 7024,
    "operator": 7025,
    "operator.": 7026,
    "operator.add)</w>": 7027,
    "operator.add,</w>": 7028,
    "ople.json')</w>": 7029,
    "opname</w>": 7030,
    "opposite</w>": 7031,
    "ops.r": 7032,
    "ops</w>": 7033,
    "opstr": 7034,
    "opt": 7035,
    "optimi": 7036,
    "optimiz": 7037,
    "optimization</w>": 7038,
    "option": 7039,
    "option</w>": 7040,
    "optional": 7041,
    "optional,</w>": 7042,
    "optional[": 7043,
    "options):</w>": 7044,
    "options)</w>": 7045,
    "options.": 7046,
    "options:</w>": 7047,
    "options</w>": 7048,
    "optlevel</w>": 7049,
    "or": 7050,
    "or</w>": 7051,
    "or_": 7052,
    "orc.": 7053,
    "orc</w>": 7054,
    "orc_": 7055,
    "ord</w>": 7056,
    "order": 7057,
    "order.</w>": 7058,
    "order:</w>": 7059,
    "order</w>": 7060,
    "order='f": 7061,
    "order_": 7062,
    "order_categories</w>": 7063,
    "ordered": 7064,
    "ordered</w>": 7065,
    "ordered=": 7066,
    "ordered=true)</w>": 7067,
    "ordereddict()</w>": 7068,
    "ordereddict</w>": 7069,
    "orders</w>": 7070,
    "ordinates</w>": 7071,
    "org": 7072,
    "org.": 7073,
    "org.apache.": 7074,
    "org</w>": 7075,
    "organi": 7076,
    "orien": 7077,
    "orient.": 7078,
    "orient.lower().": 7079,
    "orient.lower().startswith": 7080,
    "orient</w>": 7081,
    "orig": 7082,
    "orig_": 7083,
    "original_": 7084,
    "original_df</w>": 7085,
    "os.": 7086,
    "os.path": 7087,
    "os.path.": 7088,
    "os.path.exist": 7089,
    "os.path.join(": 7090,
    "os.path.join(build_path,</w>": 7091,
    "os.path.join(temp": 7092,
    "os.path.join(tempdir,</w>": 7093,
    "os.path.join(tempfile.mkdtemp(),</w>": 7094,
    "os.remo": 7095,
    "os.remove(\".</w>": 7096,
    "os</w>": 7097,
    "oth": 7098,
    "other": 7099,
    "other))</w>": 7100,
    "other):</w>": 7101,
    "other)</w>": 7102,
    "other,</w>": 7103,
    "other.": 7104,
    "other._": 7105,
    "other._j": 7106,
    "other.ndim</w>": 7107,
    "other:</w>": 7108,
    "other=": 7109,
    "otherwise": 7110,
    "otherwise(": 7111,
    "otherwise,</w>": 7112,
    "otherwise.</w>": 7113,
    "otherwise</w>": 7114,
    "other}</w>": 7115,
    "ou": 7116,
    "oul": 7117,
    "ould</w>": 7118,
    "our": 7119,
    "our</w>": 7120,
    "ous,</w>": 7121,
    "ous</w>": 7122,
    "ous_type</w>": 7123,
    "ously</w>": 7124,
    "out": 7125,
    "out,</w>": 7126,
    "out-": 7127,
    "out-of-": 7128,
    "out</w>": 7129,
    "out[": 7130,
    "out_": 7131,
    "outer": 7132,
    "outof": 7133,
    "outofbounds": 7134,
    "outside</w>": 7135,
    "over": 7136,
    "over(": 7137,
    "over(window": 7138,
    "overflow</w>": 7139,
    "overl": 7140,
    "overlap": 7141,
    "overlapping</w>": 7142,
    "overwrite": 7143,
    "overwrite</w>": 7144,
    "ow": 7145,
    "own</w>": 7146,
    "p": 7147,
    "p\",</w>": 7148,
    "p,</w>": 7149,
    "p.": 7150,
    "p.apply(lambda</w>": 7151,
    "p</w>": 7152,
    "p_": 7153,
    "p_limit(invalid,</w>": 7154,
    "pa.": 7155,
    "pa</w>": 7156,
    "pack": 7157,
    "package": 7158,
    "pad</w>": 7159,
    "padding</w>": 7160,
    "pai": 7161,
    "pair": 7162,
    "pairs.</w>": 7163,
    "pairs:</w>": 7164,
    "pairs</w>": 7165,
    "pairwise</w>": 7166,
    "pand": 7167,
    "panda</w>": 7168,
    "pandas": 7169,
    "pandas-": 7170,
    "pandas-dev</w>": 7171,
    "pandas-docs</w>": 7172,
    "pandas-gb": 7173,
    "pandas-gbq.readthedocs.io</w>": 7174,
    "pandas-gbq</w>": 7175,
    "pandas.": 7176,
    "pandas.api.": 7177,
    "pandas.api.extension": 7178,
    "pandas.api.types</w>": 7179,
    "pandas.arrays.": 7180,
    "pandas.core.": 7181,
    "pandas.core.algorithms</w>": 7182,
    "pandas.core.arrays</w>": 7183,
    "pandas.core.computation.": 7184,
    "pandas.core.nanops</w>": 7185,
    "pandas.core.reshape.": 7186,
    "pandas.core.reshape.concat</w>": 7187,
    "pandas.dataframe</w>": 7188,
    "pandas.io.": 7189,
    "pandas.options.": 7190,
    "pandas.options.display.": 7191,
    "pandas.options.display.max_": 7192,
    "pandas.options.display.max_info_columns</w>": 7193,
    "pandas.pydata.org</w>": 7194,
    "pandas.series</w>": 7195,
    "pandas.to_datetime</w>": 7196,
    "pandas</w>": 7197,
    "pandas_": 7198,
    "pandas_dtype(": 7199,
    "pandas_dtype(dtype)</w>": 7200,
    "pandas_dtype</w>": 7201,
    "pandas_sql</w>": 7202,
    "pandas_type({'name':</w>": 7203,
    "pandas_udf(\"": 7204,
    "pandas_udf(\"integer\",</w>": 7205,
    "pandas_udf,</w>": 7206,
    "pandas_udf</w>": 7207,
    "pandasarray</w>": 7208,
    "pandassql_": 7209,
    "pandassql_builder(": 7210,
    "pandasudf": 7211,
    "pandasudftype.": 7212,
    "pandasudftype.grouped_": 7213,
    "pandasudftype.grouped_agg": 7214,
    "pandasudftype.grouped_agg)</w>": 7215,
    "pandasudftype.grouped_map)</w>": 7216,
    "pandasudftype.scalar)</w>": 7217,
    "pandasudftype</w>": 7218,
    "panel": 7219,
    "panel_": 7220,
    "panel_idx</w>": 7221,
    "panels)</w>": 7222,
    "panels</w>": 7223,
    "par": 7224,
    "paral": 7225,
    "paralleli": 7226,
    "parallelis": 7227,
    "parallelism": 7228,
    "parallelism</w>": 7229,
    "parallelize": 7230,
    "param": 7231,
    "param.": 7232,
    "param.parent</w>": 7233,
    "param:</w>": 7234,
    "param</w>": 7235,
    "param]</w>": 7236,
    "parame": 7237,
    "parameter": 7238,
    "parameter</w>": 7239,
    "parameters.</w>": 7240,
    "parameters:</w>": 7241,
    "parameters</w>": 7242,
    "parammap": 7243,
    "paren": 7244,
    "parent</w>": 7245,
    "parent_": 7246,
    "parque": 7247,
    "parquet(": 7248,
    "parquet(os.path.join(tempfile.mkdtemp(),</w>": 7249,
    "parquet.": 7250,
    "parquet</w>": 7251,
    "parro": 7252,
    "parrot</w>": 7253,
    "parse": 7254,
    "parse('</w>": 7255,
    "parse</w>": 7256,
    "parse_": 7257,
    "parse_date": 7258,
    "parse_dates,</w>": 7259,
    "parse_dates=": 7260,
    "parse_dates=parse_dates,</w>": 7261,
    "parse_dates_safe(": 7262,
    "parse_dates_safe(dates,</w>": 7263,
    "parsed</w>": 7264,
    "parseexception": 7265,
    "parseexception:...</w>": 7266,
    "parser": 7267,
    "parser=": 7268,
    "parsing.</w>": 7269,
    "parsing</w>": 7270,
    "part": 7271,
    "part</w>": 7272,
    "parti": 7273,
    "partial": 7274,
    "partial(": 7275,
    "particul": 7276,
    "particular</w>": 7277,
    "partition": 7278,
    "partition.</w>": 7279,
    "partitionby": 7280,
    "partitionfunc)</w>": 7281,
    "partitionfunc=": 7282,
    "partitionfunc=portable_hash": 7283,
    "partitionfunc=portable_hash):</w>": 7284,
    "partitions,</w>": 7285,
    "partitions.</w>": 7286,
    "partitions</w>": 7287,
    "partsscanned</w>": 7288,
    "party</w>": 7289,
    "pas": 7290,
    "passed</w>": 7291,
    "pat": 7292,
    "path": 7293,
    "path(": 7294,
    "path(s).</w>": 7295,
    "path):</w>": 7296,
    "path)</w>": 7297,
    "path,</w>": 7298,
    "path.": 7299,
    "path.</w>": 7300,
    "path:</w>": 7301,
    "path</w>": 7302,
    "path=none,</w>": 7303,
    "path]</w>": 7304,
    "path_or_bu": 7305,
    "path_or_buf</w>": 7306,
    "paths</w>": 7307,
    "path}</w>": 7308,
    "patter": 7309,
    "pattern": 7310,
    "pd.": 7311,
    "pd.array(['a',</w>": 7312,
    "pd.array([1,</w>": 7313,
    "pd.c": 7314,
    "pd.categorical": 7315,
    "pd.categorical(": 7316,
    "pd.categorical([\"a\",</w>": 7317,
    "pd.categorical(['a',</w>": 7318,
    "pd.categorical(list('ba": 7319,
    "pd.categorical(list('baabc": 7320,
    "pd.concat([": 7321,
    "pd.concat([df1,</w>": 7322,
    "pd.concat([s1,</w>": 7323,
    "pd.cro": 7324,
    "pd.crosstab": 7325,
    "pd.dataframe(": 7326,
    "pd.dataframe(data=": 7327,
    "pd.dataframe(np.random.rand": 7328,
    "pd.dataframe(np.random.randn(": 7329,
    "pd.dataframe({\"foo": 7330,
    "pd.dataframe({\"foo\":</w>": 7331,
    "pd.dataframe({'": 7332,
    "pd.dataframe({'num_leg": 7333,
    "pd.dataframe({'num_legs':</w>": 7334,
    "pd.dataframe({'speed": 7335,
    "pd.dataframe({'speed':</w>": 7336,
    "pd.dataframe({</w>": 7337,
    "pd.date_": 7338,
    "pd.date_range(": 7339,
    "pd.date_range('": 7340,
    "pd.date_range('1</w>": 7341,
    "pd.date_range('2018-04-0": 7342,
    "pd.date_range('2018-04-09',</w>": 7343,
    "pd.date_range(start='1</w>": 7344,
    "pd.date_range(start='2017-01-01',</w>": 7345,
    "pd.datetime": 7346,
    "pd.get_dummie": 7347,
    "pd.get_dummies(pd.series(": 7348,
    "pd.multiindex.from_": 7349,
    "pd.multiindex.from_prod": 7350,
    "pd.nat</w>": 7351,
    "pd.period('2017": 7352,
    "pd.period</w>": 7353,
    "pd.period_": 7354,
    "pd.read_": 7355,
    "pd.read_pickle(\".</w>": 7356,
    "pd.serie": 7357,
    "pd.timestamp</w>": 7358,
    "pd.to_": 7359,
    "pd.wide_to_long(df,</w>": 7360,
    "pd</w>": 7361,
    "pdf.": 7362,
    "pdf</w>": 7363,
    "pdf[": 7364,
    "pe": 7365,
    "pear": 7366,
    "pear</w>": 7367,
    "pearson": 7368,
    "pearson</w>": 7369,
    "pec": 7370,
    "ped.": 7371,
    "ped.</w>": 7372,
    "ped</w>": 7373,
    "pend": 7374,
    "pend(": 7375,
    "pend</w>": 7376,
    "people.json')</w>": 7377,
    "per": 7378,
    "per,</w>": 7379,
    "per</w>": 7380,
    "percen": 7381,
    "percentage</w>": 7382,
    "perform</w>": 7383,
    "performan": 7384,
    "performance.</w>": 7385,
    "performance</w>": 7386,
    "performant.</w>": 7387,
    "performed</w>": 7388,
    "performing</w>": 7389,
    "performs</w>": 7390,
    "peri": 7391,
    "perio": 7392,
    "period": 7393,
    "period('2017": 7394,
    "period</w>": 7395,
    "period[": 7396,
    "period_": 7397,
    "period_dtype(": 7398,
    "periodarray</w>": 7399,
    "periods)</w>": 7400,
    "periods,</w>": 7401,
    "periods.</w>": 7402,
    "periods</w>": 7403,
    "periods=": 7404,
    "periods=4,</w>": 7405,
    "periods=5,</w>": 7406,
    "perm": 7407,
    "permissi": 7408,
    "permissive</w>": 7409,
    "persist</w>": 7410,
    "persisten": 7411,
    "persistence.</w>": 7412,
    "person": 7413,
    "person</w>": 7414,
    "ph": 7415,
    "phy": 7416,
    "physi": 7417,
    "physical</w>": 7418,
    "pi": 7419,
    "pick": 7420,
    "pickle": 7421,
    "pickle(": 7422,
    "pickle(\".</w>": 7423,
    "pickle.": 7424,
    "pickle.default_": 7425,
    "pickle.default_protocol</w>": 7426,
    "pickle.html</w>": 7427,
    "pickle_": 7428,
    "pickled_": 7429,
    "pickling</w>": 7430,
    "piece</w>": 7431,
    "ping": 7432,
    "ping</w>": 7433,
    "pivo": 7434,
    "pivot</w>": 7435,
    "pl": 7436,
    "pla": 7437,
    "place": 7438,
    "place.</w>": 7439,
    "place</w>": 7440,
    "placemen": 7441,
    "placement": 7442,
    "placement)</w>": 7443,
    "placement,</w>": 7444,
    "placement=": 7445,
    "placement=placement)</w>": 7446,
    "plat": 7447,
    "platform</w>": 7448,
    "platform_": 7449,
    "ple": 7450,
    "please</w>": 7451,
    "pli": 7452,
    "plied,</w>": 7453,
    "plied</w>": 7454,
    "plies</w>": 7455,
    "plo": 7456,
    "plot": 7457,
    "plot.": 7458,
    "plot::</w>": 7459,
    "plot</w>": 7460,
    "plotted</w>": 7461,
    "plotting.": 7462,
    "plotting</w>": 7463,
    "plt.": 7464,
    "plt</w>": 7465,
    "ply": 7466,
    "po": 7467,
    "point": 7468,
    "point</w>": 7469,
    "points</w>": 7470,
    "points[": 7471,
    "pol": 7472,
    "popul": 7473,
    "population": 7474,
    "por": 7475,
    "port": 7476,
    "port</w>": 7477,
    "portable_": 7478,
    "portable_hash": 7479,
    "portland</w>": 7480,
    "pos</w>": 7481,
    "pos]</w>": 7482,
    "posi": 7483,
    "posite</w>": 7484,
    "positi": 7485,
    "position": 7486,
    "position</w>": 7487,
    "positionin": 7488,
    "positions</w>": 7489,
    "positive": 7490,
    "positive</w>": 7491,
    "possi": 7492,
    "possibility</w>": 7493,
    "possible": 7494,
    "possible,</w>": 7495,
    "possible.</w>": 7496,
    "possible</w>": 7497,
    "possibly</w>": 7498,
    "post</w>": 7499,
    "post_": 7500,
    "post_processing": 7501,
    "potential</w>": 7502,
    "potentially</w>": 7503,
    "pprint_": 7504,
    "pprint_thing": 7505,
    "pprint_thing()</w>": 7506,
    "pr</w>": 7507,
    "prag": 7508,
    "pragma": 7509,
    "pragma:</w>": 7510,
    "pre": 7511,
    "pre-": 7512,
    "pre-trained</w>": 7513,
    "pre_": 7514,
    "pre_processing": 7515,
    "preceding</w>": 7516,
    "precision": 7517,
    "precision=": 7518,
    "predict(": 7519,
    "prediction": 7520,
    "predictions:</w>": 7521,
    "predictions</w>": 7522,
    "prefer": 7523,
    "prefers": 7524,
    "prefix": 7525,
    "prefix=": 7526,
    "prep_": 7527,
    "presc": 7528,
    "prescri": 7529,
    "prescribed</w>": 7530,
    "presen": 7531,
    "present,</w>": 7532,
    "present</w>": 7533,
    "preser": 7534,
    "preserve": 7535,
    "preserve</w>": 7536,
    "preserve_": 7537,
    "preserve_nans</w>": 7538,
    "preservespartitioning": 7539,
    "preservespartitioning=false):</w>": 7540,
    "preservespartitioning=true)</w>": 7541,
    "press</w>": 7542,
    "pret": 7543,
    "pret</w>": 7544,
    "preted</w>": 7545,
    "pretrained_": 7546,
    "pretrained_model_": 7547,
    "pretrained_model_archive_": 7548,
    "pretrained_model_name_or_": 7549,
    "pretrained_model_name_or_path,</w>": 7550,
    "pretrained_model_name_or_path:</w>": 7551,
    "pretrained_model_name_or_path</w>": 7552,
    "pretty</w>": 7553,
    "prev_": 7554,
    "prev_rowspan</w>": 7555,
    "preven": 7556,
    "prevent</w>": 7557,
    "previ": 7558,
    "previous</w>": 7559,
    "previously</w>": 7560,
    "pri": 7561,
    "price</w>": 7562,
    "primiti": 7563,
    "primitive": 7564,
    "primitive</w>": 7565,
    "primitives": 7566,
    "primitivesasstring": 7567,
    "print(": 7568,
    "print(model)</w>": 7569,
    "print_": 7570,
    "prior</w>": 7571,
    "priv": 7572,
    "private_": 7573,
    "private_key</w>": 7574,
    "pro": 7575,
    "prob": 7576,
    "probabilities</w>": 7577,
    "probability</w>": 7578,
    "proce": 7579,
    "process</w>": 7580,
    "process_": 7581,
    "processed</w>": 7582,
    "processes</w>": 7583,
    "processing": 7584,
    "prod": 7585,
    "produce</w>": 7586,
    "produced</w>": 7587,
    "product</w>": 7588,
    "progress</w>": 7589,
    "proj": 7590,
    "proj_": 7591,
    "project</w>": 7592,
    "project_": 7593,
    "projs[i]</w>": 7594,
    "promo": 7595,
    "prop": 7596,
    "propagate</w>": 7597,
    "proper": 7598,
    "properly</w>": 7599,
    "propertie": 7600,
    "properties:</w>": 7601,
    "property</w>": 7602,
    "proto": 7603,
    "protocol": 7604,
    "protocol.</w>": 7605,
    "protocol</w>": 7606,
    "protocol=": 7607,
    "prov": 7608,
    "prox": 7609,
    "psy": 7610,
    "psycop": 7611,
    "psycopg2,</w>": 7612,
    "pt</w>": 7613,
    "ptr": 7614,
    "pu": 7615,
    "publi": 7616,
    "public</w>": 7617,
    "pur": 7618,
    "purpo": 7619,
    "purpose</w>": 7620,
    "pus</w>": 7621,
    "put": 7622,
    "putmask": 7623,
    "py": 7624,
    "py._": 7625,
    "py._path.": 7626,
    "py._path.local.": 7627,
    "py._path.local.local": 7628,
    "py4": 7629,
    "py4j": 7630,
    "py4jjava": 7631,
    "py_": 7632,
    "py_stage</w>": 7633,
    "pyarrow</w>": 7634,
    "pydata.": 7635,
    "pydata.org</w>": 7636,
    "pyrolite": 7637,
    "pyrolite,</w>": 7638,
    "pyspark.": 7639,
    "pyspark.ml": 7640,
    "pyspark.ml.": 7641,
    "pyspark.ml.linalg.": 7642,
    "pyspark.mllib.": 7643,
    "pyspark.mllib.linalg.": 7644,
    "pyspark.mllib.linalg</w>": 7645,
    "pyspark.mllib.tree</w>": 7646,
    "pyspark.mllib.util</w>": 7647,
    "pyspark.sql.": 7648,
    "pyspark.sql.dataframe</w>": 7649,
    "pyspark.sql.functions.": 7650,
    "pyspark.sql.functions.pandas_udf</w>": 7651,
    "pyspark.sql.functions</w>": 7652,
    "pyspark.sql.groupeddata.": 7653,
    "pyspark.sql.types.": 7654,
    "pyspark.sql.types.datatype</w>": 7655,
    "pyspark.sql.types.structtype</w>": 7656,
    "pyspark.sql.types.timestamptype</w>": 7657,
    "pyspark.sql.types</w>": 7658,
    "pyspark.sql.utils</w>": 7659,
    "pyspark.sql</w>": 7660,
    "pyspark</w>": 7661,
    "pytables</w>": 7662,
    "python": 7663,
    "python.": 7664,
    "python.org</w>": 7665,
    "python</w>": 7666,
    "pythoneval": 7667,
    "pythonevaltype.": 7668,
    "pythonevaltype.sql_": 7669,
    "pythonrdd.": 7670,
    "pytor": 7671,
    "pytorch</w>": 7672,
    "pytorch_": 7673,
    "pytorch_model.": 7674,
    "pytorch_model.bin</w>": 7675,
    "q": 7676,
    "q',</w>": 7677,
    "q,</w>": 7678,
    "q.": 7679,
    "q.readthedocs.io</w>": 7680,
    "q1',</w>": 7681,
    "q1</w>": 7682,
    "q2',</w>": 7683,
    "q:</w>": 7684,
    "q</w>": 7685,
    "qas_": 7686,
    "qr</w>": 7687,
    "qu": 7688,
    "qual": 7689,
    "qualified</w>": 7690,
    "quan": 7691,
    "quantile": 7692,
    "quar": 7693,
    "quarter": 7694,
    "que": 7695,
    "quen": 7696,
    "quer": 7697,
    "querie": 7698,
    "queries,</w>": 7699,
    "query": 7700,
    "query.</w>": 7701,
    "query</w>": 7702,
    "queue": 7703,
    "queue</w>": 7704,
    "qui": 7705,
    "quick": 7706,
    "quicksort',</w>": 7707,
    "quo": 7708,
    "quote": 7709,
    "quote_": 7710,
    "quoted": 7711,
    "quoted</w>": 7712,
    "quotedfield": 7713,
    "quoting": 7714,
    "quoting</w>": 7715,
    "quoting=none,</w>": 7716,
    "r": 7717,
    "r\"\"\"</w>": 7718,
    "r\",</w>": 7719,
    "r\"</w>": 7720,
    "r'(</w>": 7721,
    "r'</w>": 7722,
    "r(": 7723,
    "r)</w>": 7724,
    "r,</w>": 7725,
    "r.": 7726,
    "r:</w>": 7727,
    "r</w>": 7728,
    "r_": 7729,
    "ra": 7730,
    "ra_re": 7731,
    "rac</w>": 7732,
    "raction": 7733,
    "raction</w>": 7734,
    "radien": 7735,
    "raffe": 7736,
    "rag": 7737,
    "raise": 7738,
    "raise</w>": 7739,
    "raise_": 7740,
    "raise_missing": 7741,
    "raise_missing=true.</w>": 7742,
    "ram</w>": 7743,
    "rame": 7744,
    "ran": 7745,
    "rance</w>": 7746,
    "rando": 7747,
    "random": 7748,
    "random.": 7749,
    "random</w>": 7750,
    "random_": 7751,
    "random_state": 7752,
    "random_state</w>": 7753,
    "random_udf</w>": 7754,
    "randomrdds.": 7755,
    "randomrdds.uniform": 7756,
    "randomrdds.uniformrdd(sc,</w>": 7757,
    "range": 7758,
    "range(": 7759,
    "range(10,</w>": 7760,
    "range(5),</w>": 7761,
    "range(5,</w>": 7762,
    "range,</w>": 7763,
    "range</w>": 7764,
    "range_": 7765,
    "rangeindex(": 7766,
    "rangeindex:</w>": 7767,
    "rangeindex</w>": 7768,
    "rank": 7769,
    "rank</w>": 7770,
    "ranks</w>": 7771,
    "rap": 7772,
    "rary.</w>": 7773,
    "rary</w>": 7774,
    "rati": 7775,
    "ratio": 7776,
    "ravel": 7777,
    "ravel()</w>": 7778,
    "raw</w>": 7779,
    "raw_": 7780,
    "rawing</w>": 7781,
    "rawn</w>": 7782,
    "rd": 7783,
    "rd-": 7784,
    "rd-party</w>": 7785,
    "rd</w>": 7786,
    "rdd": 7787,
    "rdd's</w>": 7788,
    "rdd(": 7789,
    "rdd(sc,</w>": 7790,
    "rdd):</w>": 7791,
    "rdd,</w>": 7792,
    "rdd.": 7793,
    "rdd.map(lambda</w>": 7794,
    "rdd.treeaggregate": 7795,
    "rdd.treeaggregate(0,</w>": 7796,
    "rdd.treereduce(": 7797,
    "rdd.treereduce(add,</w>": 7798,
    "rdd2.": 7799,
    "rdd2</w>": 7800,
    "rdd</w>": 7801,
    "rdd[(k,</w>": 7802,
    "rdd_": 7803,
    "rdd_de": 7804,
    "rdds);</w>": 7805,
    "rdds.": 7806,
    "re": 7807,
    "re-": 7808,
    "re.": 7809,
    "re.compile": 7810,
    "re</w>": 7811,
    "reached</w>": 7812,
    "read": 7813,
    "read</w>": 7814,
    "read_": 7815,
    "read_csv</w>": 7816,
    "read_sql</w>": 7817,
    "read_sql_": 7818,
    "read_sql_query</w>": 7819,
    "reader.": 7820,
    "real</w>": 7821,
    "really</w>": 7822,
    "reason</w>": 7823,
    "rec": 7824,
    "rec.": 7825,
    "rec.array([('a',</w>": 7826,
    "rece": 7827,
    "recei": 7828,
    "receive</w>": 7829,
    "received</w>": 7830,
    "receives</w>": 7831,
    "receiving</w>": 7832,
    "recen": 7833,
    "recent</w>": 7834,
    "reco": 7835,
    "recog": 7836,
    "recogni": 7837,
    "recognized</w>": 7838,
    "record": 7839,
    "records,</w>": 7840,
    "records.</w>": 7841,
    "recur": 7842,
    "recursi": 7843,
    "recursive": 7844,
    "recursive</w>": 7845,
    "recursively.</w>": 7846,
    "red": 7847,
    "red.</w>": 7848,
    "red</w>": 7849,
    "red_": 7850,
    "reduce": 7851,
    "reduce_c_": 7852,
    "reduce_c_function</w>": 7853,
    "reducebykey</w>": 7854,
    "reducefunc</w>": 7855,
    "reducing</w>": 7856,
    "reduction</w>": 7857,
    "ref</w>": 7858,
    "refer</w>": 7859,
    "referen": 7860,
    "reference</w>": 7861,
    "referred</w>": 7862,
    "reflected</w>": 7863,
    "reg": 7864,
    "regard": 7865,
    "regardless</w>": 7866,
    "regul": 7867,
    "regular</w>": 7868,
    "regulari": 7869,
    "regularization</w>": 7870,
    "regularizer</w>": 7871,
    "reindex(": 7872,
    "reindex</w>": 7873,
    "reindex_": 7874,
    "reindexed</w>": 7875,
    "reindexing</w>": 7876,
    "rel": 7877,
    "relative</w>": 7878,
    "rele": 7879,
    "release.</w>": 7880,
    "relev": 7881,
    "relevant</w>": 7882,
    "remo": 7883,
    "remote</w>": 7884,
    "removal_": 7885,
    "removals</w>": 7886,
    "remove</w>": 7887,
    "remove_": 7888,
    "remove_un": 7889,
    "remove_unused_categories</w>": 7890,
    "removed,</w>": 7891,
    "removed.</w>": 7892,
    "removed</w>": 7893,
    "removes</w>": 7894,
    "ren": 7895,
    "rename": 7896,
    "rename_": 7897,
    "reorder</w>": 7898,
    "reorder_categories</w>": 7899,
    "reordered</w>": 7900,
    "rep": 7901,
    "repe": 7902,
    "repeat</w>": 7903,
    "repeated.</w>": 7904,
    "repeated</w>": 7905,
    "replacemen": 7906,
    "replacement:</w>": 7907,
    "replacements</w>": 7908,
    "replacetemp": 7909,
    "repr</w>": 7910,
    "represen": 7911,
    "representable</w>": 7912,
    "representation.</w>": 7913,
    "representation</w>": 7914,
    "representations</w>": 7915,
    "represented</w>": 7916,
    "representing</w>": 7917,
    "represents</w>": 7918,
    "req": 7919,
    "requ": 7920,
    "reque": 7921,
    "requested</w>": 7922,
    "requi": 7923,
    "require": 7924,
    "require</w>": 7925,
    "require_": 7926,
    "require_minimum_": 7927,
    "require_minimum_pandas_": 7928,
    "require_minimum_pandas_version()</w>": 7929,
    "require_minimum_pandas_version</w>": 7930,
    "required</w>": 7931,
    "requires</w>": 7932,
    "res": 7933,
    "res</w>": 7934,
    "res_": 7935,
    "res_values</w>": 7936,
    "reser": 7937,
    "reserved</w>": 7938,
    "reshape": 7939,
    "reshape(": 7940,
    "reshol": 7941,
    "resol": 7942,
    "resolved</w>": 7943,
    "resolved_archive_": 7944,
    "resolvers</w>": 7945,
    "resolves</w>": 7946,
    "respecti": 7947,
    "respective</w>": 7948,
    "respectively.</w>": 7949,
    "respon": 7950,
    "response_time</w>": 7951,
    "resul": 7952,
    "result": 7953,
    "result's</w>": 7954,
    "result.": 7955,
    "result.astype(dtype)</w>": 7956,
    "result.ndim</w>": 7957,
    "result[": 7958,
    "result[0": 7959,
    "result[0][0]</w>": 7960,
    "result_": 7961,
    "result_index</w>": 7962,
    "result_name</w>": 7963,
    "result_type='broad": 7964,
    "result_type='broadcast": 7965,
    "ret": 7966,
    "retrie": 7967,
    "retrieve</w>": 7968,
    "return": 7969,
    "return.</w>": 7970,
    "return</w>": 7971,
    "return_": 7972,
    "return_indexer": 7973,
    "returns:</w>": 7974,
    "returns</w>": 7975,
    "returntype:</w>": 7976,
    "returntype</w>": 7977,
    "returntype=": 7978,
    "rever": 7979,
    "reverse": 7980,
    "reverse=": 7981,
    "rgb": 7982,
    "rh": 7983,
    "rhs</w>": 7984,
    "ri": 7985,
    "rick</w>": 7986,
    "rid": 7987,
    "rid</w>": 7988,
    "riend": 7989,
    "rig": 7990,
    "right": 7991,
    "right</w>": 7992,
    "right_": 7993,
    "right_indexer</w>": 7994,
    "rip": 7995,
    "rit.": 7996,
    "rit.out_": 7997,
    "rite": 7998,
    "rite</w>": 7999,
    "riteri": 8000,
    "rkey</w>": 8001,
    "rn": 8002,
    "rng</w>": 8003,
    "ro": 8004,
    "road": 8005,
    "rol": 8006,
    "rolite": 8007,
    "roll_": 8008,
    "roll_func</w>": 8009,
    "rolling</w>": 8010,
    "ron": 8011,
    "roo": 8012,
    "root</w>": 8013,
    "rop": 8014,
    "ror": 8015,
    "rot,</w>": 8016,
    "rot</w>": 8017,
    "rot=": 8018,
    "rot=0)</w>": 8019,
    "rotation</w>": 8020,
    "rou": 8021,
    "roup": 8022,
    "row": 8023,
    "row(": 8024,
    "row(age=": 8025,
    "row(age=5,</w>": 8026,
    "row(id=": 8027,
    "row(name='alice": 8028,
    "row(name='alice',</w>": 8029,
    "row(r": 8030,
    "row(r=": 8031,
    "row(sequence=": 8032,
    "row(year=": 8033,
    "row(year=2013,</w>": 8034,
    "row).</w>": 8035,
    "row)</w>": 8036,
    "row,</w>": 8037,
    "row-": 8038,
    "row-wise,</w>": 8039,
    "row1</w>": 8040,
    "row2</w>": 8041,
    "row:</w>": 8042,
    "row</w>": 8043,
    "row]</w>": 8044,
    "row_": 8045,
    "rowmatrix(rows)</w>": 8046,
    "rowmatrix</w>": 8047,
    "rown</w>": 8048,
    "rows)</w>": 8049,
    "rows,</w>": 8050,
    "rows.</w>": 8051,
    "rows</w>": 8052,
    "rowspan</w>": 8053,
    "rowsper": 8054,
    "rs": 8055,
    "rule": 8056,
    "rule</w>": 8057,
    "rules</w>": 8058,
    "run": 8059,
    "runs</w>": 8060,
    "runtime": 8061,
    "runtimeerror": 8062,
    "runtimeerror(\"": 8063,
    "runtimeerror(\"no</w>": 8064,
    "rvals</w>": 8065,
    "rvalues</w>": 8066,
    "ry": 8067,
    "ryp": 8068,
    "s": 8069,
    "s\"\"\"</w>": 8070,
    "s\").": 8071,
    "s\").fetchall()</w>": 8072,
    "s\")</w>": 8073,
    "s\",</w>": 8074,
    "s\":</w>": 8075,
    "s\"</w>": 8076,
    "s')).collect()</w>": 8077,
    "s').": 8078,
    "s')</w>": 8079,
    "s',</w>": 8080,
    "s'.</w>": 8081,
    "s':</w>": 8082,
    "s'</w>": 8083,
    "s'])</w>": 8084,
    "s']</w>": 8085,
    "s(": 8086,
    "s()):</w>": 8087,
    "s())</w>": 8088,
    "s()</w>": 8089,
    "s([1,</w>": 8090,
    "s([a,</w>": 8091,
    "s(cls):</w>": 8092,
    "s(pd.series(": 8093,
    "s(self,</w>": 8094,
    "s)": 8095,
    "s)):</w>": 8096,
    "s))</w>": 8097,
    "s),</w>": 8098,
    "s).": 8099,
    "s).</w>": 8100,
    "s):</w>": 8101,
    "s);</w>": 8102,
    "s)</w>": 8103,
    "s)]</w>": 8104,
    "s,": 8105,
    "s,</w>": 8106,
    "s-": 8107,
    "s.": 8108,
    "s.\"\"\"</w>": 8109,
    "s.\")</w>": 8110,
    "s.\"</w>": 8111,
    "s.</w>": 8112,
    "s._": 8113,
    "s.__": 8114,
    "s.append(": 8115,
    "s.append(0)</w>": 8116,
    "s.collect()</w>": 8117,
    "s.copy()</w>": 8118,
    "s.get_": 8119,
    "s.r": 8120,
    "s.unstack(": 8121,
    "s1,</w>": 8122,
    "s1</w>": 8123,
    "s2</w>": 8124,
    "s2],</w>": 8125,
    "s:": 8126,
    "s:</w>": 8127,
    "s;</w>": 8128,
    "s</w>": 8129,
    "s=": 8130,
    "s=100,</w>": 8131,
    "s=2)]</w>": 8132,
    "s=4,</w>": 8133,
    "s=[": 8134,
    "s=[['cobra',</w>": 8135,
    "s=[[0,</w>": 8136,
    "s=[[1,</w>": 8137,
    "s=none):</w>": 8138,
    "s=none,</w>": 8139,
    "s=true</w>": 8140,
    "s=u'": 8141,
    "s[": 8142,
    "s[\"__": 8143,
    "s[-1": 8144,
    "s[-1]</w>": 8145,
    "s[0": 8146,
    "s[0].": 8147,
    "s[0]</w>": 8148,
    "s[1:": 8149,
    "s[1:]:</w>": 8150,
    "s[i": 8151,
    "s[i],</w>": 8152,
    "s[i].": 8153,
    "s[i]</w>": 8154,
    "s[k": 8155,
    "s[k]</w>": 8156,
    "s[level": 8157,
    "s[level],</w>": 8158,
    "s]": 8159,
    "s]</w>": 8160,
    "s_": 8161,
    "s_safe(": 8162,
    "s_to_": 8163,
    "s_to_ns_": 8164,
    "safari</w>": 8165,
    "safe": 8166,
    "safe(": 8167,
    "safe_": 8168,
    "sale": 8169,
    "sale</w>": 8170,
    "sales.": 8171,
    "same": 8172,
    "same-": 8173,
    "same</w>": 8174,
    "same_": 8175,
    "samp_": 8176,
    "samp_log_": 8177,
    "sample": 8178,
    "sample(": 8179,
    "sample,</w>": 8180,
    "sample:</w>": 8181,
    "sample</w>": 8182,
    "sample[\"a": 8183,
    "sample[\"a\"])</w>": 8184,
    "sample[\"b": 8185,
    "sample[\"b\"])</w>": 8186,
    "sample]</w>": 8187,
    "samples)</w>": 8188,
    "sampling": 8189,
    "sampling</w>": 8190,
    "samplingratio": 8191,
    "samplingratio:</w>": 8192,
    "saniti": 8193,
    "sanitize_": 8194,
    "satis": 8195,
    "satisfy</w>": 8196,
    "saturday,</w>": 8197,
    "save": 8198,
    "save(": 8199,
    "save</w>": 8200,
    "save_": 8201,
    "save_reduce(": 8202,
    "saveastext": 8203,
    "saveastextfile(": 8204,
    "saves</w>": 8205,
    "saving</w>": 8206,
    "say</w>": 8207,
    "sc": 8208,
    "sc(),</w>": 8209,
    "sc,</w>": 8210,
    "sc.": 8211,
    "sc._": 8212,
    "sc._gateway.": 8213,
    "sc._j": 8214,
    "sc._jsc,</w>": 8215,
    "sc._jsc.sc(),</w>": 8216,
    "sc._jvm.": 8217,
    "sc._jvm.functions.": 8218,
    "sc._jvm.org.apache.": 8219,
    "sc._jvm.org.apache.spark.mllib.": 8220,
    "sc._jvm.org.apache.spark.sql.": 8221,
    "sc._jvm.python": 8222,
    "sc.defaultparallelis": 8223,
    "sc.defaultparallelism</w>": 8224,
    "sc.parallelize": 8225,
    "sc.parallelize(": 8226,
    "sc.parallelize([": 8227,
    "sc.parallelize(range(": 8228,
    "sc.parallelize(range(1000),</w>": 8229,
    "sc.parallelize(tmp": 8230,
    "sc.parallelize(tmp).sort": 8231,
    "sc.sc(),</w>": 8232,
    "sc.text": 8233,
    "sc:</w>": 8234,
    "scal": 8235,
    "scala</w>": 8236,
    "scalar": 8237,
    "scalar)</w>": 8238,
    "scalar</w>": 8239,
    "scalars.</w>": 8240,
    "scalars</w>": 8241,
    "scale": 8242,
    "scale)</w>": 8243,
    "scale,</w>": 8244,
    "sccallsite": 8245,
    "sccallsitesyn": 8246,
    "sch": 8247,
    "sche": 8248,
    "sched": 8249,
    "schema": 8250,
    "schema(": 8251,
    "schema(sdf_": 8252,
    "schema):</w>": 8253,
    "schema,</w>": 8254,
    "schema:</w>": 8255,
    "schema</w>": 8256,
    "schema=": 8257,
    "schema=none,</w>": 8258,
    "schema=schema,</w>": 8259,
    "schema_": 8260,
    "schema_of_": 8261,
    "sco": 8262,
    "scope": 8263,
    "scope_": 8264,
    "score": 8265,
    "score_": 8266,
    "scott</w>": 8267,
    "scrip": 8268,
    "sdf.": 8269,
    "sdf.schema</w>": 8270,
    "sdf.writestream.": 8271,
    "sdf.writestream.foreach": 8272,
    "sdf</w>": 8273,
    "sdf_": 8274,
    "sdf_schema</w>": 8275,
    "se": 8276,
    "se',</w>": 8277,
    "se,</w>": 8278,
    "se:</w>": 8279,
    "se</w>": 8280,
    "se_": 8281,
    "se_time</w>": 8282,
    "search": 8283,
    "sec": 8284,
    "second": 8285,
    "seconds.</w>": 8286,
    "seconds</w>": 8287,
    "sect</w>": 8288,
    "section</w>": 8289,
    "sed</w>": 8290,
    "see": 8291,
    "see</w>": 8292,
    "see_": 8293,
    "see_also": 8294,
    "seealso": 8295,
    "seealso::</w>": 8296,
    "seed": 8297,
    "seed:</w>": 8298,
    "seed=": 8299,
    "seed=2)</w>": 8300,
    "seed=42)</w>": 8301,
    "seek": 8302,
    "seen</w>": 8303,
    "segmen": 8304,
    "segment_": 8305,
    "segment_id": 8306,
    "segment_ids.append(0)</w>": 8307,
    "sel": 8308,
    "selec": 8309,
    "select(": 8310,
    "select</w>": 8311,
    "select_": 8312,
    "selected_": 8313,
    "selection": 8314,
    "selection</w>": 8315,
    "selection_context(self):</w>": 8316,
    "selections</w>": 8317,
    "self": 8318,
    "self))</w>": 8319,
    "self),</w>": 8320,
    "self).": 8321,
    "self).summary)</w>": 8322,
    "self):</w>": 8323,
    "self)</w>": 8324,
    "self,</w>": 8325,
    "self.": 8326,
    "self.</w>": 8327,
    "self._": 8328,
    "self.__class__.__": 8329,
    "self.__class__.__name__)</w>": 8330,
    "self._apply_": 8331,
    "self._apply_axis_propertie": 8332,
    "self._apply_axis_properties(": 8333,
    "self._axis_": 8334,
    "self._axis_order": 8335,
    "self._box_": 8336,
    "self._can_": 8337,
    "self._can_hold_": 8338,
    "self._compute": 8339,
    "self._compute_": 8340,
    "self._compute_logit(": 8341,
    "self._con": 8342,
    "self._consolidate_inplace()</w>": 8343,
    "self._constructor": 8344,
    "self._constructor(": 8345,
    "self._constructor(new_": 8346,
    "self._constructor(new_data).__finalize__(self)</w>": 8347,
    "self._constructor(res_": 8348,
    "self._constructor(res_values,</w>": 8349,
    "self._data.": 8350,
    "self._data</w>": 8351,
    "self._df(self._j": 8352,
    "self._df(self._jreader.": 8353,
    "self._file.": 8354,
    "self._get_": 8355,
    "self._get_attribute": 8356,
    "self._get_attributes_": 8357,
    "self._get_attributes_dict()</w>": 8358,
    "self._get_axis(": 8359,
    "self._get_axis(axis)</w>": 8360,
    "self._get_axis_": 8361,
    "self._get_axis_name(": 8362,
    "self._get_axis_name(axis)</w>": 8363,
    "self._get_axis_number(": 8364,
    "self._get_axis_number(axis)</w>": 8365,
    "self._get_block_manager_": 8366,
    "self._get_block_manager_axis(axis)</w>": 8367,
    "self._get_numeric_data()</w>": 8368,
    "self._j": 8369,
    "self._java_": 8370,
    "self._java_matrix_": 8371,
    "self._java_matrix_wrapper.": 8372,
    "self._jc.": 8373,
    "self._jcatalog.": 8374,
    "self._jconf.": 8375,
    "self._jconf</w>": 8376,
    "self._jdf.": 8377,
    "self._jrdd_de": 8378,
    "self._jrdd_deserializer)</w>": 8379,
    "self._jssc.": 8380,
    "self._jwrite.": 8381,
    "self._jwrite</w>": 8382,
    "self._na_value</w>": 8383,
    "self._next_": 8384,
    "self._prep_": 8385,
    "self._sc.": 8386,
    "self._sc.defaultparallelism</w>": 8387,
    "self._selected_": 8388,
    "self._selected_obj</w>": 8389,
    "self._selection</w>": 8390,
    "self._set_": 8391,
    "self._set_opt": 8392,
    "self._set_opts(": 8393,
    "self._spark._": 8394,
    "self._stat_axis_number</w>": 8395,
    "self._step</w>": 8396,
    "self._try_coerce_": 8397,
    "self._try_coerce_arg": 8398,
    "self._update_": 8399,
    "self.apply(lambda</w>": 8400,
    "self.asi8</w>": 8401,
    "self.astype(object)</w>": 8402,
    "self.attrs.": 8403,
    "self.axes[": 8404,
    "self.axis</w>": 8405,
    "self.blocks:</w>": 8406,
    "self.blocks</w>": 8407,
    "self.c": 8408,
    "self.config.": 8409,
    "self.config.d_": 8410,
    "self.config.d_model": 8411,
    "self.config.d_model]</w>": 8412,
    "self.copy()</w>": 8413,
    "self.ct": 8414,
    "self.ctx._": 8415,
    "self.ctx._jvm.": 8416,
    "self.ctx._jvm.pythonrdd.": 8417,
    "self.data.": 8418,
    "self.data</w>": 8419,
    "self.dtype.": 8420,
    "self.dtype.na_value</w>": 8421,
    "self.dtype</w>": 8422,
    "self.encoding</w>": 8423,
    "self.freq</w>": 8424,
    "self.get_": 8425,
    "self.getnumpartitions()</w>": 8426,
    "self.grouper,</w>": 8427,
    "self.grouper.": 8428,
    "self.grouper.group_info</w>": 8429,
    "self.grouper</w>": 8430,
    "self.hassummary:</w>": 8431,
    "self.init_": 8432,
    "self.init_weight(": 8433,
    "self.is_": 8434,
    "self.make_block": 8435,
    "self.map(lambda</w>": 8436,
    "self.mappartition": 8437,
    "self.mappartitions(": 8438,
    "self.metadata</w>": 8439,
    "self.mgr_": 8440,
    "self.mode(": 8441,
    "self.n": 8442,
    "self.name</w>": 8443,
    "self.ndim</w>": 8444,
    "self.obj.": 8445,
    "self.obj</w>": 8446,
    "self.out_": 8447,
    "self.out_layer": 8448,
    "self.out_layers[0].": 8449,
    "self.p": 8450,
    "self.plot_": 8451,
    "self.plot_obj.": 8452,
    "self.plot_obj.date_axis_info</w>": 8453,
    "self.save_reduce(": 8454,
    "self.serializer.": 8455,
    "self.serializer.dump_": 8456,
    "self.set_": 8457,
    "self.set_ato": 8458,
    "self.sparksession.": 8459,
    "self.sql_ct": 8460,
    "self.sql_ctx)</w>": 8461,
    "self.start.": 8462,
    "self.table.": 8463,
    "self.validate_": 8464,
    "self.values)</w>": 8465,
    "self.values.": 8466,
    "self.values</w>": 8467,
    "self.values[": 8468,
    "self.values_": 8469,
    "self.weekday</w>": 8470,
    "self</w>": 8471,
    "self[": 8472,
    "self]</w>": 8473,
    "self}</w>": 8474,
    "sem": 8475,
    "seman": 8476,
    "semanti": 8477,
    "semantics</w>": 8478,
    "sen": 8479,
    "sen</w>": 8480,
    "sense</w>": 8481,
    "sensiti": 8482,
    "sensitive</w>": 8483,
    "sent</w>": 8484,
    "senten": 8485,
    "sentence</w>": 8486,
    "sentinel</w>": 8487,
    "sep": 8488,
    "sep)</w>": 8489,
    "sep,</w>": 8490,
    "sep:</w>": 8491,
    "sep=": 8492,
    "sep=sep,</w>": 8493,
    "separated</w>": 8494,
    "seq": 8495,
    "seq(": 8496,
    "seq_": 8497,
    "seq_length</w>": 8498,
    "seqop,</w>": 8499,
    "sequen": 8500,
    "sequence": 8501,
    "sequence</w>": 8502,
    "sequence=": 8503,
    "sequencefile</w>": 8504,
    "sequences,</w>": 8505,
    "ser": 8506,
    "seri": 8507,
    "seriali": 8508,
    "serializ": 8509,
    "serialization_": 8510,
    "serialize": 8511,
    "serialize</w>": 8512,
    "serialized</w>": 8513,
    "serializer": 8514,
    "serializer(pickle": 8515,
    "serializer(pickleserializer": 8516,
    "serializer)</w>": 8517,
    "serializer.": 8518,
    "serializer</w>": 8519,
    "serie": 8520,
    "series": 8521,
    "series(": 8522,
    "series):</w>": 8523,
    "series)</w>": 8524,
    "series,</w>": 8525,
    "series.": 8526,
    "series.array</w>": 8527,
    "series.to_numpy</w>": 8528,
    "series.value_counts</w>": 8529,
    "series:</w>": 8530,
    "series</w>": 8531,
    "series_": 8532,
    "series_convert_timestamp": 8533,
    "series_index,</w>": 8534,
    "server": 8535,
    "server</w>": 8536,
    "server_": 8537,
    "servi": 8538,
    "service</w>": 8539,
    "service_": 8540,
    "service_ac": 8541,
    "session": 8542,
    "set": 8543,
    "set(": 8544,
    "set,</w>": 8545,
    "set.</w>": 8546,
    "set</w>": 8547,
    "set_": 8548,
    "set_name": 8549,
    "set_xlabel": 8550,
    "setop(other)</w>": 8551,
    "sets</w>": 8552,
    "setting</w>": 8553,
    "setup": 8554,
    "setupfunc</w>": 8555,
    "several</w>": 8556,
    "sh": 8557,
    "shape": 8558,
    "shape(": 8559,
    "shape))</w>": 8560,
    "shape):</w>": 8561,
    "shape)</w>": 8562,
    "shape,</w>": 8563,
    "shape</w>": 8564,
    "shape=": 8565,
    "shape[": 8566,
    "shape[axis]</w>": 8567,
    "share": 8568,
    "shared</w>": 8569,
    "sharey</w>": 8570,
    "sharing</w>": 8571,
    "shif": 8572,
    "shift": 8573,
    "shift(self,</w>": 8574,
    "shift</w>": 8575,
    "shift_": 8576,
    "shifted</w>": 8577,
    "shin": 8578,
    "ship</w>": 8579,
    "sho": 8580,
    "shor": 8581,
    "short": 8582,
    "shoul": 8583,
    "should</w>": 8584,
    "should_": 8585,
    "show": 8586,
    "show(": 8587,
    "show()</w>": 8588,
    "show(truncate": 8589,
    "show_": 8590,
    "show_dimension": 8591,
    "shows</w>": 8592,
    "shte": 8593,
    "shu": 8594,
    "shuffle": 8595,
    "shuffle.": 8596,
    "si": 8597,
    "side": 8598,
    "side,</w>": 8599,
    "side</w>": 8600,
    "sider.</w>": 8601,
    "sider</w>": 8602,
    "sidered</w>": 8603,
    "sidering</w>": 8604,
    "sif": 8605,
    "sig": 8606,
    "sigma</w>": 8607,
    "signal": 8608,
    "signature</w>": 8609,
    "silen": 8610,
    "silently</w>": 8611,
    "simil": 8612,
    "similar</w>": 8613,
    "simple": 8614,
    "simple_": 8615,
    "simple_new": 8616,
    "sin": 8617,
    "since</w>": 8618,
    "sine</w>": 8619,
    "sing": 8620,
    "sing.</w>": 8621,
    "sing</w>": 8622,
    "single": 8623,
    "single-": 8624,
    "single</w>": 8625,
    "single_": 8626,
    "single_aligner</w>": 8627,
    "singlequote": 8628,
    "singul": 8629,
    "singular</w>": 8630,
    "sink</w>": 8631,
    "sion": 8632,
    "sion</w>": 8633,
    "sion_": 8634,
    "sionad": 8635,
    "sional</w>": 8636,
    "sionarray</w>": 8637,
    "sis,</w>": 8638,
    "sis</w>": 8639,
    "sist</w>": 8640,
    "sisten": 8641,
    "sisting</w>": 8642,
    "sists</w>": 8643,
    "site": 8644,
    "siti": 8645,
    "sity</w>": 8646,
    "sity_": 8647,
    "size": 8648,
    "size(": 8649,
    "size(data)=": 8650,
    "size)</w>": 8651,
    "size,</w>": 8652,
    "size</w>": 8653,
    "size=": 8654,
    "size=self.": 8655,
    "size_": 8656,
    "size_qu": 8657,
    "sizes)</w>": 8658,
    "sk": 8659,
    "skinn": 8660,
    "skip": 8661,
    "skipna": 8662,
    "skipna)</w>": 8663,
    "skipna=": 8664,
    "skipna=skipna)</w>": 8665,
    "skipna=true,</w>": 8666,
    "skipped.</w>": 8667,
    "skipped</w>": 8668,
    "skipping</w>": 8669,
    "sl": 8670,
    "slashescaping": 8671,
    "slc</w>": 8672,
    "sli": 8673,
    "slibs.": 8674,
    "slice": 8675,
    "slice(": 8676,
    "slice(none": 8677,
    "slice):</w>": 8678,
    "slice</w>": 8679,
    "slice_": 8680,
    "slicer": 8681,
    "slicer=none,</w>": 8682,
    "slicer]</w>": 8683,
    "slicers</w>": 8684,
    "slicing</w>": 8685,
    "slided": 8686,
    "slideduration": 8687,
    "slo": 8688,
    "slot": 8689,
    "small": 8690,
    "smalle": 8691,
    "smaller)</w>": 8692,
    "smaller,</w>": 8693,
    "smallest</w>": 8694,
    "smax</w>": 8695,
    "smin</w>": 8696,
    "snap": 8697,
    "so": 8698,
    "so</w>": 8699,
    "sock": 8700,
    "sock.": 8701,
    "sock_": 8702,
    "sock_info</w>": 8703,
    "socket(sock_": 8704,
    "socket(sock_info,</w>": 8705,
    "sof": 8706,
    "soft": 8707,
    "softmax(": 8708,
    "softmax</w>": 8709,
    "softmax_": 8710,
    "sol": 8711,
    "sole</w>": 8712,
    "solidate:</w>": 8713,
    "solidate_": 8714,
    "solidate_inplace()</w>": 8715,
    "solve</w>": 8716,
    "some</w>": 8717,
    "somename": 8718,
    "something</w>": 8719,
    "son": 8720,
    "son</w>": 8721,
    "sor": 8722,
    "sort": 8723,
    "sort',</w>": 8724,
    "sort)</w>": 8725,
    "sort</w>": 8726,
    "sort=": 8727,
    "sort=sort)</w>": 8728,
    "sort_": 8729,
    "sort_values(": 8730,
    "sort_values</w>": 8731,
    "sorted(": 8732,
    "sorted(input(": 8733,
    "sorted(input(glob": 8734,
    "sorted(input(glob(": 8735,
    "sorted(sc.": 8736,
    "sorted</w>": 8737,
    "sortwithin": 8738,
    "sortwithinpartition": 8739,
    "sour": 8740,
    "source": 8741,
    "source</w>": 8742,
    "sox</w>": 8743,
    "sp": 8744,
    "sp_": 8745,
    "sp_index.": 8746,
    "space": 8747,
    "spacing": 8748,
    "spacing,</w>": 8749,
    "spam</w>": 8750,
    "span": 8751,
    "span.": 8752,
    "span</w>": 8753,
    "spar": 8754,
    "spark": 8755,
    "spark-": 8756,
    "spark.": 8757,
    "spark._": 8758,
    "spark.cre": 8759,
    "spark.createdataframe([": 8760,
    "spark.createdataframe([('": 8761,
    "spark.createdataframe([('199": 8762,
    "spark.createdataframe([('1997": 8763,
    "spark.createdataframe([('1997-02-28</w>": 8764,
    "spark.createdataframe([('2015": 8765,
    "spark.createdataframe([('2015-04": 8766,
    "spark.createdataframe([('2015-04-08": 8767,
    "spark.createdataframe([('2015-04-08',)],</w>": 8768,
    "spark.createdataframe([('abc": 8769,
    "spark.createdataframe([('abcd": 8770,
    "spark.createdataframe([('abcd',)],</w>": 8771,
    "spark.ml": 8772,
    "spark.ml.": 8773,
    "spark.mllib.": 8774,
    "spark.sql": 8775,
    "spark.sql(\"select</w>": 8776,
    "spark.sql.": 8777,
    "spark.sql.columnnameofcorruptrecord</w>": 8778,
    "spark.sql.javastringlength": 8779,
    "spark.sql.parquet.": 8780,
    "spark.sql.parquet.mergeschema</w>": 8781,
    "spark.sql.source": 8782,
    "spark.sql.sources.": 8783,
    "spark.sql.sources.default</w>": 8784,
    "spark.sql</w>": 8785,
    "spark.udf.": 8786,
    "spark.udf.register": 8787,
    "spark.udf.registerjavafunction(</w>": 8788,
    "spark</w>": 8789,
    "spark_": 8790,
    "spark_ho": 8791,
    "spark_home": 8792,
    "spark_type</w>": 8793,
    "sparkcontex": 8794,
    "sparkcontext._": 8795,
    "sparkcontext._acti": 8796,
    "sparkcontext._active_": 8797,
    "sparkcontext._active_spark_": 8798,
    "sparkcontext._active_spark_context</w>": 8799,
    "sparkfiles.": 8800,
    "sparksession": 8801,
    "sparksession.": 8802,
    "sparse": 8803,
    "sparse(": 8804,
    "sparse</w>": 8805,
    "sparse_": 8806,
    "sparsearray</w>": 8807,
    "sparseindex</w>": 8808,
    "sparseseries</w>": 8809,
    "sparsevector": 8810,
    "sparsevector(2,</w>": 8811,
    "sparsevector(4,</w>": 8812,
    "sparsif": 8813,
    "spartitioning": 8814,
    "spe": 8815,
    "spear": 8816,
    "spearman": 8817,
    "spearman\")</w>": 8818,
    "spec": 8819,
    "spec</w>": 8820,
    "speci": 8821,
    "special": 8822,
    "special</w>": 8823,
    "speciali": 8824,
    "specialized</w>": 8825,
    "specially</w>": 8826,
    "specif": 8827,
    "specifi": 8828,
    "specific</w>": 8829,
    "specification</w>": 8830,
    "specifie": 8831,
    "specifies</w>": 8832,
    "specifying</w>": 8833,
    "specimen_": 8834,
    "spect.": 8835,
    "speed": 8836,
    "speed</w>": 8837,
    "sper": 8838,
    "spill": 8839,
    "spill()</w>": 8840,
    "split": 8841,
    "splitting</w>": 8842,
    "sq": 8843,
    "sq.is": 8844,
    "sq.isactive</w>": 8845,
    "sql": 8846,
    "sql,</w>": 8847,
    "sql.": 8848,
    "sql.</w>": 8849,
    "sql</w>": 8850,
    "sql]</w>": 8851,
    "sql_": 8852,
    "sql_ct": 8853,
    "sqlal": 8854,
    "sqlalchemy.": 8855,
    "sqlalchemy.engine.": 8856,
    "sqlalchemy</w>": 8857,
    "sqlcontext.": 8858,
    "sqlcontext.createdataframe(": 8859,
    "sqlcontext.createdataframe(rdd,</w>": 8860,
    "sqlcontext.get": 8861,
    "sqlcontext.getconf(\"spark.sql.shuffle.partition": 8862,
    "sqlcontext</w>": 8863,
    "sqlite": 8864,
    "sqlite3</w>": 8865,
    "sqr": 8866,
    "sqrt(": 8867,
    "sqrt</w>": 8868,
    "squared_": 8869,
    "squared_distance(": 8870,
    "sque": 8871,
    "squee": 8872,
    "squeeze": 8873,
    "squeeze()</w>": 8874,
    "squeeze</w>": 8875,
    "squeezed</w>": 8876,
    "squeezing</w>": 8877,
    "sr": 8878,
    "src_": 8879,
    "ss": 8880,
    "ss-": 8881,
    "ss.": 8882,
    "ss</w>": 8883,
    "ss_": 8884,
    "ssc.": 8885,
    "sscanned</w>": 8886,
    "ssed</w>": 8887,
    "ssentially</w>": 8888,
    "sses</w>": 8889,
    "ssi": 8890,
    "ssing": 8891,
    "ssing</w>": 8892,
    "ssion": 8893,
    "sskey": 8894,
    "ssor": 8895,
    "sspilled</w>": 8896,
    "sstab": 8897,
    "ssubplot</w>": 8898,
    "st": 8899,
    "st(3,</w>": 8900,
    "st:</w>": 8901,
    "st</w>": 8902,
    "st_": 8903,
    "stack": 8904,
    "stack(": 8905,
    "stack</w>": 8906,
    "stacked</w>": 8907,
    "stacker.": 8908,
    "stacker.get_": 8909,
    "stacker_": 8910,
    "stacklevel=": 8911,
    "stacklevel=2)</w>": 8912,
    "stackover": 8913,
    "stage.get": 8914,
    "stage</w>": 8915,
    "stall</w>": 8916,
    "stalled": 8917,
    "stalled</w>": 8918,
    "stamp": 8919,
    "stan": 8920,
    "stance(": 8921,
    "stand": 8922,
    "standard</w>": 8923,
    "standardi": 8924,
    "standardize_": 8925,
    "standardize_jira_re": 8926,
    "standardize_jira_ref(</w>": 8927,
    "star": 8928,
    "start": 8929,
    "start),</w>": 8930,
    "start,</w>": 8931,
    "start.": 8932,
    "start:": 8933,
    "start</w>": 8934,
    "start=": 8935,
    "start='": 8936,
    "start='1</w>": 8937,
    "start='2017": 8938,
    "start='2017-01-01',</w>": 8939,
    "start=start,</w>": 8940,
    "start_": 8941,
    "start_date.": 8942,
    "start_date</w>": 8943,
    "start_logit</w>": 8944,
    "start_logit=": 8945,
    "start_position": 8946,
    "start_position</w>": 8947,
    "start_s</w>": 8948,
    "start_slice</w>": 8949,
    "startpo": 8950,
    "startpos,</w>": 8951,
    "startswith": 8952,
    "stat": 8953,
    "stat_": 8954,
    "stat_axis_number</w>": 8955,
    "stata_": 8956,
    "stata_epoch.": 8957,
    "state": 8958,
    "state(": 8959,
    "state</w>": 8960,
    "state['step": 8961,
    "state['step']</w>": 8962,
    "state_": 8963,
    "state_dict,</w>": 8964,
    "state_dict.": 8965,
    "state_dict:</w>": 8966,
    "state_dict</w>": 8967,
    "statisti": 8968,
    "statistic</w>": 8969,
    "statistics.": 8970,
    "statistics.corr": 8971,
    "statistics.corr(x,</w>": 8972,
    "statistics</w>": 8973,
    "stats()</w>": 8974,
    "stats.": 8975,
    "stats.count()</w>": 8976,
    "status</w>": 8977,
    "std": 8978,
    "std()</w>": 8979,
    "std)</w>": 8980,
    "std</w>": 8981,
    "stdev": 8982,
    "stdev()</w>": 8983,
    "ste": 8984,
    "sted</w>": 8985,
    "sted_": 8986,
    "step": 8987,
    "step)</w>": 8988,
    "step:</w>": 8989,
    "step</w>": 8990,
    "step=": 8991,
    "step_": 8992,
    "step_o</w>": 8993,
    "step_s</w>": 8994,
    "steps</w>": 8995,
    "stimate</w>": 8996,
    "stimation</w>": 8997,
    "stimator": 8998,
    "stly</w>": 8999,
    "stm": 9000,
    "sto": 9001,
    "stop": 9002,
    "stop=": 9003,
    "stopiteration(": 9004,
    "stopword": 9005,
    "storage": 9006,
    "storage_": 9007,
    "storagelevel": 9008,
    "storagelevel(": 9009,
    "storagelevel)</w>": 9010,
    "storagelevel.": 9011,
    "store</w>": 9012,
    "str": 9013,
    "str(": 9014,
    "str(e": 9015,
    "str(e):</w>": 9016,
    "str(x)</w>": 9017,
    "str),</w>": 9018,
    "str):</w>": 9019,
    "str)</w>": 9020,
    "str,</w>": 9021,
    "str32</w>": 9022,
    "str:</w>": 9023,
    "str</w>": 9024,
    "strap</w>": 9025,
    "strapping</w>": 9026,
    "strate": 9027,
    "stre": 9028,
    "stream": 9029,
    "stream</w>": 9030,
    "streaming": 9031,
    "streamingcontext</w>": 9032,
    "streamingquery": 9033,
    "streamingquerymanager</w>": 9034,
    "strf": 9035,
    "strftime": 9036,
    "strftime</w>": 9037,
    "stri": 9038,
    "strictly</w>": 9039,
    "string": 9040,
    "string\")</w>": 9041,
    "string())</w>": 9042,
    "string)</w>": 9043,
    "string,</w>": 9044,
    "string.": 9045,
    "string.\")</w>": 9046,
    "string</w>": 9047,
    "string_": 9048,
    "stringi": 9049,
    "stringio": 9050,
    "strings),</w>": 9051,
    "strings,</w>": 9052,
    "strings.</w>": 9053,
    "strings</w>": 9054,
    "stringtype": 9055,
    "stringtype(),</w>": 9056,
    "string}</w>": 9057,
    "strip": 9058,
    "strip())</w>": 9059,
    "strip().": 9060,
    "strip()</w>": 9061,
    "stripping</w>": 9062,
    "strl": 9063,
    "strl</w>": 9064,
    "stro": 9065,
    "strp": 9066,
    "struc": 9067,
    "struct": 9068,
    "struct.": 9069,
    "struct.pack": 9070,
    "structfield(": 9071,
    "structfield(\"f1\",</w>": 9072,
    "structfield</w>": 9073,
    "struction": 9074,
    "structtype(": 9075,
    "structtype([": 9076,
    "structtype([structfield(\"f1\",</w>": 9077,
    "structtype(list(": 9078,
    "structtype(list(structfield(": 9079,
    "structtype(list(structfield(a,": 9080,
    "structtype):</w>": 9081,
    "structtype</w>": 9082,
    "stu": 9083,
    "stub": 9084,
    "stubnames</w>": 9085,
    "stuff</w>": 9086,
    "sty": 9087,
    "style": 9088,
    "style</w>": 9089,
    "style_": 9090,
    "style_dict</w>": 9091,
    "styles,</w>": 9092,
    "su": 9093,
    "sub": 9094,
    "sub-": 9095,
    "sub-classes</w>": 9096,
    "sub:</w>": 9097,
    "sub_": 9098,
    "subclass</w>": 9099,
    "submit</w>": 9100,
    "submodel": 9101,
    "subplot": 9102,
    "subplot(2,</w>": 9103,
    "subplots=true</w>": 9104,
    "subsequen": 9105,
    "subsequent</w>": 9106,
    "subset,</w>": 9107,
    "subset</w>": 9108,
    "subset=": 9109,
    "subset=subset,</w>": 9110,
    "subtract</w>": 9111,
    "subtracting</w>": 9112,
    "suc": 9113,
    "succe": 9114,
    "success": 9115,
    "success</w>": 9116,
    "sufficien": 9117,
    "suffix": 9118,
    "suffix</w>": 9119,
    "suffix=": 9120,
    "suffixes.</w>": 9121,
    "suffixes</w>": 9122,
    "sug": 9123,
    "sugge": 9124,
    "suitable</w>": 9125,
    "sum": 9126,
    "sum(": 9127,
    "sum()</w>": 9128,
    "sum(axis,</w>": 9129,
    "sum_": 9130,
    "sum_udf(v": 9131,
    "sume</w>": 9132,
    "sumed</w>": 9133,
    "summar": 9134,
    "summari": 9135,
    "summarized</w>": 9136,
    "summary": 9137,
    "summary)</w>": 9138,
    "summary</w>": 9139,
    "sup": 9140,
    "super": 9141,
    "super(": 9142,
    "supplied,</w>": 9143,
    "supplied</w>": 9144,
    "suppor": 9145,
    "support,</w>": 9146,
    "support</w>": 9147,
    "supported.</w>": 9148,
    "supported</w>": 9149,
    "supports</w>": 9150,
    "suppress</w>": 9151,
    "sure": 9152,
    "sure</w>": 9153,
    "sure_": 9154,
    "sures</w>": 9155,
    "sus</w>": 9156,
    "sv": 9157,
    "svd_": 9158,
    "svd_model.": 9159,
    "sw": 9160,
    "swap</w>": 9161,
    "swith": 9162,
    "sy": 9163,
    "symmetri": 9164,
    "symmetric</w>": 9165,
    "symmetric_": 9166,
    "syn": 9167,
    "synon": 9168,
    "synony": 9169,
    "syntax</w>": 9170,
    "sys.": 9171,
    "sys.max": 9172,
    "syste": 9173,
    "s}</w>": 9174,
    "t": 9175,
    "t\",</w>": 9176,
    "t\"</w>": 9177,
    "t',</w>": 9178,
    "t'</w>": 9179,
    "t(": 9180,
    "t()</w>": 9181,
    "t(self,</w>": 9182,
    "t))</w>": 9183,
    "t):</w>": 9184,
    "t)</w>": 9185,
    "t,</w>": 9186,
    "t-": 9187,
    "t.": 9188,
    "t.</w>": 9189,
    "t._": 9190,
    "t1,</w>": 9191,
    "t1</w>": 9192,
    "t2": 9193,
    "t:</w>": 9194,
    "t</w>": 9195,
    "t=": 9196,
    "t]</w>": 9197,
    "t_": 9198,
    "ta": 9199,
    "ta,</w>": 9200,
    "ta.": 9201,
    "ta</w>": 9202,
    "tab": 9203,
    "table": 9204,
    "table(": 9205,
    "table,</w>": 9206,
    "table.": 9207,
    "table</w>": 9208,
    "table_": 9209,
    "table_name</w>": 9210,
    "tables.": 9211,
    "tables</w>": 9212,
    "tadata</w>": 9213,
    "tag": 9214,
    "tage</w>": 9215,
    "tags</w>": 9216,
    "tail": 9217,
    "tail()</w>": 9218,
    "tain</w>": 9219,
    "take": 9220,
    "take(": 9221,
    "take([0,</w>": 9222,
    "take</w>": 9223,
    "take_": 9224,
    "take_smaller)</w>": 9225,
    "take_smaller,</w>": 9226,
    "takeable": 9227,
    "tal": 9228,
    "tal.</w>": 9229,
    "tal</w>": 9230,
    "target=": 9231,
    "task": 9232,
    "tation\"</w>": 9233,
    "tation.</w>": 9234,
    "tation</w>": 9235,
    "tations</w>": 9236,
    "tattr": 9237,
    "tax</w>": 9238,
    "tb": 9239,
    "tbl": 9240,
    "tcp</w>": 9241,
    "td</w>": 9242,
    "tdelta</w>": 9243,
    "te": 9244,
    "te</w>": 9245,
    "ted(": 9246,
    "ted,</w>": 9247,
    "ted.</w>": 9248,
    "ted</w>": 9249,
    "tederror": 9250,
    "temp": 9251,
    "temp_": 9252,
    "temp_f</w>": 9253,
    "tempfile": 9254,
    "tempfile.": 9255,
    "tempfile.close()</w>": 9256,
    "tempfile.mk": 9257,
    "tempfile.mkd": 9258,
    "tempfile.mkdtemp": 9259,
    "tempfile.mkdtemp())</w>": 9260,
    "tempfile.mkdtemp(),</w>": 9261,
    "tempfile.name)</w>": 9262,
    "tempfile2.": 9263,
    "tempfile3.": 9264,
    "temporar": 9265,
    "ten": 9266,
    "ten</w>": 9267,
    "tensor": 9268,
    "tensorflow</w>": 9269,
    "tential</w>": 9270,
    "tentially</w>": 9271,
    "ter": 9272,
    "ter(": 9273,
    "ter</w>": 9274,
    "ter_": 9275,
    "term.": 9276,
    "term</w>": 9277,
    "term_type</w>": 9278,
    "terminal_": 9279,
    "terminated</w>": 9280,
    "termination()</w>": 9281,
    "terms</w>": 9282,
    "terror": 9283,
    "terror:</w>": 9284,
    "ters</w>": 9285,
    "test": 9286,
    "test)=": 9287,
    "test)=4)]</w>": 9288,
    "test_": 9289,
    "test_support</w>": 9290,
    "testfile.": 9291,
    "testfile.write(\"": 9292,
    "testfile:</w>": 9293,
    "tex": 9294,
    "text": 9295,
    "text</w>": 9296,
    "tf.": 9297,
    "tf.train.": 9298,
    "tf</w>": 9299,
    "tf_": 9300,
    "tf_to_": 9301,
    "tf_to_p": 9302,
    "tf_to_pt_": 9303,
    "tf_to_pt_map.": 9304,
    "tf_to_pt_map.update({</w>": 9305,
    "th": 9306,
    "th</w>": 9307,
    "than</w>": 9308,
    "that": 9309,
    "that's</w>": 9310,
    "that</w>": 9311,
    "the": 9312,
    "the-": 9313,
    "the</w>": 9314,
    "the_": 9315,
    "thei": 9316,
    "their</w>": 9317,
    "ther</w>": 9318,
    "there": 9319,
    "there's</w>": 9320,
    "therefore": 9321,
    "therefore,</w>": 9322,
    "therefore</w>": 9323,
    "these</w>": 9324,
    "they": 9325,
    "they</w>": 9326,
    "thin": 9327,
    "thing": 9328,
    "thing</w>": 9329,
    "think</w>": 9330,
    "this</w>": 9331,
    "tho": 9332,
    "thon": 9333,
    "thon</w>": 9334,
    "thon_": 9335,
    "thoni": 9336,
    "those</w>": 9337,
    "thou": 9338,
    "though</w>": 9339,
    "thr": 9340,
    "thre": 9341,
    "thread(": 9342,
    "thread(target=": 9343,
    "three</w>": 9344,
    "threshol": 9345,
    "threshold": 9346,
    "threshold(": 9347,
    "threshold(s).</w>": 9348,
    "threshold</w>": 9349,
    "throu": 9350,
    "through.</w>": 9351,
    "through</w>": 9352,
    "throw": 9353,
    "throw</w>": 9354,
    "thrown.</w>": 9355,
    "thrown</w>": 9356,
    "throws</w>": 9357,
    "thru</w>": 9358,
    "thus,</w>": 9359,
    "thus</w>": 9360,
    "ti": 9361,
    "tial": 9362,
    "tick": 9363,
    "ticks</w>": 9364,
    "tie": 9365,
    "tie_": 9366,
    "til</w>": 9367,
    "tile": 9368,
    "time": 9369,
    "time)</w>": 9370,
    "time,</w>": 9371,
    "time-": 9372,
    "time.": 9373,
    "time</w>": 9374,
    "time_": 9375,
    "timedel": 9376,
    "timedelta": 9377,
    "timedelta(": 9378,
    "timedelta(days=": 9379,
    "timedelta64": 9380,
    "timedelta64[ns]</w>": 9381,
    "timedelta</w>": 9382,
    "timedeltaarray</w>": 9383,
    "timeout,</w>": 9384,
    "timeout</w>": 9385,
    "times,</w>": 9386,
    "timeseries.": 9387,
    "timeseries.html</w>": 9388,
    "timeseries</w>": 9389,
    "timestamp": 9390,
    "timestamp(": 9391,
    "timestamp</w>": 9392,
    "timestampformat:</w>": 9393,
    "timestampformat=": 9394,
    "timestampformat=none,</w>": 9395,
    "timestampformat=timestamp": 9396,
    "timestampformat=timestampformat,</w>": 9397,
    "timestamps,</w>": 9398,
    "timestamps.</w>": 9399,
    "timestamps</w>": 9400,
    "timestamptype())</w>": 9401,
    "timestamptype</w>": 9402,
    "timez": 9403,
    "timezone": 9404,
    "timezone)</w>": 9405,
    "timezone-": 9406,
    "timezone-naive</w>": 9407,
    "timezone</w>": 9408,
    "timi": 9409,
    "timplemen": 9410,
    "tin": 9411,
    "tin</w>": 9412,
    "ting": 9413,
    "ting.": 9414,
    "ting</w>": 9415,
    "tiny": 9416,
    "tinyint</w>": 9417,
    "tion": 9418,
    "tion</w>": 9419,
    "tionerror": 9420,
    "tit": 9421,
    "title": 9422,
    "tly</w>": 9423,
    "tmp": 9424,
    "tmpfile.": 9425,
    "tmpfile.name,</w>": 9426,
    "to": 9427,
    "to-": 9428,
    "to:</w>": 9429,
    "to</w>": 9430,
    "to_": 9431,
    "to_conc": 9432,
    "to_datetime(": 9433,
    "to_datetime</w>": 9434,
    "to_dense": 9435,
    "to_frame": 9436,
    "to_frame()</w>": 9437,
    "to_native_types(self,</w>": 9438,
    "to_numeric</w>": 9439,
    "to_numpy": 9440,
    "to_numpy</w>": 9441,
    "to_off": 9442,
    "to_replace,</w>": 9443,
    "to_sql": 9444,
    "to_timedelta</w>": 9445,
    "to_upper": 9446,
    "toarray(),</w>": 9447,
    "toarray()</w>": 9448,
    "todebug": 9449,
    "todo": 9450,
    "todo(": 9451,
    "todo:</w>": 9452,
    "together.</w>": 9453,
    "together</w>": 9454,
    "tok_": 9455,
    "tok_end_position</w>": 9456,
    "tok_s_to_ns_": 9457,
    "token": 9458,
    "token_to_": 9459,
    "token_to_orig_": 9460,
    "tokeni": 9461,
    "tokenized</w>": 9462,
    "tokenizer,</w>": 9463,
    "tokenizer.": 9464,
    "tokenizer.tokeni": 9465,
    "tokenizer.tokenize(example.": 9466,
    "tokenizer</w>": 9467,
    "tokens)</w>": 9468,
    "tokens,</w>": 9469,
    "tokens.</w>": 9470,
    "tokens.append(": 9471,
    "tokens.append(\"[sep": 9472,
    "tokens.append(\"[sep]": 9473,
    "tokens.append(\"[sep]\")</w>": 9474,
    "tokens:</w>": 9475,
    "tokens</w>": 9476,
    "tokens_": 9477,
    "tokens_a,</w>": 9478,
    "tokens_a</w>": 9479,
    "tokens_b,</w>": 9480,
    "tokens_b</w>": 9481,
    "toleran": 9482,
    "tolerance)</w>": 9483,
    "tolerance</w>": 9484,
    "tolocal": 9485,
    "tolocalmatrix()</w>": 9486,
    "tom</w>": 9487,
    "ton": 9488,
    "toni": 9489,
    "too</w>": 9490,
    "tools.": 9491,
    "top": 9492,
    "top,</w>": 9493,
    "top-level</w>": 9494,
    "top:</w>": 9495,
    "topi": 9496,
    "topic": 9497,
    "topics</w>": 9498,
    "tor": 9499,
    "tor</w>": 9500,
    "torch.": 9501,
    "torch.from_": 9502,
    "tot_": 9503,
    "total": 9504,
    "total</w>": 9505,
    "toy</w>": 9506,
    "tp": 9507,
    "tp</w>": 9508,
    "tr": 9509,
    "tra:</w>": 9510,
    "tra</w>": 9511,
    "tra=none):</w>": 9512,
    "tra_": 9513,
    "trace": 9514,
    "traceback</w>": 9515,
    "tract('str": 9516,
    "tract</w>": 9517,
    "tract_": 9518,
    "tracted</w>": 9519,
    "tracting</w>": 9520,
    "train": 9521,
    "train.": 9522,
    "trainclassifier": 9523,
    "trainclassifier(sc.parallelize(": 9524,
    "trainclassifier(sc.parallelize(data),</w>": 9525,
    "trained</w>": 9526,
    "training": 9527,
    "trainingsummary</w>": 9528,
    "trainratio": 9529,
    "trainvalidation": 9530,
    "trainvalidationsplit": 9531,
    "tral</w>": 9532,
    "tran": 9533,
    "trans": 9534,
    "transfer</w>": 9535,
    "transfo": 9536,
    "transform": 9537,
    "transformfunction(self._": 9538,
    "transformfunction(self._sc,</w>": 9539,
    "transl": 9540,
    "transpo": 9541,
    "transpose": 9542,
    "transpose()</w>": 9543,
    "tre": 9544,
    "treat</w>": 9545,
    "treated</w>": 9546,
    "trecord</w>": 9547,
    "tree": 9548,
    "tree</w>": 9549,
    "treeaggregate": 9550,
    "treeen": 9551,
    "treeensem": 9552,
    "treeensemblemodel</w>": 9553,
    "treereduce(": 9554,
    "tri": 9555,
    "trie": 9556,
    "tries</w>": 9557,
    "trig": 9558,
    "trigger": 9559,
    "trigger</w>": 9560,
    "tro": 9561,
    "trol": 9562,
    "trol</w>": 9563,
    "true": 9564,
    "true),</w>": 9565,
    "true)</w>": 9566,
    "true)])</w>": 9567,
    "true,</w>": 9568,
    "true],</w>": 9569,
    "true_": 9570,
    "true_log_": 9571,
    "truncate": 9572,
    "truncate(": 9573,
    "truncate(before": 9574,
    "try": 9575,
    "try.": 9576,
    "try:</w>": 9577,
    "try</w>": 9578,
    "try_": 9579,
    "try_coerce_": 9580,
    "try_coerce_args</w>": 9581,
    "ts)</w>": 9582,
    "ts,</w>": 9583,
    "ts.": 9584,
    "ts.</w>": 9585,
    "ts:</w>": 9586,
    "ts</w>": 9587,
    "tslibs.": 9588,
    "tt</w>": 9589,
    "tter</w>": 9590,
    "tto": 9591,
    "tu": 9592,
    "tuple": 9593,
    "tuple(": 9594,
    "tuple)):</w>": 9595,
    "tuple))</w>": 9596,
    "tuple):</w>": 9597,
    "tuple)</w>": 9598,
    "tuple,</w>": 9599,
    "tuple</w>": 9600,
    "tuplei": 9601,
    "tupleize_cols</w>": 9602,
    "tuples,</w>": 9603,
    "ture</w>": 9604,
    "turing</w>": 9605,
    "turn": 9606,
    "turns</w>": 9607,
    "tuvalu</w>": 9608,
    "tv</w>": 9609,
    "tw": 9610,
    "twe": 9611,
    "twi": 9612,
    "twice</w>": 9613,
    "two": 9614,
    "two-dimensional</w>": 9615,
    "two</w>": 9616,
    "tx": 9617,
    "txt": 9618,
    "txt\")</w>": 9619,
    "ty": 9620,
    "ty</w>": 9621,
    "ty_": 9622,
    "typ": 9623,
    "typ=": 9624,
    "type": 9625,
    "type(": 9626,
    "type()).": 9627,
    "type())</w>": 9628,
    "type(),</w>": 9629,
    "type([": 9630,
    "type(dt)</w>": 9631,
    "type(obj": 9632,
    "type(other": 9633,
    "type(self": 9634,
    "type(self)))</w>": 9635,
    "type),</w>": 9636,
    "type):</w>": 9637,
    "type)</w>": 9638,
    "type,</w>": 9639,
    "type.": 9640,
    "type.grouped_": 9641,
    "type:</w>": 9642,
    "type</w>": 9643,
    "type=": 9644,
    "type_": 9645,
    "type_id": 9646,
    "type_ids:</w>": 9647,
    "typeerror": 9648,
    "typeerror(\"": 9649,
    "typeerror(\"path</w>": 9650,
    "typeerror(\"schema</w>": 9651,
    "typeerror(\"unsupported</w>": 9652,
    "typeerror('": 9653,
    "typeerror(</w>": 9654,
    "typeerror(msg)</w>": 9655,
    "typeerror):</w>": 9656,
    "typeerror,</w>": 9657,
    "typeerror:</w>": 9658,
    "types(": 9659,
    "types)</w>": 9660,
    "types,</w>": 9661,
    "types.": 9662,
    "types</w>": 9663,
    "typi": 9664,
    "typically</w>": 9665,
    "typs)</w>": 9666,
    "typs</w>": 9667,
    "tz": 9668,
    "tz):</w>": 9669,
    "tz)</w>": 9670,
    "tz,</w>": 9671,
    "tz-": 9672,
    "tz-aware</w>": 9673,
    "tz-naive</w>": 9674,
    "tz.": 9675,
    "tz:</w>": 9676,
    "tz</w>": 9677,
    "tz=": 9678,
    "tz=tz)</w>": 9679,
    "tz=tz,</w>": 9680,
    "tz]</w>": 9681,
    "tz_": 9682,
    "tz_dtype(": 9683,
    "tz_locali": 9684,
    "tz_localize(": 9685,
    "tz_localize(tz)</w>": 9686,
    "u": 9687,
    "u\"": 9688,
    "u\",</w>": 9689,
    "u'": 9690,
    "u'alice": 9691,
    "u'bob": 9692,
    "u(0.0,</w>": 9693,
    "u,</w>": 9694,
    "u.": 9695,
    "u:</w>": 9696,
    "u</w>": 9697,
    "uc": 9698,
    "uce": 9699,
    "uce</w>": 9700,
    "uced</w>": 9701,
    "uch</w>": 9702,
    "ucing</w>": 9703,
    "uclide": 9704,
    "uct</w>": 9705,
    "uction</w>": 9706,
    "ud": 9707,
    "udf": 9708,
    "udf(\"": 9709,
    "udf(v": 9710,
    "udf(v):</w>": 9711,
    "udf,</w>": 9712,
    "udf.": 9713,
    "udf</w>": 9714,
    "udfs</w>": 9715,
    "ue": 9716,
    "ue',</w>": 9717,
    "ue</w>": 9718,
    "uence</w>": 9719,
    "ught</w>": 9720,
    "uid</w>": 9721,
    "uint": 9722,
    "uint8,</w>": 9723,
    "ul": 9724,
    "ul</w>": 9725,
    "ule": 9726,
    "ule</w>": 9727,
    "uled</w>": 9728,
    "ules</w>": 9729,
    "uli": 9730,
    "ull": 9731,
    "ull\",</w>": 9732,
    "ull</w>": 9733,
    "ult</w>": 9734,
    "um": 9735,
    "um</w>": 9736,
    "um_": 9737,
    "uman</w>": 9738,
    "ume</w>": 9739,
    "umen": 9740,
    "umn": 9741,
    "ump</w>": 9742,
    "umul": 9743,
    "un": 9744,
    "un,</w>": 9745,
    "unbounded</w>": 9746,
    "unbox</w>": 9747,
    "unc": 9748,
    "under": 9749,
    "underlying</w>": 9750,
    "unfit_": 9751,
    "unfit_mgr_": 9752,
    "unfit_val_": 9753,
    "uni": 9754,
    "unicode": 9755,
    "uniform": 9756,
    "union": 9757,
    "union[": 9758,
    "union_categorical": 9759,
    "union_categoricals([a,</w>": 9760,
    "unique": 9761,
    "unique()</w>": 9762,
    "unique,</w>": 9763,
    "unique</w>": 9764,
    "unique_": 9765,
    "unit,</w>": 9766,
    "unit=": 9767,
    "unit=unit,</w>": 9768,
    "unix": 9769,
    "unix'</w>": 9770,
    "unknown</w>": 9771,
    "unless</w>": 9772,
    "unlimited</w>": 9773,
    "unmatched</w>": 9774,
    "unper": 9775,
    "unpickled_": 9776,
    "unpickled_df</w>": 9777,
    "unpickling</w>": 9778,
    "unquoted</w>": 9779,
    "unsig": 9780,
    "unsigned</w>": 9781,
    "unstack(": 9782,
    "unstack</w>": 9783,
    "unstacked</w>": 9784,
    "unstacker_": 9785,
    "unsupported</w>": 9786,
    "until</w>": 9787,
    "unused</w>": 9788,
    "up": 9789,
    "up</w>": 9790,
    "upcast</w>": 9791,
    "upcast_": 9792,
    "upcast_classe": 9793,
    "upcast_classes:</w>": 9794,
    "upcasting": 9795,
    "upcasting);</w>": 9796,
    "update": 9797,
    "update(": 9798,
    "update(new_": 9799,
    "update({</w>": 9800,
    "update_": 9801,
    "updating</w>": 9802,
    "uple": 9803,
    "upli": 9804,
    "upper": 9805,
    "upperbound</w>": 9806,
    "upsample</w>": 9807,
    "upsampling</w>": 9808,
    "upy": 9809,
    "ur": 9810,
    "uration": 9811,
    "uration,</w>": 9812,
    "uration:</w>": 9813,
    "uring</w>": 9814,
    "url": 9815,
    "urn": 9816,
    "us": 9817,
    "us',</w>": 9818,
    "us,</w>": 9819,
    "us</w>": 9820,
    "usage": 9821,
    "usage</w>": 9822,
    "use": 9823,
    "use.</w>": 9824,
    "use</w>": 9825,
    "use_": 9826,
    "use_b": 9827,
    "use_bq": 9828,
    "use_bqstorage_": 9829,
    "usecols'</w>": 9830,
    "used</w>": 9831,
    "used_": 9832,
    "used_categories</w>": 9833,
    "used_memory</w>": 9834,
    "useful</w>": 9835,
    "user": 9836,
    "user-": 9837,
    "user-defined</w>": 9838,
    "user-supplied</w>": 9839,
    "user</w>": 9840,
    "user_": 9841,
    "user_agen": 9842,
    "users</w>": 9843,
    "uses</w>": 9844,
    "ush": 9845,
    "using</w>": 9846,
    "ussi": 9847,
    "ust": 9848,
    "ust</w>": 9849,
    "ust_": 9850,
    "usted": 9851,
    "usted.</w>": 9852,
    "usted</w>": 9853,
    "ustif": 9854,
    "usto": 9855,
    "usu": 9856,
    "usually</w>": 9857,
    "ut": 9858,
    "ut</w>": 9859,
    "utative</w>": 9860,
    "utc": 9861,
    "utc')</w>": 9862,
    "utc</w>": 9863,
    "ute": 9864,
    "ute</w>": 9865,
    "uted</w>": 9866,
    "utf": 9867,
    "utf-": 9868,
    "utf-16": 9869,
    "utf-8": 9870,
    "utf-8\")</w>": 9871,
    "utf-8')</w>": 9872,
    "utf-8.</w>": 9873,
    "utf8": 9874,
    "utf8_": 9875,
    "utf8de": 9876,
    "utf8deserializer": 9877,
    "uth": 9878,
    "uti": 9879,
    "util": 9880,
    "util</w>": 9881,
    "utils.": 9882,
    "utils.to": 9883,
    "utils</w>": 9884,
    "ution": 9885,
    "ution.": 9886,
    "ution</w>": 9887,
    "uto": 9888,
    "utoff_": 9889,
    "utral</w>": 9890,
    "utu": 9891,
    "uture": 9892,
    "uu": 9893,
    "v": 9894,
    "v\",</w>": 9895,
    "v)": 9896,
    "v)</w>": 9897,
    "v)]})</w>": 9898,
    "v,</w>": 9899,
    "v.": 9900,
    "v1_": 9901,
    "v2</w>": 9902,
    "v2_": 9903,
    "v:</w>": 9904,
    "v</w>": 9905,
    "v=": 9906,
    "v_": 9907,
    "val": 9908,
    "val</w>": 9909,
    "val=": 9910,
    "val_": 9911,
    "valen": 9912,
    "valid</w>": 9913,
    "valid_": 9914,
    "validate": 9915,
    "validate_": 9916,
    "validate_bool_": 9917,
    "validate_bool_kwarg(": 9918,
    "validate_bool_kwarg(inplace,</w>": 9919,
    "validate_indice": 9920,
    "validate_indices([1,</w>": 9921,
    "vals)</w>": 9922,
    "vals,</w>": 9923,
    "vals.": 9924,
    "vals</w>": 9925,
    "valu": 9926,
    "valu</w>": 9927,
    "value": 9928,
    "value\")</w>": 9929,
    "value(": 9930,
    "value()</w>": 9931,
    "value):</w>": 9932,
    "value)</w>": 9933,
    "value,</w>": 9934,
    "value.": 9935,
    "value1</w>": 9936,
    "value2</w>": 9937,
    "value:</w>": 9938,
    "value</w>": 9939,
    "value=": 9940,
    "value_": 9941,
    "value_counts</w>": 9942,
    "valueerror": 9943,
    "valueerror(\"": 9944,
    "valueerror(\"invalid</w>": 9945,
    "valueerror(\"only</w>": 9946,
    "valueerror('": 9947,
    "valueerror('invalid</w>": 9948,
    "valueerror(</w>": 9949,
    "valueerror(msg)</w>": 9950,
    "valueerror(msg.format(": 9951,
    "valueerror):</w>": 9952,
    "valueerror:...</w>": 9953,
    "valueerror:</w>": 9954,
    "values": 9955,
    "values(": 9956,
    "values()</w>": 9957,
    "values(lambda</w>": 9958,
    "values))</w>": 9959,
    "values).": 9960,
    "values):</w>": 9961,
    "values)</w>": 9962,
    "values)]</w>": 9963,
    "values,</w>": 9964,
    "values.": 9965,
    "values.copy()</w>": 9966,
    "values.dtype)</w>": 9967,
    "values.dtype</w>": 9968,
    "values.ndim</w>": 9969,
    "values:</w>": 9970,
    "values</w>": 9971,
    "values[": 9972,
    "values]</w>": 9973,
    "values_": 9974,
    "values_from_": 9975,
    "value}}</w>": 9976,
    "var": 9977,
    "vari": 9978,
    "variable": 9979,
    "variable</w>": 9980,
    "variables:</w>": 9981,
    "variables</w>": 9982,
    "varian": 9983,
    "variance": 9984,
    "variance</w>": 9985,
    "various</w>": 9986,
    "vars</w>": 9987,
    "ve": 9988,
    "ve(": 9989,
    "ve(\".</w>": 9990,
    "ve)</w>": 9991,
    "ve,</w>": 9992,
    "ve.</w>": 9993,
    "ve</w>": 9994,
    "ve_": 9995,
    "vec": 9996,
    "vecontext</w>": 9997,
    "vector": 9998,
    "vector):</w>": 9999,
    "vector_": 10000,
    "vectorcolumnsto": 10001,
    "vectorcolumnstoml": 10002,
    "vectori": 10003,
    "vectorized</w>": 10004,
    "vectorrdd(sc,</w>": 10005,
    "vectors.": 10006,
    "vectors.dense": 10007,
    "vectors.dense([": 10008,
    "vectors.sparse": 10009,
    "vectors</w>": 10010,
    "ved,</w>": 10011,
    "ved.</w>": 10012,
    "ved</w>": 10013,
    "ved_": 10014,
    "ved_archive_": 10015,
    "vely.</w>": 10016,
    "ven": 10017,
    "ven,</w>": 10018,
    "ven</w>": 10019,
    "ver": 10020,
    "ver,</w>": 10021,
    "ver</w>": 10022,
    "veral</w>": 10023,
    "verbo": 10024,
    "verbose": 10025,
    "verbose</w>": 10026,
    "verbose_": 10027,
    "verbose_log": 10028,
    "verbose_logging": 10029,
    "verbosity</w>": 10030,
    "verif": 10031,
    "verifier": 10032,
    "verifier(": 10033,
    "verify": 10034,
    "verify_": 10035,
    "verify_acceptable_types(obj)</w>": 10036,
    "verify_integ": 10037,
    "verify_value</w>": 10038,
    "vers": 10039,
    "vers</w>": 10040,
    "version": 10041,
    "version()</w>": 10042,
    "version.</w>": 10043,
    "version</w>": 10044,
    "version_": 10045,
    "version_2_": 10046,
    "version_2_with_": 10047,
    "version_2_with_negative:</w>": 10048,
    "versionad": 10049,
    "versionadded::</w>": 10050,
    "versionchan": 10051,
    "versionchanged::</w>": 10052,
    "versions</w>": 10053,
    "versus</w>": 10054,
    "verti": 10055,
    "vertical": 10056,
    "vertical</w>": 10057,
    "very": 10058,
    "very</w>": 10059,
    "ves</w>": 10060,
    "vi": 10061,
    "via</w>": 10062,
    "vid": 10063,
    "vie": 10064,
    "view": 10065,
    "view(": 10066,
    "view('": 10067,
    "view('i8')</w>": 10068,
    "view(dtype)</w>": 10069,
    "ving.</w>": 10070,
    "ving</w>": 10071,
    "vir": 10072,
    "virgini": 10073,
    "virginica',</w>": 10074,
    "visi": 10075,
    "visible": 10076,
    "vl": 10077,
    "vline": 10078,
    "vmax)</w>": 10079,
    "vmax</w>": 10080,
    "vmin</w>": 10081,
    "vo": 10082,
    "voc": 10083,
    "vocab_": 10084,
    "vocab_file</w>": 10085,
    "vol": 10086,
    "volume</w>": 10087,
    "vs.</w>": 10088,
    "vs</w>": 10089,
    "w": 10090,
    "w.": 10091,
    "w</w>": 10092,
    "w_": 10093,
    "wait</w>": 10094,
    "wal": 10095,
    "walks</w>": 10096,
    "wan": 10097,
    "want</w>": 10098,
    "warn": 10099,
    "warning": 10100,
    "warning')</w>": 10101,
    "warning)</w>": 10102,
    "warning,</w>": 10103,
    "warning::</w>": 10104,
    "warning:</w>": 10105,
    "warnings.": 10106,
    "warnings.warn": 10107,
    "warnings.warn(\"": 10108,
    "warnings</w>": 10109,
    "was</w>": 10110,
    "water": 10111,
    "watermark</w>": 10112,
    "way": 10113,
    "ways</w>": 10114,
    "we": 10115,
    "we'll</w>": 10116,
    "we're</w>": 10117,
    "weak": 10118,
    "webserver</w>": 10119,
    "wee": 10120,
    "week": 10121,
    "weekday()</w>": 10122,
    "weekday</w>": 10123,
    "weekmask</w>": 10124,
    "weig": 10125,
    "weight": 10126,
    "weight(": 10127,
    "weight.": 10128,
    "weight_": 10129,
    "weight_i,</w>": 10130,
    "weight_i</w>": 10131,
    "weights)</w>": 10132,
    "weights:</w>": 10133,
    "weights_": 10134,
    "wel": 10135,
    "well": 10136,
    "well.</w>": 10137,
    "wer": 10138,
    "wer</w>": 10139,
    "wh": 10140,
    "what</w>": 10141,
    "whate": 10142,
    "whatever</w>": 10143,
    "whe": 10144,
    "when(df.": 10145,
    "when(df.age</w>": 10146,
    "when</w>": 10147,
    "whene": 10148,
    "whenever</w>": 10149,
    "where": 10150,
    "where(": 10151,
    "where,</w>": 10152,
    "where</w>": 10153,
    "where=": 10154,
    "where=where,</w>": 10155,
    "whether</w>": 10156,
    "whi": 10157,
    "which</w>": 10158,
    "whip</w>": 10159,
    "white": 10160,
    "whitesp": 10161,
    "whitespace:</w>": 10162,
    "whitespace</w>": 10163,
    "who": 10164,
    "wholetext": 10165,
    "wholetextfile": 10166,
    "whose</w>": 10167,
    "wi": 10168,
    "wid": 10169,
    "wide": 10170,
    "wide_to_": 10171,
    "wide_to_long": 10172,
    "wide_to_long(df,</w>": 10173,
    "width": 10174,
    "width,</w>": 10175,
    "width</w>": 10176,
    "widths</w>": 10177,
    "wik": 10178,
    "wiki</w>": 10179,
    "wikipedi": 10180,
    "wikipedia.": 10181,
    "will</w>": 10182,
    "windo": 10183,
    "window": 10184,
    "window(": 10185,
    "window,</w>": 10186,
    "window.": 10187,
    "window.un": 10188,
    "window.unbounded": 10189,
    "window.unboundedpreceding</w>": 10190,
    "window;</w>": 10191,
    "windowd": 10192,
    "windowduration,</w>": 10193,
    "windowduration:</w>": 10194,
    "windows</w>": 10195,
    "windowspec</w>": 10196,
    "wing": 10197,
    "wing</w>": 10198,
    "wings</w>": 10199,
    "wip": 10200,
    "wise": 10201,
    "wise,</w>": 10202,
    "wise.</w>": 10203,
    "wise</w>": 10204,
    "with": 10205,
    "with.</w>": 10206,
    "with</w>": 10207,
    "with_": 10208,
    "with_con": 10209,
    "within</w>": 10210,
    "without</w>": 10211,
    "withreplacemen": 10212,
    "withreplacement,</w>": 10213,
    "withreplacement_": 10214,
    "wn</w>": 10215,
    "won't</w>": 10216,
    "wor": 10217,
    "word": 10218,
    "word_": 10219,
    "word_em": 10220,
    "word_emb.": 10221,
    "wordpiece</w>": 10222,
    "words,</w>": 10223,
    "work": 10224,
    "work</w>": 10225,
    "workaround</w>": 10226,
    "works</w>": 10227,
    "would</w>": 10228,
    "wrap": 10229,
    "wrap_": 10230,
    "wrapped</w>": 10231,
    "wrapper": 10232,
    "wrapper.": 10233,
    "wrapper.__": 10234,
    "wrapper.__name__</w>": 10235,
    "wri": 10236,
    "writ": 10237,
    "write": 10238,
    "write(": 10239,
    "write(\"": 10240,
    "write('</w>": 10241,
    "write.": 10242,
    "write</w>": 10243,
    "write_": 10244,
    "writestream.": 10245,
    "written": 10246,
    "written</w>": 10247,
    "wron": 10248,
    "wrong</w>": 10249,
    "ws</w>": 10250,
    "ww": 10251,
    "www.": 10252,
    "www.w": 10253,
    "www.w3.": 10254,
    "www.w3.org</w>": 10255,
    "x": 10256,
    "x',</w>": 10257,
    "x))</w>": 10258,
    "x):</w>": 10259,
    "x)</w>": 10260,
    "x,</w>": 10261,
    "x-": 10262,
    "x-axis</w>": 10263,
    "x.": 10264,
    "x.stats()</w>": 10265,
    "x00</w>": 10266,
    "x01": 10267,
    "x01'</w>": 10268,
    "x:</w>": 10269,
    "x</w>": 10270,
    "x=x,</w>": 10271,
    "x]</w>": 10272,
    "x_": 10273,
    "xarray.": 10274,
    "xarray</w>": 10275,
    "xaxis.set_": 10276,
    "xff</w>": 10277,
    "xi</w>": 10278,
    "xl": 10279,
    "xlabel": 10280,
    "xlabelsize=": 10281,
    "xls": 10282,
    "xlw": 10283,
    "xnull:</w>": 10284,
    "xrot</w>": 10285,
    "xrot=": 10286,
    "xs</w>": 10287,
    "xtick": 10288,
    "xticks</w>": 10289,
    "xx": 10290,
    "xxx</w>": 10291,
    "xxxx": 10292,
    "xy": 10293,
    "xy[1]</w>": 10294,
    "y": 10295,
    "y\",</w>": 10296,
    "y',</w>": 10297,
    "y(": 10298,
    "y):</w>": 10299,
    "y)</w>": 10300,
    "y,</w>": 10301,
    "y-": 10302,
    "y-axis</w>": 10303,
    "y.": 10304,
    "y.</w>": 10305,
    "y:</w>": 10306,
    "y</w>": 10307,
    "y=": 10308,
    "y=y,</w>": 10309,
    "y_": 10310,
    "yanke": 10311,
    "yankees</w>": 10312,
    "yaxis,</w>": 10313,
    "ye": 10314,
    "year": 10315,
    "year\").": 10316,
    "year\").pivo": 10317,
    "year=": 10318,
    "year_": 10319,
    "yearfirst</w>": 10320,
    "years</w>": 10321,
    "yed</w>": 10322,
    "yel": 10323,
    "yellow": 10324,
    "yi</w>": 10325,
    "yiel": 10326,
    "yield</w>": 10327,
    "yields</w>": 10328,
    "ying</w>": 10329,
    "ylabel": 10330,
    "ylabelsize=": 10331,
    "yo": 10332,
    "yond</w>": 10333,
    "you": 10334,
    "you</w>": 10335,
    "yy": 10336,
    "yyyy": 10337,
    "yyyy-": 10338,
    "yyyy-mm": 10339,
    "yyyy-mm-": 10340,
    "yyyy-mm-dd": 10341,
    "yyyy-mm-dd't": 10342,
    "yyyy-mm-dd't'h": 10343,
    "yyyy-mm-dd't'hh:mm:ss.": 10344,
    "yyyy-mm-dd't'hh:mm:ss.ss": 10345,
    "yyyy-mm-dd't'hh:mm:ss.sss": 10346,
    "yyyy-mm-dd't'hh:mm:ss.sssxxx</w>": 10347,
    "yyyy-mm-dd</w>": 10348,
    "z": 10349,
    "z',</w>": 10350,
    "z'</w>": 10351,
    "z2',</w>": 10352,
    "z</w>": 10353,
    "zation</w>": 10354,
    "ze": 10355,
    "ze(": 10356,
    "ze()</w>": 10357,
    "ze(example.": 10358,
    "ze</w>": 10359,
    "ze_": 10360,
    "ze__": 10361,
    "ze_cols</w>": 10362,
    "zed</w>": 10363,
    "zer": 10364,
    "zer,</w>": 10365,
    "zer.": 10366,
    "zer</w>": 10367,
    "zero": 10368,
    "zero-": 10369,
    "zero</w>": 10370,
    "zero_": 10371,
    "zerovalue,</w>": 10372,
    "zerovalue</w>": 10373,
    "zing</w>": 10374,
    "zip": 10375,
    "zip(": 10376,
    "zips</w>": 10377,
    "zone.</w>": 10378,
    "zone</w>": 10379,
    "{": 10380,
    "{\"": 10381,
    "{\"a": 10382,
    "{\"a\":</w>": 10383,
    "{'": 10384,
    "{'auto": 10385,
    "{'auto',</w>": 10386,
    "{'back": 10387,
    "{'backfill',</w>": 10388,
    "{'col": 10389,
    "{'col1':</w>": 10390,
    "{'fail": 10391,
    "{'fail',</w>": 10392,
    "{'index',</w>": 10393,
    "{'infer": 10394,
    "{'infer',</w>": 10395,
    "{'items',</w>": 10396,
    "{'ix',</w>": 10397,
    "{'keep": 10398,
    "{'keep',</w>": 10399,
    "{'key": 10400,
    "{'key':</w>": 10401,
    "{'row": 10402,
    "{'row1':</w>": 10403,
    "{0": 10404,
    "{0</w>": 10405,
    "{0}</w>": 10406,
    "{1:</w>": 10407,
    "{2": 10408,
    "{</w>": 10409,
    "{column</w>": 10410,
    "{column_": 10411,
    "{column_name:</w>": 10412,
    "{dtype": 10413,
    "{field</w>": 10414,
    "{group</w>": 10415,
    "{index</w>": 10416,
    "{k:</w>": 10417,
    "{name}</w>": 10418,
    "{none,</w>": 10419,
    "{series,</w>": 10420,
    "{typ": 10421,
    "{type": 10422,
    "{{": 10423,
    "{}": 10424,
    "|": 10425,
    "}": 10426,
    "}\")</w>": 10427,
    "}\".format(": 10428,
    "}\"</w>": 10429,
    "}'.format(": 10430,
    "}'</w>": 10431,
    "})": 10432,
    "})._is_": 10433,
    "})._is_homogene": 10434,
    "})._is_homogeneous_type</w>": 10435,
    "})</w>": 10436,
    "},": 10437,
    "},</w>": 10438,
    "}.": 10439,
    "}.</w>": 10440,
    "}:</w>": 10441,
    "}</w>": 10442,
    "}]": 10443,
    "}]\".format(</w>": 10444,
    "}]</w>": 10445,
    "}{": 10446,
    "}}": 10447,
    "}}</w>": 10448,
    "~": 10449,
    "§": 10450,
    "¯": 10451,
    "°": 10452,
    "²": 10453,
    "³": 10454,
    "´": 10455,
    "á": 10456,
    "â": 10457,
    "å": 10458,
    "è": 10459,
    "é": 10460,
    "ê": 10461,
    "í": 10462,
    "ò": 10463,
    "ó": 10464,
    "ô": 10465,
    "ü": 10466,
    "ā": 10467,
    "ă": 10468,
    "đ": 10469,
    "ţ": 10470,
    "ū": 10471,
    "ǎ": 10472,
    "ˈ": 10473,
    "ˌ": 10474,
    "˘": 10475,
    "α": 10476,
    "δ": 10477,
    "λ": 10478,
    "ạ": 10479,
    "ấ": 10480,
    "ầ": 10481,
    "ẫ": 10482,
    "ắ": 10483,
    "ể": 10484,
    "ệ": 10485,
    "ỗ": 10486,
    "ụ": 10487,
    "ủ": 10488,
    "ỷ": 10489,
    "–": 10490,
    "‘": 10491,
    "’": 10492,
    "“": 10493,
    "”": 10494,
    "•": 10495,
    "…": 10496,
    "℃": 10497,
    "→": 10498,
    "∈": 10499,
    "−": 10500,
    "✓": 10501,
    "✗": 10502,
    "。": 10503,
    "一": 10504,
    "三": 10505,
    "上": 10506,
    "下": 10507,
    "不": 10508,
    "两": 10509,
    "严": 10510,
    "个": 10511,
    "中": 10512,
    "串": 10513,
    "为": 10514,
    "举": 10515,
    "之": 10516,
    "也": 10517,
    "买": 10518,
    "了": 10519,
    "二": 10520,
    "于": 10521,
    "交": 10522,
    "亮": 10523,
    "今": 10524,
    "从": 10525,
    "代": 10526,
    "以": 10527,
    "们": 10528,
    "件": 10529,
    "任": 10530,
    "份": 10531,
    "会": 10532,
    "传": 10533,
    "但": 10534,
    "位": 10535,
    "低": 10536,
    "体": 10537,
    "何": 10538,
    "作": 10539,
    "使": 10540,
    "例": 10541,
    "供": 10542,
    "依": 10543,
    "保": 10544,
    "信": 10545,
    "修": 10546,
    "值": 10547,
    "偏": 10548,
    "储": 10549,
    "充": 10550,
    "入": 10551,
    "全": 10552,
    "共": 10553,
    "关": 10554,
    "其": 10555,
    "具": 10556,
    "内": 10557,
    "再": 10558,
    "况": 10559,
    "凭": 10560,
    "出": 10561,
    "函": 10562,
    "分": 10563,
    "列": 10564,
    "则": 10565,
    "创": 10566,
    "初": 10567,
    "删": 10568,
    "到": 10569,
    "制": 10570,
    "前": 10571,
    "功": 10572,
    "务": 10573,
    "动": 10574,
    "包": 10575,
    "化": 10576,
    "单": 10577,
    "卖": 10578,
    "南": 10579,
    "占": 10580,
    "印": 10581,
    "即": 10582,
    "原": 10583,
    "去": 10584,
    "参": 10585,
    "叉": 10586,
    "反": 10587,
    "发": 10588,
    "取": 10589,
    "口": 10590,
    "只": 10591,
    "可": 10592,
    "台": 10593,
    "右": 10594,
    "号": 10595,
    "合": 10596,
    "名": 10597,
    "后": 10598,
    "向": 10599,
    "否": 10600,
    "和": 10601,
    "品": 10602,
    "响": 10603,
    "唐": 10604,
    "商": 10605,
    "器": 10606,
    "回": 10607,
    "因": 10608,
    "在": 10609,
    "地": 10610,
    "址": 10611,
    "均": 10612,
    "块": 10613,
    "型": 10614,
    "填": 10615,
    "处": 10616,
    "复": 10617,
    "外": 10618,
    "多": 10619,
    "大": 10620,
    "天": 10621,
    "失": 10622,
    "夹": 10623,
    "奇": 10624,
    "好": 10625,
    "如": 10626,
    "始": 10627,
    "字": 10628,
    "存": 10629,
    "它": 10630,
    "安": 10631,
    "完": 10632,
    "定": 10633,
    "宝": 10634,
    "实": 10635,
    "家": 10636,
    "容": 10637,
    "密": 10638,
    "对": 10639,
    "导": 10640,
    "将": 10641,
    "就": 10642,
    "层": 10643,
    "展": 10644,
    "属": 10645,
    "左": 10646,
    "差": 10647,
    "帐": 10648,
    "常": 10649,
    "平": 10650,
    "并": 10651,
    "序": 10652,
    "应": 10653,
    "店": 10654,
    "建": 10655,
    "异": 10656,
    "式": 10657,
    "弹": 10658,
    "录": 10659,
    "径": 10660,
    "待": 10661,
    "必": 10662,
    "性": 10663,
    "息": 10664,
    "情": 10665,
    "意": 10666,
    "愿": 10667,
    "成": 10668,
    "我": 10669,
    "或": 10670,
    "户": 10671,
    "所": 10672,
    "打": 10673,
    "执": 10674,
    "批": 10675,
    "找": 10676,
    "报": 10677,
    "指": 10678,
    "按": 10679,
    "换": 10680,
    "据": 10681,
    "授": 10682,
    "排": 10683,
    "接": 10684,
    "推": 10685,
    "提": 10686,
    "撤": 10687,
    "操": 10688,
    "收": 10689,
    "改": 10690,
    "放": 10691,
    "散": 10692,
    "数": 10693,
    "文": 10694,
    "新": 10695,
    "方": 10696,
    "无": 10697,
    "日": 10698,
    "时": 10699,
    "易": 10700,
    "是": 10701,
    "普": 10702,
    "替": 10703,
    "最": 10704,
    "有": 10705,
    "服": 10706,
    "期": 10707,
    "机": 10708,
    "权": 10709,
    "来": 10710,
    "构": 10711,
    "果": 10712,
    "查": 10713,
    "标": 10714,
    "校": 10715,
    "根": 10716,
    "格": 10717,
    "档": 10718,
    "检": 10719,
    "模": 10720,
    "次": 10721,
    "正": 10722,
    "此": 10723,
    "步": 10724,
    "段": 10725,
    "气": 10726,
    "求": 10727,
    "法": 10728,
    "波": 10729,
    "流": 10730,
    "测": 10731,
    "浏": 10732,
    "消": 10733,
    "淘": 10734,
    "源": 10735,
    "漂": 10736,
    "点": 10737,
    "然": 10738,
    "照": 10739,
    "物": 10740,
    "独": 10741,
    "率": 10742,
    "理": 10743,
    "生": 10744,
    "用": 10745,
    "由": 10746,
    "的": 10747,
    "目": 10748,
    "直": 10749,
    "真": 10750,
    "知": 10751,
    "码": 10752,
    "示": 10753,
    "空": 10754,
    "站": 10755,
    "章": 10756,
    "端": 10757,
    "符": 10758,
    "第": 10759,
    "算": 10760,
    "管": 10761,
    "类": 10762,
    "组": 10763,
    "结": 10764,
    "绝": 10765,
    "继": 10766,
    "续": 10767,
    "编": 10768,
    "置": 10769,
    "群": 10770,
    "考": 10771,
    "者": 10772,
    "能": 10773,
    "航": 10774,
    "节": 10775,
    "获": 10776,
    "藏": 10777,
    "行": 10778,
    "表": 10779,
    "装": 10780,
    "要": 10781,
    "见": 10782,
    "规": 10783,
    "视": 10784,
    "览": 10785,
    "解": 10786,
    "计": 10787,
    "订": 10788,
    "认": 10789,
    "讯": 10790,
    "记": 10791,
    "设": 10792,
    "证": 10793,
    "译": 10794,
    "话": 10795,
    "该": 10796,
    "误": 10797,
    "请": 10798,
    "调": 10799,
    "象": 10800,
    "败": 10801,
    "账": 10802,
    "货": 10803,
    "资": 10804,
    "赖": 10805,
    "起": 10806,
    "跟": 10807,
    "路": 10808,
    "转": 10809,
    "载": 10810,
    "过": 10811,
    "返": 10812,
    "这": 10813,
    "进": 10814,
    "远": 10815,
    "迭": 10816,
    "送": 10817,
    "递": 10818,
    "通": 10819,
    "造": 10820,
    "遇": 10821,
    "道": 10822,
    "都": 10823,
    "配": 10824,
    "里": 10825,
    "重": 10826,
    "量": 10827,
    "铺": 10828,
    "销": 10829,
    "错": 10830,
    "键": 10831,
    "间": 10832,
    "除": 10833,
    "隔": 10834,
    "集": 10835,
    "需": 10836,
    "面": 10837,
    "项": 10838,
    "顺": 10839,
    "须": 10840,
    "频": 10841,
    "题": 10842,
    "验": 10843,
    "黑": 10844,
    "默": 10845,
    "가": 10846,
    "결": 10847,
    "과": 10848,
    "리": 10849,
    "보": 10850,
    "빌": 10851,
    "원": 10852,
    "입": 10853,
    "정": 10854,
    "처": 10855,
    "팝": 10856,
    "회": 10857,
    "（": 10858,
    "）": 10859,
    "，": 10860,
    "：": 10861,
    "；": 10862
  },
  "id2sym": [
    "<UNK>",
    "<PAD>",
    "<BOS>",
    "<EOS>",
    "!",
    "\"",
    "\"\"",
    "\"\"\"",
    "\"\"\"</w>",
    "\"\"\"get</w>",
    "\"\"\"loads</w>",
    "\"\"\"read</w>",
    "\"\"\"return</w>",
    "\"\"\"returns</w>",
    "\"\"\"saves</w>",
    "\"\"\"set</w>",
    "\"\"\"specifies</w>",
    "\"'</w>",
    "\"'spark.sql.execution.arrow.",
    "\")",
    "\")).collect()</w>",
    "\"))</w>",
    "\"),</w>",
    "\").",
    "\").ali",
    "\").alias(\"",
    "\").collect()</w>",
    "\")</w>",
    "\",",
    "\",\"",
    "\",\"type",
    "\",\"type\":",
    "\",</w>",
    "\"-</w>",
    "\".",
    "\".</w>",
    "\".format(",
    "\".format(</w>",
    "\".join(",
    "\".join([",
    "\".join([str(x)</w>",
    "\".join(map(lambda</w>",
    "\"0\"</w>",
    "\"2.",
    "\"5",
    "\":",
    "\":</w>",
    "\"</w>",
    "\"[",
    "\"[spark-",
    "\"]",
    "\"]),</w>",
    "\"])</w>",
    "\"],</w>",
    "\"]:</w>",
    "\"]</w>",
    "\"_",
    "\"__",
    "\"a",
    "\"a\"),</w>",
    "\"a\",</w>",
    "\"b",
    "\"b\"),</w>",
    "\"b\",</w>",
    "\"b\":</w>",
    "\"b\"],</w>",
    "\"bar",
    "\"bar\":</w>",
    "\"c",
    "\"c\"",
    "\"c2\"])</w>",
    "\"d",
    "\"display.",
    "\"display.font.",
    "\"dist",
    "\"distcol",
    "\"distcol\"</w>",
    "\"dull\",</w>",
    "\"e",
    "\"f",
    "\"foo",
    "\"foo\",</w>",
    "\"gini",
    "\"got</w>",
    "\"in</w>",
    "\"index",
    "\"invalid</w>",
    "\"is</w>",
    "\"is_",
    "\"j",
    "\"l",
    "\"m",
    "\"name",
    "\"not</w>",
    "\"on</w>",
    "\"one\",</w>",
    "\"onethi",
    "\"org.apache.",
    "\"org.apache.hadoop.io.",
    "\"orien",
    "\"orientation\"</w>",
    "\"r\",</w>",
    "\"random",
    "\"right",
    "\"row",
    "\"shin",
    "\"shiny\",</w>",
    "\"sqr",
    "\"string",
    "\"t",
    "\"test.",
    "\"test.org.apache.",
    "\"test.org.apache.spark.sql.javastringlength",
    "\"the</w>",
    "\"two",
    "\"two\",</w>",
    "\"type",
    "\"type\":</w>",
    "\"use</w>",
    "\"v",
    "\"v\"))</w>",
    "\"value",
    "\"value\",</w>",
    "\"value\":</w>",
    "\"w",
    "\"w\")</w>",
    "\"x",
    "\"x.",
    "\"x.y.",
    "\"zero</w>",
    "\"{",
    "\"{0",
    "\"{0}",
    "\"{0}\"",
    "\"{0}\"'.format(",
    "\"}",
    "\"}''",
    "#",
    "$",
    "%",
    "&",
    "'",
    "'\")</w>",
    "'\"</w>",
    "''",
    "'''{\"f1\":</w>",
    "''.join(",
    "''.join(sorted(input(glob(",
    "''</w>",
    "'(</w>",
    "')",
    "')\").collect()</w>",
    "')).collect()</w>",
    "'))</w>",
    "'),</w>",
    "').",
    "').parquet(os.path.join(tempfile.mkdtemp(),</w>",
    "').sum()</w>",
    "'):</w>",
    "')</w>",
    "')])</w>",
    "')],</w>",
    "')]</w>",
    "',",
    "','</w>",
    "',)],</w>",
    "',</w>",
    "'-",
    "'.",
    "'.\")</w>",
    "'.'</w>",
    "'.</w>",
    "'.format(",
    "'1",
    "'1'])</w>",
    "'2000",
    "'201",
    "'2015",
    "'2015-01-01</w>",
    "'2017",
    "'2017-06",
    "'2018",
    "'2018-01-03",
    "'2018-01-03',</w>",
    "'2018-01-05",
    "'2018-01-05',</w>",
    "'2018-01-08",
    "'2018-01-08'],</w>",
    "'2018-04",
    "'2018-04-",
    "'2018-04-30',</w>",
    "'2018-10-28</w>",
    "'3</w>",
    "'5",
    "'5h",
    "':",
    "':</w>",
    "'</w>",
    "'[",
    "'[spark-",
    "']",
    "']))</w>",
    "']).",
    "'])</w>",
    "'],</w>",
    "']</w>",
    "']})</w>",
    "'_",
    "'_'</w>",
    "'__",
    "'a",
    "'a'),</w>",
    "'a'</w>",
    "'a'])</w>",
    "'a'],</w>",
    "'age",
    "'age':</w>",
    "'age'])</w>",
    "'alice",
    "'alice',</w>",
    "'all",
    "'all',</w>",
    "'all'</w>",
    "'all'},</w>",
    "'any",
    "'any'</w>",
    "'ap",
    "'append",
    "'append'},</w>",
    "'auto",
    "'auto',</w>",
    "'auto'</w>",
    "'b",
    "'b'),</w>",
    "'b',</w>",
    "'b':</w>",
    "'b'])</w>",
    "'b'],</w>",
    "'b']</w>",
    "'b(quarterly)",
    "'bfill',</w>",
    "'bi",
    "'bias')</w>",
    "'bigint",
    "'bigint'),</w>",
    "'bir",
    "'birth",
    "'blo",
    "'block",
    "'block'</w>",
    "'blosc",
    "'blosc:",
    "'bz2',</w>",
    "'c",
    "'c'),</w>",
    "'c')],</w>",
    "'c',</w>",
    "'c':</w>",
    "'c'</w>",
    "'c'])</w>",
    "'c'],</w>",
    "'categor",
    "'category",
    "'category'</w>",
    "'co",
    "'coer",
    "'coerce",
    "'coerce',</w>",
    "'coerce'},</w>",
    "'col",
    "'col2':</w>",
    "'columns",
    "'columns'},</w>",
    "'coyo",
    "'coyote",
    "'coyote',</w>",
    "'d",
    "'d'</w>",
    "'d'])</w>",
    "'data",
    "'data'))</w>",
    "'datetime",
    "'datetime':</w>",
    "'datetime'</w>",
    "'dog",
    "'dog'],</w>",
    "'dtype",
    "'dtype'):</w>",
    "'e",
    "'e',</w>",
    "'e'],</w>",
    "'eleph",
    "'elephan",
    "'elephant',</w>",
    "'f",
    "'fail",
    "'fail'</w>",
    "'fastparquet",
    "'fastparquet'},</w>",
    "'fix",
    "'fixed",
    "'foo",
    "'foo',</w>",
    "'g",
    "'gd",
    "'gdp",
    "'gi",
    "'giraffe",
    "'giraffe',</w>",
    "'gzip',</w>",
    "'h",
    "'h',</w>",
    "'hor",
    "'horse",
    "'horse']</w>",
    "'hr",
    "'i',</w>",
    "'id'</w>",
    "'ignore",
    "'ignore',</w>",
    "'ignore':</w>",
    "'ignore'</w>",
    "'ignore'},</w>",
    "'index",
    "'index',</w>",
    "'index'.</w>",
    "'index':</w>",
    "'index'</w>",
    "'infer",
    "'infer'</w>",
    "'inner",
    "'inner').",
    "'inplace",
    "'inplace')</w>",
    "'int",
    "'int'),</w>",
    "'int')]</w>",
    "'integer",
    "'integer'},</w>",
    "'iso",
    "'items'</w>",
    "'j",
    "'k",
    "'kend",
    "'kendall',</w>",
    "'key",
    "'key'</w>",
    "'l",
    "'l'</w>",
    "'last",
    "'left",
    "'left':</w>",
    "'left'</w>",
    "'left'},</w>",
    "'life",
    "'lifespan",
    "'lifespan':</w>",
    "'ll</w>",
    "'loc",
    "'loc',</w>",
    "'m",
    "'m'</w>",
    "'major",
    "'major',</w>",
    "'medi",
    "'medium",
    "'method",
    "'method'</w>",
    "'micro",
    "'microsecond",
    "'min",
    "'min',</w>",
    "'minor",
    "'minor'}</w>",
    "'minute",
    "'minute',</w>",
    "'multi",
    "'multi':</w>",
    "'n",
    "'name",
    "'name'</w>",
    "'name'])</w>",
    "'names'</w>",
    "'nan",
    "'nan'))</w>",
    "'nearest",
    "'nearest'}</w>",
    "'ns'</w>",
    "'num_wing",
    "'num_wings':</w>",
    "'o",
    "'o'),</w>",
    "'outer",
    "'outer').",
    "'outer',</w>",
    "'p",
    "'pad",
    "'pad'</w>",
    "'pandas.core.",
    "'pandas.core.frame.",
    "'pandas.core.frame.dataframe",
    "'pandas.core.frame.dataframe'</w>",
    "'parquet",
    "'parquet'.</w>",
    "'parro",
    "'parrot",
    "'parrot',</w>",
    "'parrot'],</w>",
    "'pig",
    "'pig',</w>",
    "'population",
    "'population':</w>",
    "'py",
    "'pyarrow",
    "'pyarrow',</w>",
    "'pyarrow'</w>",
    "'python",
    "'python'],</w>",
    "'r",
    "'rab",
    "'rabbit',</w>",
    "'raise",
    "'raise',</w>",
    "'raise':</w>",
    "'raise'</w>",
    "'raise'},</w>",
    "'re</w>",
    "'record",
    "'records'</w>",
    "'replace",
    "'replace',</w>",
    "'right",
    "'right'},</w>",
    "'row",
    "'row2':</w>",
    "'s",
    "'s</w>",
    "'seto",
    "'setos",
    "'spark.sql.",
    "'spark.sql.execution.arrow.",
    "'string",
    "'string'),</w>",
    "'string')]</w>",
    "'t",
    "'t</w>",
    "'table",
    "'table'}</w>",
    "'timedelta",
    "'timedelta'</w>",
    "'top",
    "'top',</w>",
    "'type",
    "'type':</w>",
    "'us',</w>",
    "'usecols'</w>",
    "'user</w>",
    "'utc",
    "'utc'</w>",
    "'utf-16",
    "'utf-8",
    "'utf8",
    "'utf8'</w>",
    "'val",
    "'value",
    "'value':</w>",
    "'value'</w>",
    "'value'}</w>",
    "'values',</w>",
    "'values'</w>",
    "'virginica',</w>",
    "'vol",
    "'w",
    "'w',</w>",
    "'weight",
    "'weight')</w>",
    "'x",
    "'xz',</w>",
    "'y",
    "'y',</w>",
    "'year",
    "'year'])</w>",
    "'yellow",
    "'z",
    "'z']})</w>",
    "'zip",
    "'zip',</w>",
    "'{",
    "'{\"f1\":</w>",
    "'}",
    "'},</w>",
    "'}</w>",
    "(",
    "(\"",
    "(\".</w>",
    "(\"a",
    "(\"a\",</w>",
    "(\"a:</w>",
    "(\"b",
    "(\"b\",</w>",
    "(\"id",
    "(\"id\",</w>",
    "(\"key\",</w>",
    "(\"select</w>",
    "('",
    "('2',</w>",
    "('</w>",
    "('a",
    "('test",
    "('test')\").collect()</w>",
    "((",
    "((\"</w>",
    "()",
    "())</w>",
    "(),</w>",
    "().",
    "():</w>",
    "()</w>",
    "(-",
    "(.",
    "(0)</w>",
    "(0,</w>",
    "(0.0,</w>",
    "(0</w>",
    "(1)</w>",
    "(1,</w>",
    "(1.0,</w>",
    "(100,</w>",
    "(196",
    "(1960,</w>",
    "(1961,</w>",
    "(1962,</w>",
    "(1</w>",
    "(2,</w>",
    "(2.0,</w>",
    "(3,</w>",
    "(3.0,</w>",
    "(4,</w>",
    "(5.0,</w>",
    "(6",
    "(6,",
    "(:class:</w>",
    "(</w>",
    "([",
    "([\"a\",</w>",
    "(['a',</w>",
    "([],)],</w>",
    "(_",
    "(a)</w>",
    "(a,</w>",
    "(a-hdfs-path</w>",
    "(a</w>",
    "(abc",
    "(abcindexclass,</w>",
    "(abcseries,</w>",
    "(age</w>",
    "(and</w>",
    "(arg,</w>",
    "(as</w>",
    "(at):</w>",
    "(attribute",
    "(available</w>",
    "(axis=",
    "(axis=1):</w>",
    "(but</w>",
    "(byteorder</w>",
    "(callable,</w>",
    "(can</w>",
    "(category)</w>",
    "(cls,</w>",
    "(col",
    "(collections.",
    "(collections.ordereddict</w>",
    "(column</w>",
    "(count</w>",
    "(cp</w>",
    "(csv)</w>",
    "(c{",
    "(d,</w>",
    "(d.",
    "(data,</w>",
    "(defaul",
    "(default",
    "(default),</w>",
    "(default).</w>",
    "(default:</w>",
    "(del",
    "(depending</w>",
    "(df,</w>",
    "(df.",
    "(dict,</w>",
    "(do</w>",
    "(e",
    "(e.g.,</w>",
    "(e.g.</w>",
    "(exclusi",
    "(exclusive)</w>",
    "(f",
    "(feature</w>",
    "(float,</w>",
    "(for</w>",
    "(gh",
    "(gh</w>",
    "(hierarchi",
    "(hierarchical",
    "(hierarchical),</w>",
    "(i",
    "(i,</w>",
    "(i.",
    "(i.e.,</w>",
    "(if</w>",
    "(in</w>",
    "(including</w>",
    "(inclusi",
    "(inclusive",
    "(index)</w>",
    "(index,</w>",
    "(index=",
    "(index=index_",
    "(index=index_mapper,</w>",
    "(int,</w>",
    "(is_",
    "(j",
    "(k",
    "(kcl)</w>",
    "(key)</w>",
    "(key,</w>",
    "(label",
    "(label,</w>",
    "(lambda</w>",
    "(left,</w>",
    "(len(",
    "(like</w>",
    "(list,</w>",
    "(m</w>",
    "(mapper,</w>",
    "(mask,</w>",
    "(min_",
    "(min_spacing,</w>",
    "(most</w>",
    "(msg",
    "(msg)</w>",
    "(msg.format(",
    "(n",
    "(name",
    "(name)s</w>",
    "(new_",
    "(not</w>",
    "(np.",
    "(obj,</w>",
    "(of</w>",
    "(one</w>",
    "(only</w>",
    "(optional",
    "(optional)</w>",
    "(or</w>",
    "(other)</w>",
    "(p",
    "(partition_",
    "(partition_id,</w>",
    "(pd_table,</w>",
    "(pickle",
    "(quarter",
    "(quarterly",
    "(quarterly)",
    "(r",
    "(result,</w>",
    "(s):</w>",
    "(s)</w>",
    "(s,</w>",
    "(same</w>",
    "(sc.parallelize(",
    "(see</w>",
    "(see_also",
    "(see_also)s</w>",
    "(self):</w>",
    "(self)</w>",
    "(self,</w>",
    "(self.",
    "(self.dtype,</w>",
    "(serialize",
    "(serialize)</w>",
    "(series,</w>",
    "(sock",
    "(str,</w>",
    "(string)</w>",
    "(test)=4)]</w>",
    "(that</w>",
    "(the</w>",
    "(this</w>",
    "(top,</w>",
    "(total</w>",
    "(tuple,</w>",
    "(typeerror,</w>",
    "(v",
    "(value",
    "(values=",
    "(where</w>",
    "(which</w>",
    "(width,</w>",
    "(with</w>",
    "(without</w>",
    "(x",
    "(x):</w>",
    "(x,</w>",
    "({",
    ")",
    ")\"</w>",
    ")',</w>",
    ")'</w>",
    ")(",
    "))",
    ")))</w>",
    ")),</w>",
    ")).",
    ")):</w>",
    "))</w>",
    "))]</w>",
    "),",
    "),</w>",
    ").",
    ").</w>",
    ").__",
    ").__finalize__(self)</w>",
    ").__name__))</w>",
    ").ali",
    ").alias('",
    ").collec",
    ").collect()</w>",
    ").replace('nan",
    ").show()</w>",
    ").sort",
    ").strip()</w>",
    "):</w>",
    ");</w>",
    ")</w>",
    ")=",
    ")[0]</w>",
    ")[:",
    ")[:n",
    ")[:n]</w>",
    ")])),</w>",
    ")]).",
    ")])</w>",
    ")],</w>",
    ")]</w>",
    ")s</w>",
    ")})</w>",
    ")}</w>",
    "*",
    "+",
    ",",
    ",),</w>",
    ",)</w>",
    ",</w>",
    ",true",
    ",true),",
    "-",
    "--",
    "----",
    "--------",
    "----------------",
    "--------------------------------",
    "------------------------------------------------",
    "------------------------------------------------------------</w>",
    "-----------------------------</w>",
    "------------------------</w>",
    "---------------</w>",
    "--------------</w>",
    "-------------</w>",
    "------------</w>",
    "----------</w>",
    "--------</w>",
    "-------</w>",
    "------</w>",
    "-----</w>",
    "----</w>",
    "---</w>",
    "--</w>",
    "-0",
    "-0.",
    "-0.707",
    "-01",
    "-01-",
    "-01-0",
    "-01-01',</w>",
    "-01-01</w>",
    "-01-04',</w>",
    "-01-10</w>",
    "-01</w>",
    "-02-28</w>",
    "-03",
    "-03-11</w>",
    "-03-2",
    "-03-29</w>",
    "-04",
    "-06",
    "-08",
    "-1",
    "-1,</w>",
    "-1.0",
    "-1.08",
    "-1.0856",
    "-1.085631</w>",
    "-10",
    "-10-28</w>",
    "-10</w>",
    "-11-01</w>",
    "-11</w>",
    "-12-",
    "-13</w>",
    "-1</w>",
    "-1]</w>",
    "-2",
    "-25</w>",
    "-28</w>",
    "-3,</w>",
    "-31',</w>",
    "-3</w>",
    "-4,</w>",
    "-4</w>",
    "-5.0</w>",
    "-5</w>",
    "-</w>",
    "-=</w>",
    "-bit</w>",
    "-dimensional</w>",
    "-format</w>",
    "-level</w>",
    "-like,</w>",
    "-like</w>",
    ".",
    "..",
    "...",
    "...)</w>",
    "...,</w>",
    "....",
    ".......</w>",
    "...;</w>",
    "...</w>",
    "...]:</w>",
    "..</w>",
    ".0,</w>",
    ".0</w>",
    ".1",
    ".</w>",
    "._",
    ".__",
    ".at[]</w>",
    ".format(",
    ".format(type=",
    ".i",
    ".iat[]</w>",
    ".j",
    ".join(",
    ".jpe",
    ".jpeg</w>",
    ".r",
    ".values</w>",
    "/",
    "0",
    "0\"</w>",
    "0',</w>",
    "0))</w>",
    "0),</w>",
    "0).",
    "0).any():</w>",
    "0):</w>",
    "0)</w>",
    "0)]</w>",
    "0,",
    "0,</w>",
    "0-",
    "0-01",
    "0.",
    "0.,</w>",
    "0.0",
    "0.0,</w>",
    "0.08</w>",
    "0.0</w>",
    "0.0j</w>",
    "0.1,</w>",
    "0.105",
    "0.18",
    "0.18.",
    "0.18.0</w>",
    "0.18.1</w>",
    "0.19",
    "0.19.",
    "0.19.0</w>",
    "0.19.2</w>",
    "0.1</w>",
    "0.2",
    "0.20.0</w>",
    "0.21.0</w>",
    "0.24.",
    "0.24.0</w>",
    "0.24.1</w>",
    "0.28",
    "0.28297",
    "0.282978</w>",
    "0.3</w>",
    "0.4</w>",
    "0.5",
    "0.5,</w>",
    "0.5</w>",
    "0.6",
    "0.7",
    "0.75",
    "0.75)],</w>",
    "0.7</w>",
    "0.8",
    "0.9",
    "0.99",
    "0.994,</w>",
    "0.9973",
    "0.997345</w>",
    "0.</w>",
    "00",
    "00',</w>",
    "00'</w>",
    "00']))</w>",
    "0000",
    "000000</w>",
    "0000</w>",
    "000</w>",
    "00:",
    "00:00',</w>",
    "00:00:",
    "00:00:00",
    "00:00:00</w>",
    "00:00</w>",
    "00:01",
    "00:01:00</w>",
    "00:02:00</w>",
    "00:02:30</w>",
    "00:03",
    "00:03:00</w>",
    "00:06:00</w>",
    "00</w>",
    "01",
    "01</w>",
    "01jan",
    "01jan196",
    "01jan1960</w>",
    "02",
    "02:",
    "02:00</w>",
    "02:30</w>",
    "03",
    "03:",
    "04",
    "05",
    "05:",
    "06",
    "06:",
    "06:00</w>",
    "06:05:",
    "07",
    "08</w>",
    "09:",
    "09:00',</w>",
    "09:00:",
    "09:04",
    "0:",
    "0:</w>",
    "0</w>",
    "0])</w>",
    "0],</w>",
    "0]</w>",
    "0_",
    "0g\"</w>",
    "0th</w>",
    "0x",
    "0x2",
    "1",
    "1\")</w>",
    "1\",</w>",
    "1\":",
    "1\"</w>",
    "1'),</w>",
    "1')</w>",
    "1',</w>",
    "1':</w>",
    "1(",
    "1))</w>",
    "1),</w>",
    "1).",
    "1):</w>",
    "1)</w>",
    "1)=",
    "1)])</w>",
    "1)]</w>",
    "1,",
    "1,2,",
    "1,2</w>",
    "1,</w>",
    "1-",
    "1-d</w>",
    "1-dimensional.</w>",
    "1.",
    "1.,</w>",
    "1.0",
    "1.0).",
    "1.0).count()</w>",
    "1.0,</w>",
    "1.0</w>",
    "1.0}",
    "1.1,</w>",
    "1.2)</w>",
    "1.3</w>",
    "1.5)</w>",
    "1.5,</w>",
    "1.5</w>",
    "1.8</w>",
    "1.9,</w>",
    "1.9</w>",
    "10",
    "10)})</w>",
    "10,</w>",
    "10.",
    "10.0",
    "10.0)],</w>",
    "10.1145</w>",
    "100",
    "100,</w>",
    "1000",
    "1000))</w>",
    "1000),</w>",
    "1000)</w>",
    "1000,</w>",
    "1000</w>",
    "105",
    "1067",
    "10678",
    "1067811865",
    "1067811865475</w>",
    "10</w>",
    "11",
    "11300</w>",
    "1145</w>",
    "11865",
    "12",
    "12128</w>",
    "128</w>",
    "12:",
    "12:00:00</w>",
    "13",
    "13203",
    "14",
    "15",
    "1500",
    "16",
    "16</w>",
    "17",
    "17.",
    "17.5,</w>",
    "18",
    "182</w>",
    "19",
    "1937",
    "1937894</w>",
    "1940",
    "1940-04",
    "1940-04-25</w>",
    "196",
    "1960",
    "197",
    "1970</w>",
    "1980</w>",
    "199",
    "1997,</w>",
    "1:",
    "1:</w>",
    "1</w>",
    "1=",
    "1=u'alice",
    "1])</w>",
    "1],</w>",
    "1]</w>",
    "1]])</w>",
    "1]],</w>",
    "1_",
    "1d",
    "1d(",
    "1d-",
    "1d</w>",
    "1d_",
    "1e",
    "1e-",
    "1st</w>",
    "1})</w>",
    "1}</w>",
    "2",
    "2\")</w>",
    "2\",</w>",
    "2\":",
    "2\"</w>",
    "2\"])</w>",
    "2'),</w>",
    "2',</w>",
    "2':</w>",
    "2'])</w>",
    "2'],</w>",
    "2)))</w>",
    "2))</w>",
    "2))]</w>",
    "2),</w>",
    "2).",
    "2):</w>",
    "2)</w>",
    "2)])</w>",
    "2)]</w>",
    "2,",
    "2,</w>",
    "2-",
    "2-d</w>",
    "2.",
    "2.,</w>",
    "2.0",
    "2.0,</w>",
    "2.12",
    "2.1213203",
    "2.1213203435",
    "2.121320343559",
    "2.12132034355964",
    "2.1213203435596424</w>",
    "2.1</w>",
    "2.2,</w>",
    "2.2</w>",
    "2.3,</w>",
    "2.3.0.</w>",
    "2.3.0</w>",
    "2.3</w>",
    "2.4.0</w>",
    "2.4</w>",
    "2.5,</w>",
    "2.5</w>",
    "2.8</w>",
    "2.9,</w>",
    "2.9</w>",
    "2.]))</w>",
    "20",
    "200",
    "2000",
    "2000-01",
    "2000-01-01</w>",
    "2008</w>",
    "2009",
    "2009-12-",
    "201",
    "2012,</w>",
    "2013,</w>",
    "2014",
    "2015",
    "2015-03-29</w>",
    "2015-11-01</w>",
    "2016",
    "2016-01-",
    "2016-01-0",
    "2016-01-09</w>",
    "2016-01-10</w>",
    "2016-01-31</w>",
    "2018",
    "2018',</w>",
    "2018,</w>",
    "2018-0",
    "2018-04",
    "2018-04-0",
    "2018-04-09</w>",
    "2018-04-10</w>",
    "2018-04-11</w>",
    "2018-04-13</w>",
    "2018-10-28</w>",
    "2019",
    "2019]],</w>",
    "2036",
    "20</w>",
    "21",
    "21,</w>",
    "21</w>",
    "22</w>",
    "23",
    "2337",
    "23:",
    "23:59:",
    "23:59:5",
    "24",
    "24.",
    "24.0</w>",
    "249",
    "249's</w>",
    "24</w>",
    "25",
    "258356",
    "2583560</w>",
    "26",
    "27",
    "28",
    "28))]</w>",
    "28]</w>",
    "29",
    "297",
    "2:",
    "2:</w>",
    "2</w>",
    "2=",
    "2=u'row",
    "2])</w>",
    "2],</w>",
    "2]</w>",
    "2]],</w>",
    "2]},</w>",
    "2_",
    "2d</w>",
    "2}</w>",
    "3",
    "3')]</w>",
    "3',</w>",
    "3':</w>",
    "3)))</w>",
    "3))</w>",
    "3),</w>",
    "3).",
    "3).count()</w>",
    "3)</w>",
    "3)],</w>",
    "3)]</w>",
    "3,",
    "3,</w>",
    "3.",
    "3.,</w>",
    "3.0",
    "3.0,</w>",
    "3.0.</w>",
    "3.0</w>",
    "3.2,</w>",
    "3.2</w>",
    "3.3,</w>",
    "3.3</w>",
    "3.4,</w>",
    "3.4</w>",
    "3.5</w>",
    "3.6</w>",
    "3.8,</w>",
    "3.8</w>",
    "30",
    "30',</w>",
    "300</w>",
    "31",
    "31',</w>",
    "31'],</w>",
    "31</w>",
    "32",
    "32,</w>",
    "32.</w>",
    "32</w>",
    "33",
    "35",
    "36",
    "37",
    "389",
    "389.0</w>",
    "38</w>",
    "3:",
    "3:</w>",
    "3</w>",
    "3]),</w>",
    "3]).",
    "3])</w>",
    "3],</w>",
    "3]</w>",
    "3]],</w>",
    "3]})</w>",
    "3rd</w>",
    "3t",
    "3t',</w>",
    "3t,</w>",
    "4",
    "4'),</w>",
    "4',</w>",
    "4))</w>",
    "4),</w>",
    "4).",
    "4).getnumpartitions()</w>",
    "4)</w>",
    "4)],</w>",
    "4)]</w>",
    "4,",
    "4,</w>",
    "4.",
    "4.0",
    "4.0.</w>",
    "4.0</w>",
    "4.56",
    "4.]))</w>",
    "40",
    "400",
    "404</w>",
    "408",
    "42)</w>",
    "43",
    "43400",
    "434000,</w>",
    "434000</w>",
    "435",
    "45",
    "4520</w>",
    "4567",
    "456789",
    "45</w>",
    "47",
    "475</w>",
    "48",
    "49",
    "4:</w>",
    "4</w>",
    "4]).",
    "4])</w>",
    "4],</w>",
    "4]</w>",
    "4]],</w>",
    "4]})</w>",
    "4]},</w>",
    "4},</w>",
    "5",
    "5')]</w>",
    "5),</w>",
    "5).",
    "5):</w>",
    "5)</w>",
    "5)]</w>",
    "5,",
    "5,</w>",
    "5.",
    "5.,</w>",
    "5.0),</w>",
    "5.0,</w>",
    "5.0</w>",
    "5.0],</w>",
    "5.0]</w>",
    "50",
    "50,</w>",
    "50</w>",
    "50],</w>",
    "52,</w>",
    "55</w>",
    "56",
    "57",
    "58",
    "59",
    "59000000</w>",
    "59:",
    "5:</w>",
    "5</w>",
    "5]).",
    "5])</w>",
    "5],</w>",
    "5]</w>",
    "5]]</w>",
    "6",
    "6),</w>",
    "6)</w>",
    "6)]</w>",
    "6,</w>",
    "6.",
    "60",
    "600",
    "62.",
    "62.6</w>",
    "64",
    "64-bit</w>",
    "65",
    "65000000</w>",
    "66",
    "6666",
    "67",
    "69,</w>",
    "6:</w>",
    "6</w>",
    "6])),</w>",
    "6])</w>",
    "6],</w>",
    "6]</w>",
    "6]],</w>",
    "6]})</w>",
    "7",
    "7),</w>",
    "7,</w>",
    "7.",
    "7.0</w>",
    "7.0],</w>",
    "70,</w>",
    "707",
    "73",
    "75",
    "758",
    "77.0</w>",
    "7</w>",
    "8",
    "8),</w>",
    "8)</w>",
    "8,</w>",
    "8.",
    "80.5,</w>",
    "80.5</w>",
    "80000</w>",
    "80</w>",
    "83",
    "8356",
    "84</w>",
    "86",
    "88",
    "88]</w>",
    "89",
    "894</w>",
    "8:</w>",
    "8</w>",
    "8],</w>",
    "9",
    "9',</w>",
    "9)</w>",
    "9,</w>",
    "9.",
    "90</w>",
    "92",
    "922337",
    "9223372036",
    "92233720368",
    "922337203685",
    "92233720368547",
    "92233720368547758",
    "97",
    "98",
    "99",
    "9999",
    "9:",
    "9</w>",
    "9]</w>",
    ":",
    ":-1]</w>",
    ":...</w>",
    ":00</w>",
    ":30",
    ":30:",
    "::</w>",
    ":</w>",
    ":],</w>",
    ":]</w>",
    ":attr:</w>",
    ":class:</w>",
    ":context:</w>",
    ":d",
    ":func:</w>",
    ":math:</w>",
    ":meth",
    ":meth:</w>",
    ":only</w>",
    ":param:</w>",
    ":param</w>",
    ":py",
    ":py:attr:</w>",
    ":py:class:</w>",
    ":re",
    ":ref:</w>",
    ":return",
    ":return:</w>",
    ":sub",
    ":sub:</w>",
    ";",
    ";</w>",
    "<",
    "</w>",
    "=",
    "=\"",
    "='",
    "='f",
    "='ignore",
    "='ignore'):</w>",
    "='right",
    "='right').sum()</w>",
    "=0,</w>",
    "=1,</w>",
    "=2,</w>",
    "=</w>",
    "==",
    "==</w>",
    "====",
    "========",
    "================",
    "==================</w>",
    "========================",
    "============================",
    "====================================",
    "=====================================</w>",
    "=_wrap_inplace_",
    "=_wrap_inplace_method(new_method",
    "=_wrap_inplace_method(new_methods[\"__",
    "=datetime.",
    "=datetime.date(",
    "=datetime.datetime(1997,</w>",
    "=engine",
    "=engine,</w>",
    "=false",
    "=false):</w>",
    "=false)</w>",
    "=false</w>",
    "=none",
    "=none):</w>",
    "=none,</w>",
    "=self.",
    "=true",
    "=true):</w>",
    "=true)</w>",
    "=true,</w>",
    "=true.</w>",
    "=true</w>",
    "=u'",
    "=u'value",
    "=x,</w>",
    "=x</w>",
    "={",
    ">",
    "?",
    "@",
    "[",
    "[\"",
    "[\"[sep",
    "[\"[sep]",
    "[\"[sep]\"]</w>",
    "[\"a",
    "[\"b",
    "[\"c",
    "[\"c1\",</w>",
    "[\"id\",</w>",
    "['",
    "['a",
    "['a',</w>",
    "['a']).",
    "['a']).select(",
    "['cat',</w>",
    "['col",
    "['col1',</w>",
    "['data",
    "['data'])</w>",
    "['dog",
    "['dog',</w>",
    "['dt",
    "['dt'])</w>",
    "['falcon",
    "['falcon',</w>",
    "['s",
    "['s',",
    "['s',])</w>",
    "['snail",
    "['snail',</w>",
    "['step",
    "['str",
    "['str'])</w>",
    "['t",
    "['t'])</w>",
    "[(",
    "[('age",
    "[('age',</w>",
    "[('i',</w>",
    "[(k,</w>",
    "[-1",
    "[-1,</w>",
    "[-1]</w>",
    "[0",
    "[0.0",
    "[0.0]),</w>",
    "[0])</w>",
    "[0].",
    "[0]</w>",
    "[0][0]</w>",
    "[0]]</w>",
    "[1",
    "[1,</w>",
    "[1.0",
    "[1.0]),</w>",
    "[1:",
    "[1]",
    "[1]</w>",
    "[2",
    "[2,</w>",
    "[2.0",
    "[2.0]),</w>",
    "[2018,</w>",
    "[3",
    "[3,</w>",
    "[4",
    "[4,</w>",
    "[5",
    "[6",
    "[7,</w>",
    "[:",
    "[:,</w>",
    "[::-1]</w>",
    "[:cap_",
    "[:cap_length]</w>",
    "[</w>",
    "[[",
    "[]))</w>",
    "[])]</w>",
    "[],</w>",
    "[]</w>",
    "[a,</w>",
    "[a</w>",
    "[a]</w>",
    "[b",
    "[b,</w>",
    "[b1,</w>",
    "[cl",
    "[class_column",
    "[col]</w>",
    "[col_",
    "[false,</w>",
    "[i",
    "[i])</w>",
    "[j",
    "[j])</w>",
    "[k]</w>",
    "[key]</w>",
    "[labeledpoint(",
    "[labeledpoint(1.1,</w>",
    "[len</w>",
    "[m",
    "[m]</w>",
    "[mask]</w>",
    "[n",
    "[np.",
    "[np.number",
    "[ns]",
    "[ns]')</w>",
    "[ns]',</w>",
    "[ns]</w>",
    "[p",
    "[pd.",
    "[points[",
    "[r",
    "[row(",
    "[row(_",
    "[row(_1=u'alice",
    "[row(_1=u'alice',</w>",
    "[row(age=",
    "[row(age=2,</w>",
    "[row(csv",
    "[row(d",
    "[row(date",
    "[row(date=datetime.date(",
    "[row(date=datetime.date(1997,</w>",
    "[row(month",
    "[row(name=u'alice',</w>",
    "[row(r",
    "[row(r=",
    "[row(string",
    "[row(udf",
    "[row(udf:",
    "[row(udf:javastringlength",
    "[row(year=",
    "[row(year=2012,</w>",
    "[self.",
    "[sep",
    "[sep]</w>",
    "[slice(none",
    "[slice(none)]</w>",
    "[true,</w>",
    "[value",
    "[x.",
    "[x</w>",
    "[{",
    "\\",
    "]",
    "]',</w>",
    "]'</w>",
    "])",
    "])),</w>",
    "]))</w>",
    "]),</w>",
    "]).",
    "]):</w>",
    "])</w>",
    "])]</w>",
    "],",
    "],)],</w>",
    "],</w>",
    "].",
    "]:</w>",
    "]</w>",
    "][",
    "][0]</w>",
    "][spark-",
    "][sql]</w>",
    "][wip",
    "]]))</w>",
    "]]),</w>",
    "]])</w>",
    "]],</w>",
    "]]</w>",
    "]})</w>",
    "]},</w>",
    "]}</w>",
    "^",
    "_",
    "_,</w>",
    "_.</w>",
    "_.__",
    "_.__doc__</w>",
    "_2=",
    "_2=1)]</w>",
    "_</w>",
    "__",
    "__.</w>",
    "__dict__</w>",
    "__init__.</w>",
    "_add_",
    "_add_numeric_",
    "_agg_",
    "_align_",
    "_apply_",
    "_arith_",
    "_arith_method_",
    "_arith_method_sparse_",
    "_as</w>",
    "_block_",
    "_c",
    "_char",
    "_check_",
    "_check_series_convert_timestamp",
    "_convert_",
    "_convert_list",
    "_convert_listlike(arg,</w>",
    "_convert_to_",
    "_convert_to_vector",
    "_create_",
    "_default_",
    "_default_hash_key</w>",
    "_dtype(",
    "_ensure_",
    "_evaluate_",
    "_exception_",
    "_exception_message",
    "_exception_message(e",
    "_extend_",
    "_factori",
    "_flex_",
    "_flex_doc_",
    "_format_",
    "_from_",
    "_gen_",
    "_gen_eval_",
    "_gen_eval_kwarg",
    "_get_",
    "_group_",
    "_group_selection_context(self):</w>",
    "_handle_",
    "_has_",
    "_has_null",
    "_has_nulltype(",
    "_heapif",
    "_heapreplace</w>",
    "_infer_",
    "_int64",
    "_inter",
    "_is",
    "_is_",
    "_is_multiple",
    "_is_multiple(del",
    "_is_multiple(delta,</w>",
    "_isna_",
    "_java_",
    "_java_obj.",
    "_java_obj.set",
    "_java_obj</w>",
    "_load_from_",
    "_make_",
    "_make_arithmetic_",
    "_make_arithmetic_op(",
    "_make_arithmetic_op(operator.",
    "_make_comparison_",
    "_make_comparison_op(",
    "_make_comparison_op(operator.",
    "_make_evaluate_",
    "_make_evaluate_binop(",
    "_make_pret",
    "_make_pretty_",
    "_make_stat_",
    "_make_stat_function(</w>",
    "_make_type_",
    "_make_type_verifier(",
    "_make_type_verifier(structtype([",
    "_maybe_",
    "_nest_",
    "_nest_lvl</w>",
    "_ns_",
    "_old_",
    "_one_",
    "_or_",
    "_or_bu",
    "_parse_",
    "_parse_datatype_",
    "_parse_datatype_json_",
    "_parse_datatype_string",
    "_parse_datatype_string(\"a:</w>",
    "_py",
    "_py2",
    "_py2java(sc,</w>",
    "_raise_",
    "_raw_",
    "_re",
    "_recode",
    "_recode_",
    "_recode_for_categorie",
    "_recode_for_categories(",
    "_reorder_",
    "_reorder_for_",
    "_reorder_for_extension_",
    "_reorder_for_extension_array_",
    "_set_",
    "_sif",
    "_t",
    "_td_",
    "_to_",
    "_to_java_",
    "_to_java_column(",
    "_to_java_column(col",
    "_to_java_column(col),</w>",
    "_to_seq(",
    "_to_seq(sc,</w>",
    "_un",
    "_unpickle_",
    "_validate_",
    "_values</w>",
    "_vector_",
    "_vector_size(",
    "_wrap_",
    "_wrap_inplace_",
    "`",
    "a",
    "a',</w>",
    "a':</w>",
    "a(",
    "a))</w>",
    "a):</w>",
    "a)</w>",
    "a)=",
    "a,",
    "a,</w>",
    "a-",
    "a-2</w>",
    "a-hdf",
    "a-hdfs-",
    "a-hdfs-path</w>",
    "a-suffix",
    "a-z",
    "a.",
    "a.dot(",
    "a.squared_distance(",
    "a0</w>",
    "a1</w>",
    "a2</w>",
    "a3</w>",
    "a4</w>",
    "a5</w>",
    "a:</w>",
    "a</w>",
    "a=",
    "a]</w>",
    "a_",
    "ab",
    "abc",
    "abc.",
    "abcdataframe):</w>",
    "abcindex",
    "abcindexclass)):</w>",
    "abcindexclass):</w>",
    "abcindexclass,</w>",
    "abcserie",
    "abcseries)):</w>",
    "abcseries):</w>",
    "abcseries,</w>",
    "abilities</w>",
    "ability</w>",
    "able",
    "able,</w>",
    "able</w>",
    "abled.</w>",
    "ables</w>",
    "abo",
    "above,</w>",
    "above</w>",
    "abs(",
    "abs(mat.",
    "abs(mat.mean()</w>",
    "abs(mat.std()</w>",
    "abs(stats.",
    "abs(stats.mean()</w>",
    "abs(stats.stdev()</w>",
    "absol",
    "absolute</w>",
    "ac",
    "acc</w>",
    "acce",
    "accep",
    "accept</w>",
    "acceptable_",
    "acceptable_types(",
    "acceptable_types(obj)</w>",
    "accepted</w>",
    "accepting</w>",
    "accepts</w>",
    "access</w>",
    "accessing</w>",
    "accesskey",
    "accessor",
    "accessors.</w>",
    "accessors</w>",
    "accommodates</w>",
    "according</w>",
    "account</w>",
    "accounts</w>",
    "accum_",
    "accumul",
    "accumulator",
    "accurate</w>",
    "ace",
    "ach",
    "ach</w>",
    "ache",
    "ache.",
    "ached</w>",
    "achie",
    "achieve</w>",
    "acing",
    "ack",
    "ack</w>",
    "acro",
    "across</w>",
    "act",
    "act</w>",
    "acti",
    "action</w>",
    "activ",
    "activated</w>",
    "active</w>",
    "activecontext</w>",
    "actly</w>",
    "actu",
    "actual</w>",
    "actually</w>",
    "acy</w>",
    "ad",
    "ad(",
    "ad.</w>",
    "ad</w>",
    "ad_",
    "adapti",
    "add",
    "add)</w>",
    "add,</w>",
    "add</w>",
    "add_",
    "add_one",
    "add_one(",
    "add_one(id",
    "add_one(id)=",
    "added</w>",
    "adding</w>",
    "addsub_",
    "aded</w>",
    "ader",
    "ading",
    "ading</w>",
    "adj",
    "adjust",
    "adjust(",
    "adjust_",
    "adjusted",
    "adjusted.</w>",
    "adjusted</w>",
    "ado",
    "ads</w>",
    "adv",
    "advan",
    "af",
    "af</w>",
    "afari</w>",
    "afe",
    "after",
    "after</w>",
    "ag",
    "ag</w>",
    "again",
    "against</w>",
    "agate</w>",
    "age",
    "age).collect()</w>",
    "age)=",
    "age)=2),</w>",
    "age)=5)]</w>",
    "age.",
    "age2=",
    "age</w>",
    "age=",
    "age=1)]</w>",
    "age=5)]</w>",
    "age=5,</w>",
    "agen",
    "ages=u'",
    "agg",
    "agg(",
    "agg_",
    "agg_general",
    "aggfunc</w>",
    "aggreg",
    "aggregate",
    "aggregate(",
    "aggregation</w>",
    "agon",
    "agonal</w>",
    "ai",
    "ailable.</w>",
    "ailable</w>",
    "ain",
    "ain</w>",
    "ait",
    "ait</w>",
    "aitany",
    "ak",
    "akima",
    "al",
    "al</w>",
    "ala</w>",
    "ale",
    "ale</w>",
    "alfred</w>",
    "algo",
    "algorith",
    "algorithm.</w>",
    "algorithm</w>",
    "algorithms.",
    "algorithms</w>",
    "algos.",
    "algos.take_",
    "ali",
    "alias</w>",
    "aliases.</w>",
    "aliases</w>",
    "alice",
    "alified</w>",
    "alig",
    "align",
    "align_",
    "align_keys</w>",
    "aligner</w>",
    "alignment</w>",
    "aling</w>",
    "all",
    "all',</w>",
    "all(",
    "all():</w>",
    "all</w>",
    "all_",
    "all_date",
    "all_of_",
    "allo",
    "allow",
    "allow_",
    "allow_dup",
    "allow_fill",
    "allow_fill=",
    "allowback",
    "allowbackslashescaping",
    "allowbackslashescapingany",
    "allowcommen",
    "allownumericle",
    "allownumericleading",
    "allownumericleadingzero",
    "allows</w>",
    "allowsinglequote",
    "allowun",
    "allowunquoted",
    "allowunquotedcontrol",
    "allowunquotedcontrolchar",
    "allowunquotedfield",
    "ally</w>",
    "alon",
    "along",
    "along</w>",
    "alph",
    "alpha-2</w>",
    "alpha</w>",
    "alpha=",
    "alread",
    "already</w>",
    "also",
    "also</w>",
    "alt_",
    "alter",
    "alternatively,</w>",
    "always</w>",
    "am",
    "am</w>",
    "amb",
    "ambigu",
    "ambiguous,</w>",
    "ambiguous</w>",
    "ame",
    "ame</w>",
    "aming",
    "amma</w>",
    "amon",
    "among</w>",
    "amoun",
    "amount</w>",
    "amp_",
    "ample",
    "amples</w>",
    "ampling",
    "ampling</w>",
    "an",
    "an</w>",
    "an_",
    "analy",
    "analysis,</w>",
    "ance</w>",
    "and",
    "and</w>",
    "and_",
    "ane",
    "anel",
    "ang",
    "angu",
    "anguilla</w>",
    "ani",
    "animal</w>",
    "aniti",
    "anke",
    "another_",
    "another_param",
    "ans",
    "ant</w>",
    "any",
    "any(",
    "any():</w>",
    "any</w>",
    "anything</w>",
    "ap",
    "ap</w>",
    "apache.",
    "apane",
    "ape",
    "api",
    "api.",
    "api.python.",
    "app",
    "appear</w>",
    "append",
    "append(",
    "append</w>",
    "appli",
    "applicable</w>",
    "application</w>",
    "applied</w>",
    "applies</w>",
    "apply",
    "apply(lambda</w>",
    "apply(np.",
    "apply_",
    "apply_along",
    "apply_along_",
    "applymap</w>",
    "appro",
    "approach</w>",
    "approp",
    "appropri",
    "appropriate</w>",
    "approx",
    "approximate</w>",
    "approximately</w>",
    "apti",
    "ar",
    "ar',</w>",
    "ar</w>",
    "arac",
    "aran",
    "arange(",
    "arange(len(",
    "arbitrary</w>",
    "arch",
    "archi",
    "archive</w>",
    "archive_",
    "archive_file,</w>",
    "archive_file</w>",
    "ard",
    "ard'</w>",
    "ard.</w>",
    "ard</w>",
    "ardi",
    "ards</w>",
    "are",
    "are</w>",
    "area</w>",
    "ared</w>",
    "arest</w>",
    "arg",
    "arg):</w>",
    "arg)</w>",
    "arg,</w>",
    "arg.",
    "arg0</w>",
    "arg=",
    "arg_",
    "arg_val_",
    "arge",
    "args(self,</w>",
    "args):</w>",
    "args)</w>",
    "args,</w>",
    "args:</w>",
    "args</w>",
    "args[0]</w>",
    "argsort</w>",
    "argumen",
    "argument",
    "argument</w>",
    "arguments:</w>",
    "arguments</w>",
    "arg}</w>",
    "ari",
    "arie",
    "arily</w>",
    "aring</w>",
    "arith",
    "arith_",
    "arith_flex</w>",
    "arith_special</w>",
    "arithme",
    "arithmeti",
    "arithmetic</w>",
    "arithmetic_",
    "arly</w>",
    "arn",
    "arn</w>",
    "arning</w>",
    "around</w>",
    "arr",
    "arr).",
    "arr):</w>",
    "arr)</w>",
    "arr,</w>",
    "arr.",
    "arr.dtype,</w>",
    "arr</w>",
    "arr_",
    "arr_value.",
    "arra",
    "array",
    "array's</w>",
    "array(",
    "array('d',</w>",
    "array(),</w>",
    "array()</w>",
    "array(['a',</w>",
    "array([('a',</w>",
    "array([1,</w>",
    "array-like,</w>",
    "array-like</w>",
    "array.",
    "array.array('d',</w>",
    "array.shape</w>",
    "array</w>",
    "array_",
    "array_dtype(",
    "array_equivalen",
    "array_like,</w>",
    "array_like</w>",
    "arrays(",
    "arrays,</w>",
    "arrays.",
    "arrays.pandasarray</w>",
    "arrays</w>",
    "arraytype(",
    "arraytype(short",
    "arrow",
    "arrow.",
    "arrow</w>",
    "arrow_",
    "arrow_type</w>",
    "arti",
    "article",
    "ary.</w>",
    "ary</w>",
    "as",
    "as')</w>",
    "as(\"",
    "as(\"csv",
    "as(\"csv\")).collect()</w>",
    "as('",
    "as)</w>",
    "as,</w>",
    "as.",
    "as2.",
    "as</w>",
    "as_",
    "as_index</w>",
    "asarray</w>",
    "ascending",
    "ascending:</w>",
    "ascending=",
    "ascending=false)</w>",
    "ascending=true,</w>",
    "asci",
    "ascii</w>",
    "asdict()</w>",
    "ase",
    "ase.</w>",
    "ase</w>",
    "ased</w>",
    "ases.</w>",
    "ases</w>",
    "asfreq",
    "asfreq()</w>",
    "ash",
    "asi",
    "asi8</w>",
    "asia</w>",
    "asier</w>",
    "asing</w>",
    "asnondeterministi",
    "asnondeterministic()</w>",
    "ason</w>",
    "assem",
    "assemble</w>",
    "asser",
    "assert</w>",
    "assert_",
    "assert_acceptable_types(obj)</w>",
    "assertionerror",
    "assig",
    "assign",
    "assign(",
    "assign</w>",
    "assigned</w>",
    "assignmen",
    "assignments,</w>",
    "asso",
    "associ",
    "associated</w>",
    "associative</w>",
    "asstring",
    "ast",
    "ast):</w>",
    "ast</w>",
    "ast_",
    "astext",
    "astype(",
    "astype('",
    "astype('f8",
    "astype('f8')</w>",
    "astype('i8",
    "astype('i8',</w>",
    "astype(dtype)</w>",
    "astype(dtype,</w>",
    "astype(np.",
    "astype(np.float64)</w>",
    "astype(object)</w>",
    "asure</w>",
    "asy</w>",
    "at",
    "at):</w>",
    "at.",
    "at</w>",
    "at[]</w>",
    "at_",
    "ate",
    "ate</w>",
    "ate_",
    "ated.</w>",
    "ated</w>",
    "atedataframe([",
    "ately</w>",
    "ater",
    "ater</w>",
    "ates</w>",
    "atest</w>",
    "atex</w>",
    "ath",
    "ati",
    "ating</w>",
    "ation",
    "ation,</w>",
    "ation.</w>",
    "ation</w>",
    "ation_",
    "ations.</w>",
    "ations</w>",
    "atis",
    "ative",
    "ative</w>",
    "atives</w>",
    "atle",
    "atleast_",
    "atleast_2",
    "ato",
    "atomic</w>",
    "ator",
    "ator</w>",
    "att",
    "attemp",
    "attempt</w>",
    "attempted</w>",
    "attempts</w>",
    "attr",
    "attr:</w>",
    "attri",
    "attribute",
    "attribute,</w>",
    "attributeerror:</w>",
    "attrs)</w>",
    "attrs,</w>",
    "attrs.",
    "attrs</w>",
    "aturday,</w>",
    "ause</w>",
    "aussi",
    "auth",
    "auth_",
    "auth_local_",
    "auth_local_we",
    "authenti",
    "authenticate</w>",
    "authentication</w>",
    "auto",
    "automati",
    "automatically</w>",
    "av",
    "available.</w>",
    "available</w>",
    "ave",
    "ave</w>",
    "ave_",
    "avg",
    "avg(",
    "avg(age)=",
    "avi",
    "aving</w>",
    "avo",
    "avoid</w>",
    "avor</w>",
    "avro",
    "aw",
    "await",
    "awaitany",
    "aware</w>",
    "awk",
    "ax",
    "ax):</w>",
    "ax,</w>",
    "ax.",
    "ax.get_",
    "ax.set_",
    "ax0_",
    "ax1.",
    "ax=",
    "ax=ax,</w>",
    "ax=none,</w>",
    "ax_",
    "ax_freq</w>",
    "axe",
    "axes(",
    "axes):</w>",
    "axes)</w>",
    "axes,</w>",
    "axes.",
    "axes.append(",
    "axes.append(ax",
    "axes:</w>",
    "axes</w>",
    "axes=none,</w>",
    "axes[",
    "axes]</w>",
    "axes_",
    "axis",
    "axis(",
    "axis(axis)</w>",
    "axis)</w>",
    "axis,</w>",
    "axis.",
    "axis.</w>",
    "axis.axes</w>",
    "axis.get_",
    "axis.set_",
    "axis:</w>",
    "axis</w>",
    "axis=",
    "axis=0):</w>",
    "axis=0)</w>",
    "axis=0,</w>",
    "axis=0</w>",
    "axis=1)</w>",
    "axis=1</w>",
    "axis=axis)</w>",
    "axis=axis,</w>",
    "axis=self.",
    "axis=self.axis)</w>",
    "axis={'index',</w>",
    "axis]</w>",
    "axis_",
    "axis_desc",
    "axis_descr,</w>",
    "axis_name</w>",
    "axis_number</w>",
    "axis_propertie",
    "axvline",
    "axvlines_",
    "ay",
    "ay</w>",
    "ayer",
    "a}</w>",
    "b",
    "b')</w>",
    "b',</w>",
    "b'</w>",
    "b):</w>",
    "b)</w>",
    "b,",
    "b,</w>",
    "b-",
    "b.",
    "b.dec_",
    "b.dec_att",
    "b.po",
    "b.pos_",
    "b.pos_ff.",
    "b0</w>",
    "b1</w>",
    "b2</w>",
    "b2]</w>",
    "b:</w>",
    "b</w>",
    "b=",
    "b])</w>",
    "b]</w>",
    "b_",
    "ba",
    "back",
    "back.",
    "back</w>",
    "back_",
    "back_server_",
    "backfill</w>",
    "backg",
    "backw",
    "backward",
    "backward</w>",
    "backwards</w>",
    "bad</w>",
    "bad_",
    "bar",
    "bar</w>",
    "barrier",
    "barriertask",
    "barriertaskcontext</w>",
    "bars</w>",
    "base",
    "base)</w>",
    "base-",
    "base-type</w>",
    "base.",
    "based</w>",
    "basestring",
    "basestring):</w>",
    "basi",
    "basic</w>",
    "bat",
    "batch",
    "batch,</w>",
    "batch</w>",
    "batch_",
    "batchsize)</w>",
    "batchsize</w>",
    "batman</w>",
    "batmobile</w>",
    "bcp</w>",
    "be",
    "be,</w>",
    "be</w>",
    "be_",
    "bear</w>",
    "bec",
    "because</w>",
    "bed",
    "bed</w>",
    "been</w>",
    "before",
    "before</w>",
    "begin",
    "beh",
    "behavi",
    "behavior",
    "behavior).</w>",
    "behavior</w>",
    "behaviour",
    "behaviour).</w>",
    "behaviour</w>",
    "being</w>",
    "belong",
    "belongs</w>",
    "below",
    "below).</w>",
    "below:</w>",
    "ber",
    "ber</w>",
    "berkele",
    "berkeley</w>",
    "bert",
    "bert-",
    "bert-base-",
    "bert</w>",
    "best",
    "best</w>",
    "best_",
    "best_non_",
    "best_non_null_",
    "bestmodel,</w>",
    "betwe",
    "between</w>",
    "beyond</w>",
    "bf",
    "bfg",
    "bfill",
    "bfill:</w>",
    "bi",
    "bias",
    "bias)</w>",
    "bias,</w>",
    "bias</w>",
    "bias_",
    "bias_i</w>",
    "biase",
    "big",
    "bigquery",
    "bigquery.</w>",
    "bigquery</w>",
    "bility.</w>",
    "bility</w>",
    "bin",
    "bin</w>",
    "bination</w>",
    "binations</w>",
    "bine",
    "bing</w>",
    "bining</w>",
    "binop(",
    "bins)</w>",
    "bins,</w>",
    "bins.</w>",
    "bins</w>",
    "bins=",
    "bins=bins,</w>",
    "bio.",
    "bio.write(",
    "bio.write(struct.pack",
    "bir",
    "bird</w>",
    "birth</w>",
    "bit',</w>",
    "bit</w>",
    "bitrary</w>",
    "bl",
    "blan",
    "blank</w>",
    "blankline</w>",
    "ble",
    "ble.</w>",
    "ble</w>",
    "blemodel</w>",
    "bli",
    "blk",
    "blk.",
    "blk.mgr_",
    "blkno",
    "blknos,</w>",
    "blknos[",
    "blo",
    "block",
    "block(",
    "block.",
    "block;</w>",
    "block</w>",
    "block_",
    "block_manager_",
    "blocking",
    "blockmanager",
    "blockmanager</w>",
    "blockmatrix(",
    "blocks",
    "blocks)</w>",
    "blocks,</w>",
    "blocks.</w>",
    "blocks:</w>",
    "blocks</w>",
    "bly</w>",
    "bm</w>",
    "bn</w>",
    "bo",
    "bod",
    "body</w>",
    "boo",
    "bool",
    "bool(",
    "bool):</w>",
    "bool)</w>",
    "bool,</w>",
    "bool_",
    "bool_dtype(",
    "bool_special</w>",
    "boole",
    "boolean",
    "boolean,</w>",
    "boot",
    "bootstrap</w>",
    "bootstrapping</w>",
    "bop)</w>",
    "bor",
    "both",
    "both.</w>",
    "botto",
    "bottom",
    "bound",
    "bound</w>",
    "boundarie",
    "boundaries,</w>",
    "boundaries_",
    "boundary.</w>",
    "boundary</w>",
    "bounded",
    "bounded</w>",
    "bounds",
    "bounds_",
    "box",
    "box</w>",
    "box=false</w>",
    "box=true</w>",
    "box_",
    "boxed</w>",
    "boxes</w>",
    "boxplot</w>",
    "br",
    "bre",
    "brea",
    "break</w>",
    "broad",
    "broadcast</w>",
    "brune",
    "brunei</w>",
    "brute",
    "brute-",
    "brute-force</w>",
    "bs",
    "bs</w>",
    "bserver</w>",
    "bsz",
    "bsz,</w>",
    "bsz]</w>",
    "bu",
    "buf,</w>",
    "buf.",
    "buf.write('</w>",
    "buf</w>",
    "buf=",
    "buffer",
    "buffer</w>",
    "bug",
    "buil",
    "build</w>",
    "build_",
    "build_path,</w>",
    "builder",
    "builder(",
    "built-",
    "built-in</w>",
    "builtin</w>",
    "bull",
    "bullwhip</w>",
    "bus",
    "busine",
    "business",
    "business</w>",
    "but</w>",
    "bute",
    "buted</w>",
    "bution",
    "bution</w>",
    "bw_",
    "bw_limit</w>",
    "by",
    "by,</w>",
    "by-",
    "by</w>",
    "by=",
    "by=by,</w>",
    "by_",
    "by_name</w>",
    "bykey",
    "bykey(",
    "bykey(true,</w>",
    "bykey</w>",
    "byte",
    "byteorder</w>",
    "bytesspilled</w>",
    "bzip",
    "bzip2,</w>",
    "c",
    "c',</w>",
    "c(",
    "c()</w>",
    "c):</w>",
    "c)</w>",
    "c,</w>",
    "c.",
    "c.</w>",
    "c.sort_values(",
    "c0",
    "c0=u'value",
    "c:</w>",
    "c</w>",
    "c=",
    "c]</w>",
    "c_",
    "ca",
    "ca',</w>",
    "cable</w>",
    "cache",
    "cache,</w>",
    "cache_",
    "cache_array</w>",
    "cache_dir",
    "cache_dir)</w>",
    "cache_dir=",
    "cache_dir=cache_dir)</w>",
    "cal",
    "cal</w>",
    "cal_",
    "calcul",
    "calculate</w>",
    "calend",
    "calendar</w>",
    "call",
    "callable",
    "callable(",
    "callable,</w>",
    "callable},</w>",
    "callback</w>",
    "callmllib",
    "callmllibfunc(\"",
    "calls</w>",
    "callsite",
    "cally.</w>",
    "cally</w>",
    "can",
    "can</w>",
    "cannot</w>",
    "cap",
    "cap_",
    "capturing</w>",
    "car",
    "care",
    "careful</w>",
    "carte",
    "cartesi",
    "cartesian</w>",
    "case",
    "case):</w>",
    "case,</w>",
    "case-",
    "case-in",
    "case-insensitive</w>",
    "case</w>",
    "cases,</w>",
    "cast",
    "cast)</w>",
    "cast</w>",
    "cast_",
    "casting",
    "cat",
    "cat.",
    "cat.categories</w>",
    "cat.map({'a':</w>",
    "cat.take([0,</w>",
    "cat</w>",
    "catalog.",
    "catch</w>",
    "cate",
    "cate</w>",
    "categor",
    "categori",
    "categorical",
    "categorical.</w>",
    "categorical</w>",
    "categoricaldtype</w>",
    "categoricalfeaturesinfo",
    "categoricalfeaturesinfo:</w>",
    "categoricals.</w>",
    "categoricals</w>",
    "categorie",
    "categories)</w>",
    "categories,</w>",
    "categories.",
    "categories.</w>",
    "categories</w>",
    "categories=",
    "categorize",
    "category)</w>",
    "category</w>",
    "cation",
    "cation.",
    "cation.</w>",
    "cation</w>",
    "catwo",
    "catwoman</w>",
    "causes</w>",
    "cb",
    "ce",
    "ce(",
    "ce(['a',</w>",
    "ce)</w>",
    "ce,</w>",
    "ce.</w>",
    "ce</w>",
    "ce=",
    "ce_",
    "ced</w>",
    "ceil",
    "cel",
    "cell",
    "cell.</w>",
    "cells.</w>",
    "cells</w>",
    "cen",
    "center",
    "central</w>",
    "centro",
    "cep",
    "cer",
    "certain</w>",
    "ces.</w>",
    "ces</w>",
    "cewe",
    "cf.",
    "ch",
    "ch.",
    "ch</w>",
    "ch_",
    "chall()</w>",
    "chan",
    "change",
    "change</w>",
    "changed</w>",
    "changes</w>",
    "changing</w>",
    "channel",
    "char",
    "charac",
    "charto",
    "chartoescapequote",
    "chartoescapequoteescaping",
    "chartoescapequoteescaping:</w>",
    "check",
    "check_",
    "check_string_",
    "checkpo",
    "chemy.",
    "chemy</w>",
    "cher",
    "ches</w>",
    "chil",
    "child",
    "child</w>",
    "childpos</w>",
    "chine",
    "chinese</w>",
    "cho",
    "choi",
    "choice",
    "choice</w>",
    "choo",
    "choose</w>",
    "choosing</w>",
    "chosen",
    "chosen</w>",
    "chro",
    "chrome</w>",
    "chun",
    "chunk",
    "chunksize)</w>",
    "chunksize,</w>",
    "chunksize</w>",
    "chunksize=",
    "chunksize=chunksize)</w>",
    "chunksize=chunksize,</w>",
    "ci",
    "cien",
    "cing</w>",
    "cir",
    "cit</w>",
    "citly</w>",
    "cj",
    "cjk</w>",
    "ck",
    "ck</w>",
    "cl",
    "cl)</w>",
    "cla",
    "clas",
    "class",
    "class(",
    "class)):</w>",
    "class):</w>",
    "class,</w>",
    "class:</w>",
    "class</w>",
    "class__",
    "class__.__",
    "classe",
    "classes</w>",
    "classifi",
    "classification.</w>",
    "classifier",
    "classname.",
    "classname</w>",
    "clause.</w>",
    "clause</w>",
    "cle",
    "clean</w>",
    "clean_",
    "clear",
    "clear</w>",
    "clien",
    "client</w>",
    "clip",
    "clip(",
    "clip(lower",
    "clip(lower=",
    "clip(upper",
    "clip(upper=",
    "clipbo",
    "clipboard.</w>",
    "clipboard</w>",
    "clipping</w>",
    "clo",
    "close",
    "close()</w>",
    "close-",
    "close-fig",
    "close-figs</w>",
    "closed",
    "closed,</w>",
    "closed=",
    "closed=closed,</w>",
    "closest</w>",
    "closure",
    "closure</w>",
    "cloud.",
    "cloud.google.",
    "cloud.google.com</w>",
    "cls",
    "cls):</w>",
    "cls)</w>",
    "cls,</w>",
    "cls.",
    "cls._",
    "cls.__",
    "cls.__r",
    "cls._axis_",
    "cls</w>",
    "clu",
    "cluster",
    "clusters.</w>",
    "cm",
    "cnames_",
    "co",
    "co.",
    "co.co_",
    "co_",
    "code",
    "code,</w>",
    "code-",
    "code-block",
    "code-block::</w>",
    "codec",
    "codec</w>",
    "codes)</w>",
    "codes,</w>",
    "codes.",
    "codes=[[0,</w>",
    "codes=[[1,</w>",
    "coeff",
    "coefficien",
    "coefficient.</w>",
    "coefficient</w>",
    "coer",
    "coerce</w>",
    "coerce_",
    "coerce_float</w>",
    "coerce_float=",
    "coerce_float=coerce_",
    "coerce_float=coerce_float,</w>",
    "coerced</w>",
    "coerci",
    "coercible</w>",
    "coercion</w>",
    "col",
    "col))</w>",
    "col)</w>",
    "col,</w>",
    "col0</w>",
    "col1,</w>",
    "col1:</w>",
    "col1</w>",
    "col2,</w>",
    "col2:</w>",
    "col2</w>",
    "col3</w>",
    "col:</w>",
    "col=",
    "col]</w>",
    "col_",
    "col_0</w>",
    "col_1</w>",
    "col_fill</w>",
    "col_name</w>",
    "collec",
    "collect",
    "collect()</w>",
    "collection",
    "collections.",
    "collections.abc.",
    "collections.abc.mapping</w>",
    "collections.default",
    "collections.ordereddict()</w>",
    "collections</w>",
    "collectsubmodel",
    "color",
    "color=",
    "colormap",
    "colormap</w>",
    "colors</w>",
    "cols",
    "cols)</w>",
    "cols,</w>",
    "cols:</w>",
    "cols</w>",
    "column",
    "column\")</w>",
    "column(",
    "column(s).</w>",
    "column(sc._jvm.functions.",
    "column):</w>",
    "column-",
    "column-by-",
    "column-wise.</w>",
    "column-wise</w>",
    "column.",
    "column.</w>",
    "column.otherwise</w>",
    "column:</w>",
    "column</w>",
    "column=",
    "column_",
    "column_format</w>",
    "columnname",
    "columnnameof",
    "columnnameofcorrup",
    "columnnameofcorruptrecord</w>",
    "columns",
    "columns)</w>",
    "columns,</w>",
    "columns</w>",
    "columns=",
    "columns=['let",
    "columns=['letter",
    "columns=['letter',</w>",
    "columns=columns,</w>",
    "columns=columns_",
    "columns=columns_mapper,</w>",
    "columns=multi",
    "columns=multicol",
    "columns={\"a\":</w>",
    "columns_",
    "columnsto",
    "com",
    "com.",
    "com.values_from_",
    "com.values_from_object(",
    "com</w>",
    "combination</w>",
    "combinations</w>",
    "combine",
    "combine(",
    "combine_",
    "combining</w>",
    "combop)</w>",
    "comm",
    "comma-",
    "comma-separated</w>",
    "commen",
    "commodates</w>",
    "common-",
    "common-deno",
    "common-denominator</w>",
    "commutative</w>",
    "comp",
    "comp_",
    "comp_flex</w>",
    "comp_special</w>",
    "comparable</w>",
    "comparison",
    "comparisons</w>",
    "compat_",
    "compat_args):</w>",
    "compat_args)</w>",
    "compat_args</w>",
    "compati",
    "compatibility.</w>",
    "compatibility</w>",
    "compatible</w>",
    "compile",
    "complex",
    "complex128</w>",
    "componen",
    "component</w>",
    "components</w>",
    "compression",
    "compression,</w>",
    "compression.",
    "compression.codec</w>",
    "compression=",
    "compression=compression,</w>",
    "compressioncodec",
    "computation.",
    "con",
    "con</w>",
    "conc",
    "concat([",
    "concat</w>",
    "concat_",
    "concat_axis</w>",
    "concatenate",
    "cond",
    "conda</w>",
    "conda_",
    "condition",
    "conditions.</w>",
    "conditions</w>",
    "conf",
    "conf(\"",
    "conf(\"spark.sql.",
    "conf(\"spark.sql.shuffle.",
    "conf(\"spark.sql.shuffle.partition",
    "conf.",
    "conf:</w>",
    "conf</w>",
    "confiden",
    "config",
    "config.",
    "config_",
    "config_file</w>",
    "confli",
    "conflicts</w>",
    "conform</w>",
    "conn_",
    "conn_info_",
    "consec",
    "consecuti",
    "consecutive</w>",
    "consen",
    "consensus</w>",
    "consider.</w>",
    "consider</w>",
    "considered</w>",
    "considering</w>",
    "consisten",
    "consistent</w>",
    "consisting</w>",
    "consists</w>",
    "console</w>",
    "consolidate:</w>",
    "constan",
    "constant.</w>",
    "construc",
    "construct_",
    "construct_1d_",
    "constructor",
    "consume</w>",
    "consumed</w>",
    "conta",
    "contain",
    "containing",
    "containing:</w>",
    "contains</w>",
    "conten",
    "content)</w>",
    "content</w>",
    "contents.</w>",
    "contents</w>",
    "contex",
    "context.",
    "context:</w>",
    "context</w>",
    "contin",
    "continu",
    "continuation,</w>",
    "continue</w>",
    "continuous</w>",
    "contri",
    "control",
    "control</w>",
    "controls</w>",
    "conv",
    "conv_",
    "conv_dates</w>",
    "conven",
    "convenien",
    "convenience</w>",
    "convention",
    "conventions</w>",
    "conver",
    "convergen",
    "conversion",
    "conversion.</w>",
    "conversions</w>",
    "convert",
    "convert(",
    "convert.</w>",
    "convert</w>",
    "convert_",
    "convert_date",
    "convert_dates</w>",
    "convert_json_",
    "convert_json_field_to_",
    "convert_json_field_to_pandas_type({'name':</w>",
    "convert_list",
    "convert_strl</w>",
    "convert_tokens_to_",
    "convert_tokens_to_id",
    "convert_year_",
    "converted,</w>",
    "converted.</w>",
    "converted</w>",
    "converter",
    "converti",
    "convertible",
    "convertible)</w>",
    "convertible</w>",
    "converts</w>",
    "coordinates</w>",
    "cop",
    "copy",
    "copy(",
    "copy()</w>",
    "copy)</w>",
    "copy,</w>",
    "copy</w>",
    "copy=",
    "copy=copy",
    "copy=copy)</w>",
    "copy=copy,</w>",
    "copy=false",
    "copy=false).",
    "copy=false)</w>",
    "cor",
    "cording</w>",
    "core.",
    "corpus</w>",
    "corr",
    "corr).replace('nan",
    "corr).replace('nan',</w>",
    "correct</w>",
    "correl",
    "correlation</w>",
    "corresponden",
    "correspondence</w>",
    "corrup",
    "corrupt</w>",
    "corrupted</w>",
    "cos(",
    "cosine</w>",
    "cost</w>",
    "coun",
    "count",
    "count()</w>",
    "count.",
    "count:</w>",
    "count</w>",
    "count_",
    "countapprox",
    "countapproxdistin",
    "countby",
    "countdistin",
    "counts)</w>",
    "counts</w>",
    "cov",
    "cov</w>",
    "cover",
    "covers</w>",
    "cow</w>",
    "cp",
    "cp</w>",
    "cre",
    "create",
    "create</w>",
    "create_",
    "created</w>",
    "createdataframe(",
    "createdataframe(rdd,</w>",
    "creates</w>",
    "creating</w>",
    "creation</w>",
    "creden",
    "credential",
    "credentials,</w>",
    "credentials.",
    "credentials</w>",
    "cregression",
    "criteri",
    "criteria</w>",
    "criterion</w>",
    "cro",
    "cross-",
    "cross</w>",
    "cs",
    "cs.",
    "cs</w>",
    "csv",
    "csv')</w>",
    "csv(",
    "csv)</w>",
    "csv</w>",
    "ct",
    "ct</w>",
    "ctly</w>",
    "cts</w>",
    "ctx._",
    "ctx._jvm.org.apache.",
    "cu",
    "cul",
    "cum",
    "cum_",
    "cumul",
    "cur",
    "curate</w>",
    "curren",
    "current",
    "current</w>",
    "current_",
    "currently,</w>",
    "currently</w>",
    "custo",
    "custom",
    "custom</w>",
    "custombusiness",
    "cut</w>",
    "cutoff_",
    "cy",
    "cython</w>",
    "cython_",
    "cythoni",
    "c{",
    "c{other",
    "c{other}.</w>",
    "c{rdd[(k,</w>",
    "c{self}</w>",
    "d",
    "d\",</w>",
    "d\"</w>",
    "d')</w>",
    "d',</w>",
    "d'</w>",
    "d(",
    "d))</w>",
    "d)</w>",
    "d,</w>",
    "d.",
    "d.</w>",
    "d::</w>",
    "d:</w>",
    "d</w>",
    "d]</w>",
    "d_",
    "d_table,</w>",
    "dat",
    "data",
    "data()</w>",
    "data))</w>",
    "data),</w>",
    "data).",
    "data).__finalize__(self)</w>",
    "data):</w>",
    "data)</w>",
    "data)=",
    "data,</w>",
    "data-",
    "data-type</w>",
    "data.",
    "data.show()</w>",
    "data:</w>",
    "data;</w>",
    "data</w>",
    "data=",
    "data[",
    "data[col",
    "data[col].",
    "data[col].max()</w>",
    "data_",
    "data_columns</w>",
    "data_iter)</w>",
    "data_to_",
    "data_to_encode.",
    "dataf",
    "dataframe",
    "dataframe's</w>",
    "dataframe(",
    "dataframe(j",
    "dataframe(jdf,</w>",
    "dataframe).</w>",
    "dataframe):</w>",
    "dataframe)</w>",
    "dataframe,</w>",
    "dataframe.",
    "dataframe.count:</w>",
    "dataframe.dropna</w>",
    "dataframe.from_",
    "dataframe.from_dict(",
    "dataframe.loc</w>",
    "dataframe.merge</w>",
    "dataframe.pivot</w>",
    "dataframe.plot</w>",
    "dataframe.query</w>",
    "dataframe.reset_",
    "dataframe.reset_index</w>",
    "dataframe.set_",
    "dataframe.set_index</w>",
    "dataframe.sort_values</w>",
    "dataframe.to_",
    "dataframe.to_hdf</w>",
    "dataframe.to_parquet</w>",
    "dataframe</w>",
    "dataframes,</w>",
    "dataframes.</w>",
    "dataframestat",
    "dataframestatfunctions.",
    "dataframe}</w>",
    "datatype,</w>",
    "datatype.",
    "datatype.simple",
    "datatype.simplestring</w>",
    "datatype</w>",
    "datatype_",
    "date",
    "date(",
    "date)</w>",
    "date,</w>",
    "date.",
    "date1</w>",
    "date</w>",
    "date_",
    "date_axis_",
    "date_axis_info</w>",
    "date_format</w>",
    "date_range(",
    "date_range</w>",
    "dateformat:</w>",
    "dateformat=",
    "dateformat=date",
    "dateformat=dateformat,</w>",
    "dateformat=none,</w>",
    "dateoffset,</w>",
    "dateoffset</w>",
    "dates)</w>",
    "dates,</w>",
    "dates.",
    "dates.</w>",
    "dates</w>",
    "datetime",
    "datetime(",
    "datetime(1997,</w>",
    "datetime-",
    "datetime-like,</w>",
    "datetime-like</w>",
    "datetime.",
    "datetime.datetime</w>",
    "datetime.time</w>",
    "datetime64",
    "datetime64[n",
    "datetime64n",
    "datetime</w>",
    "datetime_",
    "datetimearray</w>",
    "datetimeformatter</w>",
    "datetimeindex(['2017",
    "datetimeindex(['2018-01-01',</w>",
    "datetimeindex(['2018-01-31',</w>",
    "datetimeindex):</w>",
    "datetimeindex,</w>",
    "datetimeindex.</w>",
    "datetimeindex</w>",
    "dating</w>",
    "day",
    "day()</w>",
    "day</w>",
    "dayfirst</w>",
    "days",
    "days',</w>",
    "days,</w>",
    "days:</w>",
    "days</w>",
    "days=",
    "db",
    "dbapi",
    "dbapi2</w>",
    "dbname</w>",
    "dd",
    "dd</w>",
    "ddl-",
    "ddl-formatted</w>",
    "ddl</w>",
    "de",
    "de</w>",
    "deal</w>",
    "dealing</w>",
    "debug",
    "dec_",
    "decimal",
    "decimal)</w>",
    "decimal.",
    "decimal.decimal)</w>",
    "decimal=",
    "decimals</w>",
    "decision",
    "decisiontree</w>",
    "deco",
    "decoding</w>",
    "decre",
    "decreasing</w>",
    "ded::</w>",
    "ded</w>",
    "deep",
    "deep=",
    "deep=deep",
    "def",
    "def</w>",
    "defa",
    "defaul",
    "default",
    "default),</w>",
    "default).</w>",
    "default</w>",
    "default_",
    "defaultdict(",
    "defaultdict(list)</w>",
    "defaultparallelis",
    "defaultvalue",
    "define</w>",
    "defined</w>",
    "defines</w>",
    "deflate",
    "deflate).</w>",
    "degre",
    "degrees</w>",
    "del",
    "delay",
    "delaythreshold</w>",
    "delete",
    "delete(",
    "delimited</w>",
    "delta.",
    "delta</w>",
    "den",
    "deno",
    "denom</w>",
    "dense",
    "dense1.",
    "dense1.squared_distance(",
    "dense1.squared_distance(dense",
    "densevector",
    "density</w>",
    "density_",
    "dep",
    "dependen",
    "dependent.</w>",
    "depending</w>",
    "deprecation",
    "deprecationwarning)</w>",
    "depth",
    "depth</w>",
    "der",
    "deri",
    "deriv",
    "derivatives</w>",
    "desc",
    "descri",
    "describe",
    "describe()</w>",
    "describing</w>",
    "descrip",
    "description",
    "description</w>",
    "descriptor</w>",
    "desi",
    "desig",
    "designed</w>",
    "desired.</w>",
    "desired</w>",
    "destro",
    "detail",
    "detail</w>",
    "details.</w>",
    "details</w>",
    "deter",
    "determine</w>",
    "determined</w>",
    "determines</w>",
    "deterministi",
    "deterministic</w>",
    "dev",
    "dev</w>",
    "devi",
    "deviation</w>",
    "dex",
    "df",
    "df(self._j",
    "df),</w>",
    "df)</w>",
    "df,</w>",
    "df.",
    "df.age</w>",
    "df.agg(",
    "df.apply(lambda</w>",
    "df.apply(np.",
    "df.assign(",
    "df.assign(temp_",
    "df.assign(temp_f=",
    "df.clip(lower=",
    "df.collect()</w>",
    "df.create",
    "df.createor",
    "df.createorreplacetemp",
    "df.d",
    "df.describe",
    "df.describe(",
    "df.describe(include=",
    "df.dtypes</w>",
    "df.eval",
    "df.groupby",
    "df.groupby(\"id",
    "df.groupby(\"id\").",
    "df.groupby('",
    "df.groupby('a",
    "df.groupby('a').",
    "df.groupby('a').resample('",
    "df.groupby('a').resample('3t',</w>",
    "df.groupby('a')</w>",
    "df.groupby('id",
    "df.groupby('id').",
    "df.iter",
    "df.itertuple",
    "df.join(",
    "df.join(df2,</w>",
    "df.n",
    "df.nlarge",
    "df.nlargest(3,</w>",
    "df.nsmalle",
    "df.nsmallest(3,</w>",
    "df.plot.",
    "df.plot.are",
    "df.plot.bar",
    "df.quantile",
    "df.rename(",
    "df.rename(index=",
    "df.rename(index=str,</w>",
    "df.reset_",
    "df.reset_index(",
    "df.reset_index(level='class',</w>",
    "df.sample(",
    "df.select(",
    "df.select(array_",
    "df.select(df.",
    "df.select(df.age.",
    "df.select(regexp_",
    "df.select(regexp_ex",
    "df.select(regexp_extract('str",
    "df.select(regexp_extract('str',</w>",
    "df.select(to_",
    "df.select_",
    "df.set_",
    "df.sort_values(",
    "df.to_",
    "df.to_json(orien",
    "df.update(new_",
    "df.update(new_df)</w>",
    "df.with",
    "df.write.",
    "df.x",
    "df1,</w>",
    "df1.",
    "df1.combine(",
    "df1.combine(df2,</w>",
    "df2)</w>",
    "df2,</w>",
    "df2.",
    "df2.collect()</w>",
    "df2.dtypes</w>",
    "df2.name,</w>",
    "df2</w>",
    "df3.",
    "df3</w>",
    "df4.",
    "df4.na.",
    "df</w>",
    "df[",
    "df[df.",
    "df_",
    "df_0",
    "df_multi_",
    "df_multi_level_",
    "df_multi_level_cols",
    "df_multi_level_cols2.",
    "df_single_",
    "dfile.",
    "di",
    "diagonal</w>",
    "dic",
    "dict",
    "dict(",
    "dict()</w>",
    "dict(zip(",
    "dict)):</w>",
    "dict,</w>",
    "dict.",
    "dict:</w>",
    "dict</w>",
    "dict_",
    "dict__</w>",
    "dict}</w>",
    "differ",
    "differen",
    "difference(",
    "difference</w>",
    "different,</w>",
    "different.</w>",
    "different</w>",
    "different_",
    "differently</w>",
    "differs</w>",
    "dim",
    "dim=",
    "dimen",
    "dimension",
    "dimension</w>",
    "dimensional.</w>",
    "dimensional</w>",
    "dimensions</w>",
    "ding",
    "ding</w>",
    "dir",
    "dir(",
    "dir,</w>",
    "direc",
    "direct",
    "direction",
    "directly,</w>",
    "directly.</w>",
    "director",
    "directory</w>",
    "dis",
    "disable</w>",
    "disabled.</w>",
    "disk",
    "disk.</w>",
    "disk</w>",
    "diskbytesspilled</w>",
    "dispat",
    "dispatch",
    "dispatch</w>",
    "dispatch_to_",
    "dispatch_to_index_",
    "display",
    "display.",
    "display_",
    "display_width</w>",
    "displays</w>",
    "distan",
    "distance(",
    "distance</w>",
    "distin",
    "distinct</w>",
    "distingu",
    "distinguish</w>",
    "distri",
    "distributed</w>",
    "distribution",
    "distribution</w>",
    "div",
    "dlib</w>",
    "dm",
    "dm2)])</w>",
    "dn't</w>",
    "do",
    "do</w>",
    "do_",
    "do_setop(other)</w>",
    "doc",
    "doc_",
    "doc__</w>",
    "doc_span.",
    "docs.",
    "docs.python.org</w>",
    "docs</w>",
    "docte",
    "doctest:</w>",
    "documen",
    "document",
    "documentation.</w>",
    "documentation</w>",
    "documented</w>",
    "doe",
    "does",
    "does</w>",
    "doesn't</w>",
    "dog",
    "dog</w>",
    "dogs</w>",
    "doi.",
    "doi.org</w>",
    "doing</w>",
    "don",
    "don't</w>",
    "dot",
    "dot(",
    "dotnet=",
    "dotnet=1500",
    "dotnet=48",
    "dotnet=4800",
    "dou",
    "double",
    "double\",</w>",
    "double</w>",
    "dow",
    "down",
    "downcast)</w>",
    "downcast</w>",
    "download</w>",
    "downsample</w>",
    "draw</w>",
    "drawing</w>",
    "drawn</w>",
    "dri",
    "driver",
    "driver's</w>",
    "driver</w>",
    "drop",
    "drop:</w>",
    "drop_",
    "drop_duplicates</w>",
    "dropduplicate",
    "dropfieldifall",
    "dropmalformed</w>",
    "dropna",
    "dropna)</w>",
    "dropna</w>",
    "dropna=",
    "dropna=dropna)</w>",
    "dropped.",
    "dropped.</w>",
    "dropped</w>",
    "dropping</w>",
    "drops</w>",
    "ds</w>",
    "dst</w>",
    "dstre",
    "dstream",
    "dstream's</w>",
    "dstream</w>",
    "dt",
    "dt):</w>",
    "dt)</w>",
    "dt.",
    "dt.weekday()</w>",
    "dt</w>",
    "dta</w>",
    "dtype",
    "dtype(",
    "dtype)):</w>",
    "dtype))</w>",
    "dtype),</w>",
    "dtype):</w>",
    "dtype)</w>",
    "dtype,</w>",
    "dtype.",
    "dtype.categories)</w>",
    "dtype.kind</w>",
    "dtype.name</w>",
    "dtype.type,</w>",
    "dtype.type</w>",
    "dtype:</w>",
    "dtype</w>",
    "dtype=",
    "dtype='",
    "dtype='category",
    "dtype='category')</w>",
    "dtype='datetime64[ns]",
    "dtype='datetime64[ns]',</w>",
    "dtype='int64')</w>",
    "dtype='m8",
    "dtype='m8[ns]')</w>",
    "dtype='object')</w>",
    "dtype='period[m",
    "dtype='period[m]',</w>",
    "dtype='timedelta64",
    "dtype='timedelta64[ns]',</w>",
    "dtype=[('i',</w>",
    "dtype=bool)</w>",
    "dtype=dtype))</w>",
    "dtype=dtype)</w>",
    "dtype=dtype,</w>",
    "dtype=np.",
    "dtype=np.float64)</w>",
    "dtype=np.intp",
    "dtype=np.intp)</w>",
    "dtype=np.object_",
    "dtype=np.object_)</w>",
    "dtype=object)</w>",
    "dtype=self.",
    "dtype=self.dtype)</w>",
    "dtype=self.dtype,</w>",
    "dtype_",
    "dtype_mapping",
    "dtype_mapping</w>",
    "dtypes:</w>",
    "dtypes</w>",
    "due</w>",
    "dum",
    "dummie",
    "dummy.",
    "dummy.p",
    "dummy.pkl",
    "dummy.pkl\")</w>",
    "dump",
    "dump_",
    "dumps(",
    "dup",
    "dupli",
    "duplicate",
    "duplicates()</w>",
    "duplicates,</w>",
    "duplicates.</w>",
    "duplicates</w>",
    "duplication.</w>",
    "during</w>",
    "dy",
    "dynami",
    "e",
    "e))</w>",
    "e.",
    "e.,</w>",
    "e.</w>",
    "e.args</w>",
    "e.g",
    "e.g.",
    "e.g.,</w>",
    "e.g.:</w>",
    "e.g.</w>",
    "e:</w>",
    "e</w>",
    "each</w>",
    "ear",
    "earlier</w>",
    "easier</w>",
    "easy</w>",
    "ec",
    "ect</w>",
    "ect_",
    "ed",
    "ed,</w>",
    "ed-",
    "ed</w>",
    "ed_type</w>",
    "eded</w>",
    "edge",
    "edge</w>",
    "edo",
    "eff",
    "effect</w>",
    "efficien",
    "efficient</w>",
    "efficiently</w>",
    "eg.</w>",
    "eg</w>",
    "eigen",
    "either:</w>",
    "either</w>",
    "el",
    "ele",
    "elemen",
    "element",
    "element-",
    "element-wise</w>",
    "element</w>",
    "elements.</w>",
    "elements</w>",
    "ellip",
    "ellipsis</w>",
    "else:</w>",
    "else</w>",
    "em",
    "emb_",
    "embed",
    "embed.",
    "embed.weight.",
    "embedding",
    "embeddings</w>",
    "emp",
    "emplo",
    "employed</w>",
    "empty",
    "empty</w>",
    "emptyvalue:</w>",
    "en",
    "en-",
    "en-us</w>",
    "en.",
    "en.wikipedia.",
    "en.wikipedia.org</w>",
    "en</w>",
    "enabled",
    "enabled'</w>",
    "enc",
    "enco",
    "encode",
    "encode(\"",
    "encode.",
    "encoding",
    "encoding)</w>",
    "encoding,</w>",
    "encoding:</w>",
    "encoding</w>",
    "encoding=",
    "encoding=encoding,</w>",
    "encodings</w>",
    "encryp",
    "encryption</w>",
    "end",
    "end):</w>",
    "end=",
    "end='2017",
    "end='2017-01-04',</w>",
    "end=none,</w>",
    "end_",
    "end_date</w>",
    "end_index</w>",
    "end_logit=",
    "end_position</w>",
    "end_slice</w>",
    "enfor",
    "engine",
    "engine.",
    "engine.execute",
    "engine.execute(\"select</w>",
    "engine</w>",
    "enh",
    "enou",
    "enough</w>",
    "ensure</w>",
    "ensure_",
    "ensure_index(",
    "ensure_index_from_",
    "ensure_index_from_sequence",
    "ensure_int64(",
    "ensure_object(",
    "ensure_platform_",
    "ensures</w>",
    "enti",
    "entire</w>",
    "entrie",
    "entries,</w>",
    "entries</w>",
    "entry.",
    "entry</w>",
    "enumerate",
    "enumerate(",
    "envi",
    "environ",
    "environmen",
    "ep",
    "epms,</w>",
    "epoch",
    "epoch.",
    "epoch_",
    "epoch_id)</w>",
    "epoch_id</w>",
    "eq",
    "equ",
    "equal",
    "equals(",
    "equals</w>",
    "equi",
    "equivalen",
    "equivalent.</w>",
    "equivalent</w>",
    "er",
    "er</w>",
    "err",
    "error",
    "error):</w>",
    "error:</w>",
    "error_",
    "error_msg",
    "errors,</w>",
    "errors</w>",
    "errors=",
    "errors='raise",
    "errors='raise'):</w>",
    "errors=error",
    "errors=errors)</w>",
    "es.</w>",
    "es</w>",
    "esc",
    "escape",
    "escape_char",
    "escapequote",
    "escaping",
    "especially</w>",
    "essentially</w>",
    "estimate</w>",
    "estimation</w>",
    "estimator",
    "estimatorparammap",
    "et",
    "et</w>",
    "etc)</w>",
    "etc.",
    "etc.</w>",
    "ets</w>",
    "euclide",
    "euclidean</w>",
    "eval",
    "eval</w>",
    "eval_",
    "evaltype=",
    "evalu",
    "evaluate",
    "evaluate</w>",
    "evaluate_",
    "evaluates</w>",
    "evaluation.</w>",
    "evaluation</w>",
    "evaluator",
    "evaluator</w>",
    "even",
    "even</w>",
    "evenly</w>",
    "event</w>",
    "every",
    "every</w>",
    "everything</w>",
    "evol",
    "evolving.</w>",
    "ew",
    "ex",
    "exact",
    "exact</w>",
    "exactly</w>",
    "example",
    "example,</w>",
    "example.is_",
    "example.is_impossible:</w>",
    "examples)</w>",
    "examples:</w>",
    "examples</w>",
    "exce",
    "excel",
    "excel.",
    "excep",
    "except</w>",
    "exception",
    "exception).</w>",
    "exception:</w>",
    "exception_",
    "exceptions.</w>",
    "exceptions</w>",
    "exclu",
    "exclude</w>",
    "excluding</w>",
    "exec",
    "execute",
    "execute</w>",
    "executed</w>",
    "execution.",
    "execution.arrow.",
    "execution</w>",
    "exist",
    "existing",
    "existing</w>",
    "existing_",
    "exists,</w>",
    "exists.</w>",
    "exp",
    "exp(",
    "expen",
    "expensi",
    "expensive.</w>",
    "expensive</w>",
    "experimen",
    "experimental.</w>",
    "experimental</w>",
    "expli",
    "explicit</w>",
    "explicitly</w>",
    "expmean)</w>",
    "expmean</w>",
    "exponen",
    "exponent</w>",
    "expr",
    "expression",
    "expression.</w>",
    "expressions.",
    "expressions.</w>",
    "expressions</w>",
    "expstd)</w>",
    "expstd</w>",
    "exten",
    "extend_",
    "extension",
    "extension</w>",
    "extension_",
    "extensionarray</w>",
    "exter",
    "external</w>",
    "extra:</w>",
    "extra</w>",
    "extra=none):</w>",
    "extra_",
    "extract</w>",
    "extract_",
    "extracted</w>",
    "eye",
    "f",
    "f',</w>",
    "f(",
    "f(</w>",
    "f):</w>",
    "f)</w>",
    "f,</w>",
    "f-",
    "f.",
    "f.close()</w>",
    "f.log_",
    "f.log_softmax(",
    "f1",
    "f2=u'row",
    "f8",
    "f8')])</w>",
    "f:</w>",
    "f</w>",
    "f=",
    "f_",
    "fa",
    "face</w>",
    "face_",
    "face_location",
    "factori",
    "factoriz",
    "fail",
    "fail_",
    "fail_on_",
    "fail_on_stopiteration(",
    "failfast</w>",
    "fails,</w>",
    "fails</w>",
    "fal",
    "falcon",
    "falcon</w>",
    "fall",
    "fallback</w>",
    "falls</w>",
    "false",
    "false).</w>",
    "false)</w>",
    "false,</w>",
    "false])</w>",
    "false],</w>",
    "false},</w>",
    "fast</w>",
    "fastpath",
    "fastpath=true)</w>",
    "fe",
    "feat",
    "feature",
    "feature</w>",
    "feature_",
    "featuresinfo",
    "featuresubset",
    "featuresubsetstrate",
    "featuresubsetstrateg",
    "fer",
    "fer</w>",
    "feren",
    "ferred</w>",
    "fet",
    "fetchall()</w>",
    "fewer</w>",
    "ff",
    "ff.",
    "ff</w>",
    "ffect</w>",
    "ffer",
    "ffer</w>",
    "ffff",
    "ffi",
    "fficien",
    "ffill",
    "ffill:</w>",
    "ffix",
    "ffle",
    "fi",
    "fiden",
    "fie",
    "fiel",
    "field",
    "field(",
    "field</w>",
    "field_to_",
    "fieldifall",
    "fields,</w>",
    "fields.</w>",
    "fields:</w>",
    "fig",
    "fig.",
    "fig.add_",
    "fig.add_subplot(2,</w>",
    "fig.subplot",
    "fig.subplots_",
    "fig.subplots_adjust(",
    "figsize</w>",
    "figsize=",
    "figsize=fig",
    "figsize=figsize,</w>",
    "figure",
    "figure()</w>",
    "fil",
    "file",
    "file(",
    "file))</w>",
    "file).strip()</w>",
    "file):</w>",
    "file)</w>",
    "file,</w>",
    "file-",
    "file-like</w>",
    "file.",
    "file:</w>",
    "file</w>",
    "file_",
    "fileinput</w>",
    "files,</w>",
    "files.",
    "files.</w>",
    "files:</w>",
    "fill",
    "fill',</w>",
    "fill'</w>",
    "fill(",
    "fill</w>",
    "fill_",
    "fill_method</w>",
    "fill_value",
    "fill_value))</w>",
    "fill_value)</w>",
    "fill_value,</w>",
    "fill_value=",
    "fill_value=fill_value)</w>",
    "fill_value=fill_value,</w>",
    "fill_zero",
    "fillna(",
    "fillna</w>",
    "fillna_",
    "filt</w>",
    "filter",
    "filter</w>",
    "filter_",
    "finali",
    "finalize__",
    "finalize__(self)</w>",
    "find_common_type</w>",
    "fine",
    "fine-",
    "fine</w>",
    "fined</w>",
    "fines</w>",
    "fir",
    "first",
    "first</w>",
    "first_",
    "first_row",
    "fit_",
    "five</w>",
    "fix",
    "fixed-",
    "fixed-size</w>",
    "fixed-width</w>",
    "fixed</w>",
    "fixme:</w>",
    "fl",
    "flag",
    "flag</w>",
    "flags.",
    "flat",
    "flavor</w>",
    "flected</w>",
    "flet",
    "fletcher",
    "fletcher32</w>",
    "flex</w>",
    "flex_",
    "flexi",
    "flexible</w>",
    "fli",
    "flo",
    "float",
    "float,</w>",
    "float16</w>",
    "float32,</w>",
    "float32.</w>",
    "float32</w>",
    "float64",
    "float64(",
    "float64)</w>",
    "float64:",
    "float64:sparse</w>",
    "float64</w>",
    "float</w>",
    "float=",
    "float_",
    "float_dtype(",
    "float_format</w>",
    "floating",
    "floating-",
    "floating-point</w>",
    "florid",
    "florida</w>",
    "flow",
    "flow.",
    "flow:</w>",
    "flow</w>",
    "flush",
    "flush()</w>",
    "fm",
    "fmt.",
    "fmt.startswith",
    "fmt.startswith((\"</w>",
    "fmt</w>",
    "fn</w>",
    "fn_",
    "fname,</w>",
    "fname</w>",
    "fname_",
    "fo",
    "fol",
    "follo",
    "following</w>",
    "fon",
    "font",
    "font.",
    "fontsize=self.",
    "fontsize=self.font",
    "fontsize=self.fontsize)</w>",
    "foo",
    "footer",
    "for",
    "for</w>",
    "for_",
    "for_categorie",
    "for_dtype(np.",
    "force</w>",
    "force_",
    "forci",
    "forcibly</w>",
    "fore",
    "fore</w>",
    "foreach",
    "form",
    "form</w>",
    "form_",
    "forman",
    "format",
    "format(",
    "format,</w>",
    "format.",
    "format:</w>",
    "format</w>",
    "format=",
    "format=none,</w>",
    "format_",
    "formatted</w>",
    "formatter",
    "formatter</w>",
    "formatting</w>",
    "formed",
    "formed</w>",
    "forming</w>",
    "forms</w>",
    "forw",
    "forward</w>",
    "fp",
    "fr</w>",
    "frac</w>",
    "fraction",
    "fraction</w>",
    "fraction=",
    "frame",
    "frame's</w>",
    "frame,</w>",
    "frame.",
    "frame[class_column",
    "frame[col_",
    "frame[col_name]</w>",
    "frame_",
    "france</w>",
    "fre",
    "fred</w>",
    "free",
    "freedo",
    "freedom.</w>",
    "freedom</w>",
    "freq",
    "freq)</w>",
    "freq,</w>",
    "freq:</w>",
    "freq</w>",
    "freq=",
    "freq='",
    "freq='3",
    "freq='3m')</w>",
    "freq='d",
    "freq='d')</w>",
    "freq='q",
    "freq='t",
    "freq='t')</w>",
    "freq=freq)</w>",
    "freq_",
    "freq_code",
    "freq_infer</w>",
    "frequen",
    "frequenc",
    "frequency</w>",
    "frequent</w>",
    "fri",
    "friend",
    "friendly</w>",
    "fro",
    "from",
    "from</w>",
    "from_",
    "from_t",
    "from_tf:</w>",
    "fsyn",
    "ftp</w>",
    "ftypes</w>",
    "ful",
    "ful</w>",
    "fully-",
    "fully-qualified</w>",
    "fully</w>",
    "fun,</w>",
    "func",
    "func(",
    "func(\"",
    "func(iterator):</w>",
    "func):</w>",
    "func)</w>",
    "func:</w>",
    "func</w>",
    "func=",
    "func_",
    "func_n",
    "function",
    "function(</w>",
    "function(self._",
    "function).</w>",
    "function.</w>",
    "function:</w>",
    "function</w>",
    "functions,</w>",
    "functions.",
    "functions:</w>",
    "functions</w>",
    "fur",
    "further</w>",
    "future",
    "future,</w>",
    "futurewarning,</w>",
    "fw_",
    "fy</w>",
    "g",
    "g\"</w>",
    "g,</w>",
    "g.",
    "g.</w>",
    "g.nth",
    "g2,</w>",
    "g</w>",
    "g_",
    "gain</w>",
    "gamma</w>",
    "gap",
    "gap</w>",
    "gaps</w>",
    "gate",
    "gateway",
    "gateway.",
    "gaussi",
    "gaussian</w>",
    "gb",
    "gbq</w>",
    "gc",
    "gd",
    "gdp</w>",
    "ge",
    "ge</w>",
    "ged::</w>",
    "ged</w>",
    "gen",
    "gen_",
    "gene",
    "general",
    "generi",
    "generic</w>",
    "ger",
    "ger.",
    "ger</w>",
    "ges</w>",
    "get",
    "get</w>",
    "get_",
    "get_dummie",
    "get_duplicates()</w>",
    "get_group_",
    "get_indexer_",
    "get_indexer_for",
    "get_loc(",
    "get_loc</w>",
    "get_op_result_",
    "get_option",
    "get_return_",
    "get_return_value</w>",
    "get_used_",
    "get_used_memory()</w>",
    "get_values()</w>",
    "getattr",
    "getattr(",
    "getattr(other,</w>",
    "getattr(self.",
    "getattr(self._j",
    "getattr(self._jc,</w>",
    "getattr(self.attrs,</w>",
    "gether.</w>",
    "gether</w>",
    "getjavastoragelevel(",
    "getjavastoragelevel(storagelevel)</w>",
    "getnumpartition",
    "getnumpartitions()</w>",
    "getor",
    "getorcreate",
    "getorcreate()</w>",
    "getting</w>",
    "getvalue()</w>",
    "gh",
    "gh.</w>",
    "gh</w>",
    "ght</w>",
    "gi",
    "gin",
    "gine",
    "gine</w>",
    "ging",
    "ging</w>",
    "gini",
    "gith",
    "githu",
    "github.",
    "github.com</w>",
    "give</w>",
    "given",
    "given,</w>",
    "given.</w>",
    "given</w>",
    "gives</w>",
    "glo",
    "glob",
    "global",
    "globals,</w>",
    "glom().collect()</w>",
    "gmen",
    "go",
    "goes</w>",
    "going</w>",
    "goo",
    "good,</w>",
    "good</w>",
    "goog",
    "google",
    "google-",
    "google-auth",
    "google-auth-",
    "google-auth-oauthlib.readthedocs.io</w>",
    "google.",
    "google.auth",
    "google.auth.",
    "google.oauth",
    "google.oauth2.",
    "google.oauth2.service_ac",
    "google.oauth2.service_account.",
    "google.oauth2.service_account.credentials.",
    "google.oauth2.service_account.credentials.from_",
    "google.oauth2.service_account.credentials.from_service_ac",
    "google.oauth2.service_account.credentials.from_service_account_",
    "google</w>",
    "google_",
    "google_auth_",
    "google_auth_oauthlib.",
    "google_auth_oauthlib.flow.",
    "google_auth_oauthlib.flow.html</w>",
    "google_auth_oauthlib.flow.in",
    "google_auth_oauthlib.flow.installed",
    "google_auth_oauthlib.flow.installedapp",
    "gor",
    "gorith",
    "gos.",
    "got:</w>",
    "got</w>",
    "gp",
    "gpr",
    "gpt2",
    "gr",
    "grad_",
    "grad_nor",
    "gradien",
    "gradient",
    "gradient</w>",
    "gradientboo",
    "graphi",
    "gre",
    "greater</w>",
    "green",
    "gress</w>",
    "grid",
    "grid</w>",
    "gridsize</w>",
    "group",
    "group(",
    "group,</w>",
    "group._",
    "group._v_",
    "group</w>",
    "group_",
    "group_index</w>",
    "group_info</w>",
    "groupby",
    "groupeddata.",
    "grouper",
    "grouper,</w>",
    "grouper.",
    "grouper</w>",
    "groupers</w>",
    "grouping",
    "groupings)</w>",
    "groupings,</w>",
    "groupings</w>",
    "groups,</w>",
    "groups.</w>",
    "groups</w>",
    "groupsort_",
    "gso",
    "gso_",
    "gt",
    "gu",
    "guaran",
    "guarante",
    "guarantee</w>",
    "guaranteed</w>",
    "guarantees</w>",
    "guide</w>",
    "gw.",
    "gzip",
    "gzip',</w>",
    "h",
    "h)</w>",
    "h,</w>",
    "h5",
    "h5',</w>",
    "h:",
    "h:mm",
    "h:mm:",
    "h:mm:ss.",
    "h</w>",
    "hack</w>",
    "had</w>",
    "hado",
    "hadoop",
    "hadoop-",
    "hadoop-supported</w>",
    "hadoop.io.",
    "hadoop</w>",
    "hal",
    "half-",
    "half</w>",
    "ham</w>",
    "hand",
    "handle",
    "handle</w>",
    "handle_",
    "handled</w>",
    "handler</w>",
    "handles</w>",
    "handling.</w>",
    "handling</w>",
    "hap",
    "hard",
    "hard</w>",
    "has",
    "has</w>",
    "has_",
    "hasattr",
    "hasattr(",
    "hasattr(ax,</w>",
    "hasattr(m,</w>",
    "hash",
    "hash_",
    "hash_key,</w>",
    "hash_key</w>",
    "hashable",
    "hashable</w>",
    "hasnans:</w>",
    "hassummary:</w>",
    "have</w>",
    "have_",
    "having</w>",
    "hdf",
    "hdf('data.",
    "hdf('data.h5',</w>",
    "hdf.",
    "hdf5</w>",
    "hdf</w>",
    "hdfs,</w>",
    "hdfs:</w>",
    "hdfs</w>",
    "hdfstore</w>",
    "he",
    "head",
    "head</w>",
    "head_",
    "header",
    "header,</w>",
    "header=",
    "header=header,</w>",
    "headers</w>",
    "heap",
    "heap,</w>",
    "heap[",
    "heap[0]</w>",
    "heapif",
    "heapq.",
    "heapreplace</w>",
    "heig",
    "height</w>",
    "height=",
    "height=8",
    "height=80),</w>",
    "height=85),</w>",
    "height=85)]</w>",
    "hel",
    "help</w>",
    "helper</w>",
    "here",
    "here,</w>",
    "hex",
    "hexagon",
    "hexagonal</w>",
    "hexagons</w>",
    "hi",
    "hidden_",
    "hierarchi",
    "hierarchical</w>",
    "hig",
    "high",
    "highe",
    "highest</w>",
    "highest_",
    "highest_protocol.</w>",
    "highlight_",
    "highly</w>",
    "hist</w>",
    "histo",
    "histog",
    "histogram</w>",
    "ho",
    "hog",
    "hold_",
    "holiday_",
    "holiday_dates</w>",
    "homo",
    "homogene",
    "homogeneous</w>",
    "hoo",
    "hori",
    "horiz",
    "horizon",
    "horizontal</w>",
    "host",
    "hour",
    "hours</w>",
    "how",
    "how)</w>",
    "how,</w>",
    "how</w>",
    "how=",
    "how=how,</w>",
    "howe",
    "however,</w>",
    "however</w>",
    "ht",
    "ht</w>",
    "html",
    "html</w>",
    "http",
    "http:</w>",
    "http_",
    "http_status</w>",
    "https:</w>",
    "hu",
    "human</w>",
    "hy",
    "hyd",
    "i",
    "i',</w>",
    "i):</w>",
    "i)</w>",
    "i,</w>",
    "i.",
    "i.e.,</w>",
    "i.e.</w>",
    "i.i.",
    "i.i.d.</w>",
    "i8",
    "i8'),</w>",
    "i8')</w>",
    "i:</w>",
    "i</w>",
    "i=",
    "i]</w>",
    "ibase.",
    "ibase.default_",
    "ibm</w>",
    "icewe",
    "id",
    "id\",</w>",
    "id':</w>",
    "id'</w>",
    "id))</w>",
    "id):</w>",
    "id)</w>",
    "id,</w>",
    "id</w>",
    "id=",
    "idden_",
    "ide</w>",
    "idempo",
    "idempoten",
    "identi",
    "identical</w>",
    "identif",
    "identifying</w>",
    "ids)</w>",
    "ids,</w>",
    "ids</w>",
    "idx",
    "idx.",
    "idx.set_name",
    "idx.slice_",
    "idx1.",
    "idx1</w>",
    "idx2)</w>",
    "idx2</w>",
    "idx</w>",
    "idx]</w>",
    "ie",
    "ie10</w>",
    "iee",
    "ieee",
    "ieee</w>",
    "iel",
    "ierarchi",
    "if",
    "if</w>",
    "if_",
    "if_exist",
    "ig",
    "igen",
    "igh",
    "ignore",
    "ignore_",
    "ignore_exception_",
    "ignore_exception_detail</w>",
    "ignore_index</w>",
    "ignore_index=true)</w>",
    "ignored",
    "ignored).</w>",
    "ignorele",
    "ignoreleading",
    "ignoreleadingwhitespace:</w>",
    "ignoretrailing",
    "ignoretrailingwhitespace:</w>",
    "ignoring</w>",
    "ij</w>",
    "il",
    "ill",
    "illa</w>",
    "im",
    "ima",
    "image",
    "image,</w>",
    "image_",
    "imal</w>",
    "imate</w>",
    "imately</w>",
    "img",
    "img:</w>",
    "img_",
    "immedi",
    "immediately</w>",
    "imple",
    "implemen",
    "implementation.</w>",
    "implementation</w>",
    "implemented</w>",
    "impli",
    "implicit</w>",
    "implicitly</w>",
    "impor",
    "import(",
    "import</w>",
    "importerror",
    "importerror(\"",
    "importerror:</w>",
    "impossible:</w>",
    "in",
    "in-",
    "in-place.</w>",
    "in-place</w>",
    "in.</w>",
    "in</w>",
    "inc</w>",
    "inches</w>",
    "inclu",
    "include",
    "include,</w>",
    "include</w>",
    "include=",
    "include_",
    "including</w>",
    "inclusi",
    "inclusive.</w>",
    "incomparable</w>",
    "incompati",
    "incompatible</w>",
    "incorrect</w>",
    "incre",
    "increase</w>",
    "increasing</w>",
    "incremen",
    "incremental</w>",
    "ind",
    "ind</w>",
    "inden",
    "indent_",
    "independen",
    "independent</w>",
    "index",
    "index')</w>",
    "index(",
    "index(['2017",
    "index(['2018-01-01',</w>",
    "index(['2018-01-31',</w>",
    "index([1,</w>",
    "index(multiindex).</w>",
    "index)):</w>",
    "index))</w>",
    "index),</w>",
    "index):</w>",
    "index)</w>",
    "index,</w>",
    "index.",
    "index.</w>",
    "index._",
    "index._simple_new",
    "index:</w>",
    "index;</w>",
    "index</w>",
    "index=",
    "index=['a',</w>",
    "index=['cat',</w>",
    "index=['falcon',</w>",
    "index=[1,</w>",
    "index=i)</w>",
    "index=index)</w>",
    "index=index,</w>",
    "index=left.index,</w>",
    "index=pd.datetime",
    "index=true)</w>",
    "index]</w>",
    "index_",
    "index_col",
    "index_col,</w>",
    "index_col=",
    "index_col=index_col,</w>",
    "index_from_",
    "index_label",
    "index_like</w>",
    "index_names,</w>",
    "index_names</w>",
    "indexable",
    "indexable</w>",
    "indexables</w>",
    "indexe",
    "indexed",
    "indexed</w>",
    "indexedrow",
    "indexer",
    "indexer(",
    "indexer):</w>",
    "indexer)</w>",
    "indexer,</w>",
    "indexer</w>",
    "indexer]</w>",
    "indexer_",
    "indexers,</w>",
    "indexers.</w>",
    "indexers</w>",
    "indexes)</w>",
    "indexes,</w>",
    "indexes.</w>",
    "indexes:</w>",
    "indexes</w>",
    "indexes[0]</w>",
    "indexing</w>",
    "indexslice</w>",
    "indi",
    "indic",
    "indicating</w>",
    "indice",
    "indices)</w>",
    "indices,</w>",
    "indices.</w>",
    "indices_",
    "individ",
    "individu",
    "individual</w>",
    "ine",
    "inf",
    "infer",
    "infer</w>",
    "infer_",
    "infer_datetime_",
    "infer_datetime_format</w>",
    "infer_dtype_",
    "infer_nrows</w>",
    "inferen",
    "inference</w>",
    "inferred</w>",
    "inferred_",
    "inferred_type</w>",
    "infers</w>",
    "inferschema</w>",
    "infl",
    "influence</w>",
    "info",
    "info,</w>",
    "info</w>",
    "info_",
    "info_axis</w>",
    "info_axis_",
    "info_columns</w>",
    "ing",
    "ing</w>",
    "ini",
    "init__.</w>",
    "initi",
    "initial",
    "initiali",
    "initializ",
    "initialization",
    "initialize</w>",
    "initialmodel",
    "initialpositionin",
    "inn",
    "inner",
    "inner-",
    "inner-most</w>",
    "inplace",
    "inplace()</w>",
    "inplace)</w>",
    "inplace,</w>",
    "inplace=",
    "inplace=inplace)</w>",
    "inplace=inplace,</w>",
    "inplace_",
    "inpu",
    "input(",
    "input</w>",
    "input_",
    "input_id",
    "input_kwargs</w>",
    "input_mask,</w>",
    "input_mask</w>",
    "inser",
    "insert</w>",
    "inserted</w>",
    "inserting</w>",
    "insertion</w>",
    "inside</w>",
    "inspect.",
    "install</w>",
    "installed</w>",
    "instan",
    "instance,</w>",
    "instance.</w>",
    "instance</w>",
    "instances</w>",
    "instanti",
    "instantiate</w>",
    "inste",
    "instead",
    "instead.",
    "instead.\",</w>",
    "instead.</w>",
    "instead;</w>",
    "instead</w>",
    "instruction",
    "int",
    "int\").collect()</w>",
    "int\")</w>",
    "int(",
    "int),</w>",
    "int,",
    "int,</w>",
    "int16</w>",
    "int32",
    "int32</w>",
    "int64",
    "int64')</w>",
    "int64(",
    "int64):</w>",
    "int64index([1,</w>",
    "int64index</w>",
    "int8</w>",
    "int</w>",
    "inte",
    "integ",
    "integer",
    "integer\",</w>",
    "integer).</w>",
    "integer-",
    "integers.</w>",
    "integers</w>",
    "integertype()).",
    "integertype())</w>",
    "integertype</w>",
    "inten",
    "intent.</w>",
    "inter",
    "intercep",
    "interface</w>",
    "internal</w>",
    "interpol",
    "interpolate</w>",
    "interpolation",
    "interpolation)</w>",
    "interpolation</w>",
    "interpolation=",
    "interpolation=interpolation)</w>",
    "interpret</w>",
    "interpreted</w>",
    "intersect</w>",
    "intersection</w>",
    "interval",
    "interval</w>",
    "interval[",
    "interval[float64",
    "interval[float64]):</w>",
    "intro",
    "introd",
    "introduced</w>",
    "ints</w>",
    "inv",
    "invalid</w>",
    "invalid_",
    "inver",
    "inverse</w>",
    "invo",
    "invoked,</w>",
    "invoked</w>",
    "invol",
    "involved</w>",
    "invreduce",
    "io.",
    "io.excel.",
    "io.hdf.",
    "io.parquet.",
    "io.parquet.engine</w>",
    "io.sql.",
    "io.sql.method</w>",
    "io</w>",
    "ip",
    "ipedi",
    "ipv",
    "is",
    "is(",
    "is)</w>",
    "is,</w>",
    "is.",
    "is.</w>",
    "is:</w>",
    "is</w>",
    "is=",
    "is]</w>",
    "is_",
    "is_bool_dtype(",
    "is_categorical_dtype(",
    "is_categorical_dtype(dtype):</w>",
    "is_datetime64",
    "is_datetime64_",
    "is_datetime64_dtype(",
    "is_datetime64tz_dtype(",
    "is_datetime64tz_dtype(dtype):</w>",
    "is_dict_",
    "is_dict_like(",
    "is_dtype_",
    "is_dtype_equal",
    "is_dtype_equal(self.dtype,</w>",
    "is_extension_",
    "is_extension_array_dtype(",
    "is_extension_array_dtype(dtype):</w>",
    "is_file_",
    "is_float_dtype(",
    "is_hashable",
    "is_integer",
    "is_integer(",
    "is_list_",
    "is_list_like(",
    "is_list_like</w>",
    "is_ne",
    "is_nested_",
    "is_nested_list_",
    "is_object_dtype(",
    "is_object_dtype(dtype):</w>",
    "is_period_dtype(",
    "is_scalar",
    "is_scalar(",
    "is_set",
    "is_timedelta64",
    "is_timedelta64_dtype(",
    "is_timedelta64_dtype(dtype):</w>",
    "is_withreplacement_",
    "ise</w>",
    "ish</w>",
    "isin",
    "isinstance(",
    "isinstance(arg,</w>",
    "isinstance(arr,</w>",
    "isinstance(ax,</w>",
    "isinstance(c,</w>",
    "isinstance(col,</w>",
    "isinstance(data,</w>",
    "isinstance(datatype,</w>",
    "isinstance(dtype,</w>",
    "isinstance(indexer,</w>",
    "isinstance(level,</w>",
    "isinstance(obj,</w>",
    "isinstance(other,</w>",
    "isinstance(schema,</w>",
    "isinstance(subset,</w>",
    "isinstance(to_replace,</w>",
    "isn't</w>",
    "isna(",
    "iso",
    "iso86",
    "iso8601</w>",
    "isotoni",
    "isotonicregression",
    "issub",
    "issubclass(",
    "issubclass(dtype.type,</w>",
    "issubclass(v",
    "issubclass(vtype,</w>",
    "issue",
    "issue\"</w>",
    "ist",
    "isting</w>",
    "isto",
    "it",
    "it's</w>",
    "it</w>",
    "itable</w>",
    "ite",
    "item",
    "item):</w>",
    "item)</w>",
    "items',</w>",
    "items'</w>",
    "items</w>",
    "itemsize</w>",
    "iter",
    "iter)</w>",
    "iterable",
    "iterable)</w>",
    "iterable,</w>",
    "iteration",
    "iterations:</w>",
    "iterator",
    "iterator):</w>",
    "iterator)</w>",
    "iterator:</w>",
    "itertools.",
    "itertools.ch",
    "ither:</w>",
    "ither</w>",
    "its</w>",
    "itself.</w>",
    "itself</w>",
    "ix",
    "ix',</w>",
    "j",
    "j)</w>",
    "j,</w>",
    "j</w>",
    "j]</w>",
    "j_",
    "jan",
    "janu",
    "january</w>",
    "jav",
    "java",
    "java(",
    "java(sc,</w>",
    "java.",
    "java.lan",
    "java.time.",
    "java.time.format.",
    "java.time.format.datetimeformatter</w>",
    "java_",
    "java_import(",
    "java_import(gateway.",
    "java_import(gateway.jvm,</w>",
    "java_model.",
    "java_model</w>",
    "java_stage.get",
    "java_storage_",
    "java_storage_level.",
    "javafunction(</w>",
    "javastoragelevel(",
    "javastring",
    "javastringlength",
    "javaud",
    "jc)</w>",
    "jc</w>",
    "jd",
    "jdb",
    "jdbc</w>",
    "jdf</w>",
    "ji",
    "jira_re",
    "jo",
    "joh",
    "john</w>",
    "join",
    "join(",
    "jor",
    "jrdd,</w>",
    "jrdd.",
    "jrdd</w>",
    "jrdd_de",
    "jrdd_deserializer)</w>",
    "jrdd_deserializer</w>",
    "json",
    "json(",
    "json(orien",
    "json_",
    "jsonformat",
    "jsonlines.",
    "jsonlines.org</w>",
    "jsparksession.",
    "ju</w>",
    "juli",
    "jump</w>",
    "jupy",
    "jupyter</w>",
    "just</w>",
    "justif",
    "jv",
    "jvm,</w>",
    "jvm.",
    "jvm.java.lan",
    "jvm.java.lang.",
    "jvm.org.apache.",
    "jvm</w>",
    "k",
    "k))</w>",
    "k)</w>",
    "k,</w>",
    "k-",
    "k-1",
    "k-1}.</w>",
    "k-means</w>",
    "k.</w>",
    "k0</w>",
    "k1</w>",
    "k2</w>",
    "k3</w>",
    "k4</w>",
    "k5</w>",
    "k:</w>",
    "k</w>",
    "k=",
    "k]</w>",
    "k_",
    "kasi",
    "ke",
    "ke</w>",
    "ke_",
    "ked,</w>",
    "ked</w>",
    "keep",
    "keeps</w>",
    "kele",
    "ken",
    "kend",
    "kendall</w>",
    "kes</w>",
    "key",
    "key\",</w>",
    "key))</w>",
    "key):</w>",
    "key)</w>",
    "key,</w>",
    "key-",
    "key-value</w>",
    "key</w>",
    "key=",
    "key=key)</w>",
    "key=key,</w>",
    "key=lambda</w>",
    "key]</w>",
    "keyarr</w>",
    "keyclass:</w>",
    "keyconverter",
    "keys()):</w>",
    "keys())</w>",
    "keys()</w>",
    "keys))</w>",
    "keys):</w>",
    "keys)</w>",
    "keys,</w>",
    "keys.</w>",
    "keys:</w>",
    "keys</w>",
    "keys=",
    "keyw",
    "keyword</w>",
    "key}</w>",
    "kg</w>",
    "kids</w>",
    "kind",
    "kind)</w>",
    "kind,</w>",
    "kind</w>",
    "kind=",
    "kind=kind)</w>",
    "kind=kind,</w>",
    "kine",
    "kinesis</w>",
    "king</w>",
    "kl",
    "kline</w>",
    "kmeans",
    "knn</w>",
    "knn_cl",
    "knn_clf</w>",
    "kno",
    "know",
    "known</w>",
    "known_",
    "ko",
    "koala</w>",
    "kon",
    "ks</w>",
    "kur",
    "kv",
    "kw",
    "kwarg",
    "kwarg(",
    "kwargs))</w>",
    "kwargs):</w>",
    "kwargs)</w>",
    "kwargs.",
    "kwargs:</w>",
    "kwargs</w>",
    "kwd",
    "kwds):</w>",
    "kwds)</w>",
    "kwds.",
    "l",
    "l)</w>",
    "l,</w>",
    "l-",
    "l.",
    "l1</w>",
    "l:</w>",
    "l</w>",
    "l[0]</w>",
    "l_",
    "la",
    "la</w>",
    "lab",
    "label",
    "label))</w>",
    "label,</w>",
    "label.</w>",
    "label:</w>",
    "label=",
    "label_",
    "labeled",
    "labeledpo",
    "labeledpoint(",
    "labeledpoint(0.0,</w>",
    "labeledpoint(1.0,</w>",
    "labels):</w>",
    "labels)</w>",
    "labels,</w>",
    "labels.",
    "labels.</w>",
    "labels:</w>",
    "labels</w>",
    "labels=",
    "labels=none,</w>",
    "labels}</w>",
    "lamb",
    "lambd",
    "lambda,</w>",
    "lambda:</w>",
    "lambda</w>",
    "lambda_",
    "lan",
    "land</w>",
    "langu",
    "language</w>",
    "large",
    "largest</w>",
    "last):</w>",
    "last</w>",
    "last_",
    "lastel",
    "lastelt</w>",
    "later</w>",
    "latest</w>",
    "latex</w>",
    "layer",
    "layer_",
    "layer_str</w>",
    "ld",
    "le",
    "le',</w>",
    "le,</w>",
    "le.",
    "le</w>",
    "le_",
    "lead</w>",
    "leading</w>",
    "leaf</w>",
    "learn</w>",
    "learning</w>",
    "least</w>",
    "leave</w>",
    "lec",
    "led</w>",
    "lef",
    "left",
    "left),</w>",
    "left,</w>",
    "left.",
    "left.columns)</w>",
    "left.index,</w>",
    "left</w>",
    "left_",
    "left_indexer,</w>",
    "left_indexer</w>",
    "leg",
    "legacy</w>",
    "legs</w>",
    "leli",
    "len",
    "len(",
    "len(args)</w>",
    "len(cols)</w>",
    "len(input_id",
    "len(input_ids)</w>",
    "len(level)</w>",
    "len(obj)</w>",
    "len(other):</w>",
    "len(rdd.",
    "len(rdd.take",
    "len(self.",
    "len(self.blocks)</w>",
    "len(seq",
    "len(seq)</w>",
    "len(set(",
    "len(tokens_",
    "len(with_con",
    "len))</w>",
    "len)</w>",
    "len,</w>",
    "len</w>",
    "len]</w>",
    "leng",
    "length",
    "length):</w>",
    "length,</w>",
    "length.</w>",
    "length:</w>",
    "length</w>",
    "length=",
    "length]</w>",
    "lengths</w>",
    "lengthstring",
    "ler</w>",
    "les</w>",
    "less</w>",
    "let",
    "let's</w>",
    "lev",
    "level",
    "level(s)</w>",
    "level))</w>",
    "level):</w>",
    "level)</w>",
    "level,</w>",
    "level.",
    "level.</w>",
    "level</w>",
    "level=",
    "level='class',</w>",
    "level=0)</w>",
    "level=1)</w>",
    "level=level)</w>",
    "level=level,</w>",
    "level_",
    "level_number(",
    "level_number(level)</w>",
    "levels)</w>",
    "levels,</w>",
    "levels.</w>",
    "levels:</w>",
    "levels</w>",
    "leven",
    "levenshte",
    "lex",
    "lexi",
    "lexical</w>",
    "lexico",
    "lexicographi",
    "lexicographically.</w>",
    "lh",
    "li",
    "lib",
    "lib.",
    "lib.maybe_convert_",
    "lib.maybe_convert_object",
    "lib.path</w>",
    "lib</w>",
    "libfreq",
    "libfreqs._",
    "libfrequencie",
    "libfrequencies.get_",
    "libfrequencies.get_freq_code",
    "library.</w>",
    "library</w>",
    "libsv",
    "libsvm</w>",
    "lier</w>",
    "life",
    "lifespan",
    "lifespan</w>",
    "lifespan},</w>",
    "light_",
    "like",
    "like(",
    "like(arg,</w>",
    "like)</w>",
    "like,</w>",
    "like.</w>",
    "like</w>",
    "likeli",
    "likelihoo",
    "likelihood</w>",
    "likes.</w>",
    "likes</w>",
    "lim",
    "limbs</w>",
    "limit(invalid,</w>",
    "limit)</w>",
    "limit,</w>",
    "limit</w>",
    "limit=",
    "limit=limit)</w>",
    "limit=limit,</w>",
    "limit_",
    "limit_are",
    "limit_direction",
    "limited</w>",
    "lin",
    "linal",
    "linalg.",
    "linalg</w>",
    "line",
    "line(",
    "line)</w>",
    "line,</w>",
    "line-",
    "line-delimited</w>",
    "line_",
    "linear</w>",
    "lines)</w>",
    "lines,</w>",
    "lines.",
    "lines.</w>",
    "linesep",
    "linesep:</w>",
    "linesep=",
    "linesep=linesep",
    "linesep=linesep)</w>",
    "ling.</w>",
    "ling</w>",
    "link",
    "link</w>",
    "lion</w>",
    "lip",
    "list",
    "list(",
    "list('abc",
    "list('abcd",
    "list('abcd'))</w>",
    "list('ba",
    "list)):</w>",
    "list)</w>",
    "list,</w>",
    "list-",
    "list-like.</w>",
    "list-like</w>",
    "list-likes.</w>",
    "list-likes</w>",
    "list-of-",
    "list_",
    "ll",
    "ll</w>",
    "lm</w>",
    "lm_",
    "lm_label_",
    "lo",
    "load",
    "load(",
    "load</w>",
    "load_",
    "load_from_",
    "load_tf_",
    "load_tf_weights_",
    "loaded</w>",
    "loading</w>",
    "loads</w>",
    "lob",
    "loc",
    "loc(",
    "loc</w>",
    "loc[",
    "local",
    "local.",
    "local</w>",
    "local_",
    "locali",
    "localize</w>",
    "localized</w>",
    "location",
    "location</w>",
    "locations</w>",
    "locomo",
    "locomotion</w>",
    "locs</w>",
    "log",
    "log(",
    "log-",
    "log_",
    "logger.",
    "logger.info",
    "logger.info(\"",
    "logger.info(\"loading</w>",
    "logger.info(</w>",
    "logger.warning",
    "logging</w>",
    "logi",
    "logic</w>",
    "logical</w>",
    "logical_",
    "logisti",
    "logisticregression",
    "logit(",
    "logit</w>",
    "logit=",
    "logper",
    "logprob_",
    "logprob_i</w>",
    "lon",
    "long",
    "long,</w>",
    "longtable</w>",
    "loo",
    "look",
    "lookup",
    "lookup(",
    "lookup</w>",
    "loose",
    "loss</w>",
    "low",
    "low-level</w>",
    "lowe",
    "lower",
    "lower().",
    "lower()</w>",
    "lower-",
    "lowest</w>",
    "lr",
    "lr_",
    "lr_sched",
    "lr_scheduled</w>",
    "ls</w>",
    "lsuffix</w>",
    "lvals,</w>",
    "lvals</w>",
    "lvl",
    "lvl</w>",
    "lx",
    "lxml</w>",
    "ly",
    "ly,</w>",
    "ly.</w>",
    "ly</w>",
    "lying</w>",
    "lz",
    "lz4,</w>",
    "l{",
    "l{org.apache.",
    "m",
    "m\",</w>",
    "m')</w>",
    "m',</w>",
    "m(",
    "m().collect()</w>",
    "m):</w>",
    "m)</w>",
    "m,</w>",
    "m-</w>",
    "m.",
    "m.</w>",
    "m2</w>",
    "m8",
    "m8[ns]</w>",
    "m:</w>",
    "m</w>",
    "m_",
    "m_type</w>",
    "ma",
    "ma</w>",
    "maj",
    "maj_",
    "maj_spacing",
    "maj_spacing)</w>",
    "major",
    "make</w>",
    "make_",
    "make_block",
    "make_invalid_",
    "make_invalid_op('__",
    "makes</w>",
    "mal",
    "mal</w>",
    "malformed</w>",
    "mali",
    "mall",
    "malle",
    "malta</w>",
    "mam",
    "mammal",
    "mammal',</w>",
    "mammal</w>",
    "man",
    "man</w>",
    "manager",
    "manager</w>",
    "manager_",
    "manu",
    "map",
    "map(",
    "map(_convert_to_vector",
    "map(_convert_to_vector),</w>",
    "map(lambda</w>",
    "map(len,</w>",
    "map({'a':</w>",
    "map)</w>",
    "map.",
    "map:</w>",
    "map</w>",
    "map[",
    "map[pretrained_model_name_or_",
    "map[pretrained_model_name_or_path]</w>",
    "map_",
    "mappartition",
    "mappartitions(",
    "mapped</w>",
    "mapper",
    "mapper,</w>",
    "mapper</w>",
    "mapping",
    "mapping</w>",
    "maps</w>",
    "maptype(",
    "mapvalues(lambda</w>",
    "mar",
    "margin",
    "margins</w>",
    "mark",
    "mark</w>",
    "mas",
    "mask",
    "mask)</w>",
    "mask,</w>",
    "mask.",
    "mask.all():</w>",
    "mask.any():</w>",
    "mask</w>",
    "mask=",
    "mask=mask)</w>",
    "mask]</w>",
    "masked_",
    "masked_lm_",
    "mat",
    "mat.",
    "mat.shape</w>",
    "match",
    "match</w>",
    "matched</w>",
    "matching</w>",
    "math:</w>",
    "mati",
    "matplot",
    "matplotlib.",
    "matplotlib.axe",
    "matplotlib.axes.",
    "matplotlib.axes.axes</w>",
    "matplotlib.axessubplot</w>",
    "matplotlib.axis.axes</w>",
    "matplotlib.py",
    "matplotlib.pyplot.",
    "matplotlib.pyplot.hist</w>",
    "matplotlib.pyplot</w>",
    "matplotlib</w>",
    "matri",
    "matrice",
    "matrices.",
    "matrices.dense",
    "matrices.dense(3,</w>",
    "matrix",
    "matrix(",
    "matrix()</w>",
    "matrix(rows)</w>",
    "matrix</w>",
    "matrix_",
    "max",
    "max(",
    "max()</w>",
    "max(heap,</w>",
    "max)</w>",
    "max</w>",
    "max_",
    "max_fname_",
    "max_len)</w>",
    "max_num_",
    "max_row",
    "max_seq_",
    "max_seq_items</w>",
    "max_seq_length</w>",
    "max_speed</w>",
    "maxbin",
    "maxbins:</w>",
    "maxchar",
    "maxcharsper",
    "maxdepth",
    "maxim",
    "maximum</w>",
    "maxiteration",
    "maxiterations:</w>",
    "maxmal",
    "maxmalformed",
    "maxmalformedlogper",
    "maxpattern",
    "maxpatternlength=",
    "maxv</w>",
    "may",
    "maybe</w>",
    "maybe_",
    "maybe_convert_",
    "maybe_down",
    "maybe_promo",
    "maybe_promote",
    "maybe_upcast_",
    "maybe_upcast_putmask",
    "mdfile.",
    "me",
    "me:</w>",
    "me</w>",
    "mean",
    "mean()</w>",
    "mean)</w>",
    "mean,</w>",
    "mean</w>",
    "means",
    "means</w>",
    "measure</w>",
    "mechanis",
    "mechanism</w>",
    "medi",
    "median</w>",
    "medium</w>",
    "meet</w>",
    "meets</w>",
    "mem",
    "member",
    "membership</w>",
    "memo",
    "memoi",
    "memor",
    "memory",
    "memory()</w>",
    "memory</w>",
    "memory_",
    "memory_and_",
    "memory_usage",
    "memory_usage(",
    "mems)</w>",
    "men",
    "mename",
    "ment.</w>",
    "ment</w>",
    "mer",
    "merge",
    "merge</w>",
    "merge_",
    "mergeschema</w>",
    "merging</w>",
    "mess",
    "message",
    "message</w>",
    "metadata</w>",
    "meth",
    "mething</w>",
    "metho",
    "method",
    "method(new_method",
    "method,</w>",
    "method</w>",
    "method=",
    "method=method,</w>",
    "method_",
    "method_series</w>",
    "methods.</w>",
    "metri",
    "metrics</w>",
    "mg",
    "mgr.",
    "mgr</w>",
    "mgr_",
    "mgr_locs</w>",
    "mi",
    "mial",
    "mic</w>",
    "micro",
    "micro-",
    "micro-batch</w>",
    "microseconds</w>",
    "mid",
    "midnight</w>",
    "min",
    "min(",
    "min</w>",
    "min_",
    "min_itemsize</w>",
    "min_period",
    "min_periods,</w>",
    "min_periods</w>",
    "minal_",
    "minated</w>",
    "mination()</w>",
    "minator</w>",
    "mine</w>",
    "mined</w>",
    "mines</w>",
    "minim",
    "minimum</w>",
    "minimum_",
    "mininfo",
    "mininfog",
    "mininstan",
    "mininstance",
    "ministi",
    "minor",
    "minpartition",
    "minsuppor",
    "minsupport=",
    "minute",
    "minute)</w>",
    "mis",
    "mismatch",
    "mismatch\"</w>",
    "mismatch</w>",
    "missi",
    "missing",
    "missing)</w>",
    "missing_",
    "mit",
    "mit</w>",
    "mix",
    "mixed,</w>",
    "mixed</w>",
    "mixed_type</w>",
    "mixing</w>",
    "mixture</w>",
    "mk",
    "ml",
    "ml</w>",
    "mllib",
    "mllib-",
    "mllib-local</w>",
    "mlutils.",
    "mlutils</w>",
    "mm",
    "mmetri",
    "mo",
    "mobile</w>",
    "mod",
    "mode",
    "mode(",
    "mode)</w>",
    "mode,</w>",
    "mode=",
    "mode=mode,</w>",
    "mode=none,</w>",
    "model",
    "model\",</w>",
    "model(",
    "model)</w>",
    "model,</w>",
    "model.",
    "model.__class__.__",
    "model.__class__.__name__,</w>",
    "model.numtree",
    "model.numtrees()</w>",
    "model.predict(",
    "model.predict(rdd",
    "model.predict(rdd).collect()</w>",
    "model.predict(sparsevector(2,</w>",
    "model.total",
    "model.totalnumnode",
    "model.totalnumnodes()</w>",
    "model:</w>",
    "model</w>",
    "model_",
    "model_save_",
    "models</w>",
    "modif",
    "modifi",
    "modification.</w>",
    "modifying</w>",
    "modname</w>",
    "module",
    "module,</w>",
    "module_",
    "module_ho",
    "moment</w>",
    "mon",
    "monkey",
    "monkey</w>",
    "monotoni",
    "monotonic:</w>",
    "monotonic</w>",
    "monotonically</w>",
    "month",
    "month.</w>",
    "month_",
    "months</w>",
    "months_",
    "mor",
    "most</w>",
    "mostly</w>",
    "move,</w>",
    "move</w>",
    "moved</w>",
    "moving</w>",
    "mp",
    "mpor",
    "ms",
    "ms,</w>",
    "ms.",
    "ms</w>",
    "msg",
    "msg</w>",
    "mt</w>",
    "much</w>",
    "mul",
    "multi",
    "multi-",
    "multi-index</w>",
    "multi_",
    "multicolumn</w>",
    "multiindex",
    "multiindex(",
    "multiindex(level",
    "multiindex(levels=[['cobra',</w>",
    "multiindex).</w>",
    "multiindex):</w>",
    "multiindex,</w>",
    "multiindex.",
    "multiindex.</w>",
    "multiindex.from_",
    "multiindex</w>",
    "multiple",
    "multiples,</w>",
    "multirow",
    "multirow</w>",
    "must</w>",
    "mutu",
    "mv</w>",
    "my",
    "my</w>",
    "myla</w>",
    "n",
    "n\",</w>",
    "n\"</w>",
    "n')</w>",
    "n'</w>",
    "n't</w>",
    "n(",
    "n(mean,</w>",
    "n):</w>",
    "n)</w>",
    "n,</w>",
    "n-",
    "n-1</w>",
    "n.",
    "n.</w>",
    "n:</w>",
    "n</w>",
    "n=",
    "n_",
    "n_best_",
    "na",
    "na(",
    "na.",
    "na</w>",
    "na_",
    "na_action</w>",
    "na_f",
    "na_option</w>",
    "na_position",
    "na_position</w>",
    "na_rep",
    "na_rep=",
    "na_sentinel</w>",
    "na_value</w>",
    "na_value_",
    "na_value_for_dtype(np.",
    "na_values,</w>",
    "na_values</w>",
    "nai",
    "nail",
    "naive</w>",
    "nal",
    "nal</w>",
    "name",
    "name\",</w>",
    "name',</w>",
    "name':</w>",
    "name(",
    "name))</w>",
    "name),</w>",
    "name).",
    "name).</w>",
    "name):</w>",
    "name)</w>",
    "name,</w>",
    "name.",
    "name2,</w>",
    "name:</w>",
    "name</w>",
    "name=",
    "name=arg.",
    "name=arg.name)</w>",
    "name=name)</w>",
    "name=name,</w>",
    "name=res_",
    "name=u'alice",
    "name=u'alice'),</w>",
    "name=u'alice')]</w>",
    "name=u'alice',</w>",
    "name=u'bob",
    "name=u'bob')]</w>",
    "name=u'bob',</w>",
    "name],</w>",
    "name]</w>",
    "name_",
    "name__",
    "name__))</w>",
    "name__)</w>",
    "name__,</w>",
    "name__</w>",
    "name_or_",
    "named",
    "namedtemporar",
    "namedtemporary",
    "namedtemporaryfile(",
    "namedtemporaryfile(delete",
    "namedtemporaryfile(delete=true)</w>",
    "namedtemporaryfile</w>",
    "namedtuple</w>",
    "names):</w>",
    "names)</w>",
    "names,</w>",
    "names.</w>",
    "names:</w>",
    "names</w>",
    "names=",
    "names[i]</w>",
    "names]</w>",
    "names_",
    "name}",
    "name}</w>",
    "name}__",
    "nami",
    "nan",
    "nan's</w>",
    "nan,</w>",
    "nan-",
    "nan-mask</w>",
    "nan.</w>",
    "nan</w>",
    "nan],</w>",
    "nan]</w>",
    "nano",
    "nanop",
    "nanops.",
    "nanops.nan",
    "nanops</w>",
    "nanosecond",
    "nans:</w>",
    "nans</w>",
    "nap",
    "nat</w>",
    "native_types(self,</w>",
    "natively,</w>",
    "nature</w>",
    "naur",
    "nauru</w>",
    "nb</w>",
    "nbest_",
    "nchannel",
    "nd",
    "ndarray",
    "ndarray.",
    "ndarray</w>",
    "ndarray[",
    "ndarray[bool",
    "ndarray[bool],</w>",
    "ndarray[bool]</w>",
    "ndarray[dtype",
    "ndarray[dtype]</w>",
    "ndarray[object]</w>",
    "ndarray_",
    "ndarray_values</w>",
    "ndim",
    "ndim:</w>",
    "ndim</w>",
    "ndim=self.",
    "ne",
    "nearest</w>",
    "nece",
    "necess",
    "necessarily</w>",
    "necessary.</w>",
    "necessary</w>",
    "ned</w>",
    "need",
    "need</w>",
    "needed</w>",
    "needs_",
    "needs_i8",
    "neg",
    "neg_",
    "neg_sample",
    "negative",
    "negative:</w>",
    "negative</w>",
    "neigh",
    "neighbor",
    "neighbors</w>",
    "ner",
    "ness</w>",
    "nest_",
    "nested</w>",
    "net=",
    "neutral</w>",
    "never</w>",
    "new",
    "new_",
    "new_arg_",
    "new_axes</w>",
    "new_axis</w>",
    "new_blocks</w>",
    "new_categories</w>",
    "new_data.",
    "new_data</w>",
    "new_df</w>",
    "new_dtype</w>",
    "new_index,</w>",
    "new_index</w>",
    "new_java_",
    "new_java_obj",
    "new_key</w>",
    "new_labels</w>",
    "new_mems)</w>",
    "new_method",
    "new_mgr_",
    "new_mgr_locs</w>",
    "new_obj</w>",
    "new_shape</w>",
    "new_values,</w>",
    "new_values.",
    "new_values</w>",
    "newlinalg.",
    "newly</w>",
    "nex",
    "next",
    "next(",
    "next</w>",
    "next_",
    "next_date</w>",
    "nextsentence</w>",
    "ngroup",
    "ngroups)</w>",
    "ni",
    "nice</w>",
    "night</w>",
    "ning</w>",
    "nlevels</w>",
    "nn",
    "nn</w>",
    "nn_cl",
    "no",
    "no-",
    "no-copy</w>",
    "no</w>",
    "no_",
    "node",
    "node,</w>",
    "node-like</w>",
    "nodes),</w>",
    "nodes).</w>",
    "nomial",
    "non",
    "non-",
    "non-deterministic</w>",
    "non-empty</w>",
    "non-na</w>",
    "non-nan</w>",
    "non-none</w>",
    "non-null</w>",
    "non-numeric</w>",
    "non-string,</w>",
    "non-string</w>",
    "non-unique</w>",
    "non-zero</w>",
    "non_",
    "non_index_",
    "nondeterministi",
    "none",
    "none\")</w>",
    "none))</w>",
    "none),</w>",
    "none).</w>",
    "none):</w>",
    "none)</w>",
    "none)])</w>",
    "none,</w>",
    "none:</w>",
    "none</w>",
    "none]</w>",
    "nonexisten",
    "nonexistent</w>",
    "none},</w>",
    "none}</w>",
    "nonzero",
    "nonzero()",
    "noq",
    "noqa</w>",
    "nor",
    "nore",
    "noring</w>",
    "norm</w>",
    "normal",
    "normal</w>",
    "normali",
    "normalize",
    "normalize</w>",
    "normalize=",
    "normalize=normalize",
    "normalize=normalize,</w>",
    "normalize_",
    "normalize_whitespace</w>",
    "normalvectorrdd(sc,</w>",
    "not",
    "not).</w>",
    "not</w>",
    "not_",
    "not_none",
    "not_none(</w>",
    "note",
    "note::</w>",
    "note:</w>",
    "noteboo",
    "notebook.</w>",
    "noti",
    "notice</w>",
    "notimplemen",
    "notimplementederror",
    "notimplementederror(\"",
    "notimplementederror(</w>",
    "notna(",
    "now</w>",
    "np.",
    "np.apply_along_",
    "np.arange(",
    "np.arange(len(",
    "np.array(",
    "np.array</w>",
    "np.array_",
    "np.array_equal",
    "np.as",
    "np.asarray(",
    "np.atleast_2",
    "np.bool_",
    "np.concatenate",
    "np.datetime64",
    "np.dot(",
    "np.dtype,</w>",
    "np.dtype</w>",
    "np.empty",
    "np.err",
    "np.errstate(",
    "np.errstate(all",
    "np.errstate(all='ignore'):</w>",
    "np.float64</w>",
    "np.int",
    "np.lin",
    "np.minim",
    "np.nan",
    "np.nan),</w>",
    "np.nan)],</w>",
    "np.nan,</w>",
    "np.nan</w>",
    "np.nan])</w>",
    "np.ndarray",
    "np.ndarray)):</w>",
    "np.ndarray):</w>",
    "np.object_",
    "np.object_:</w>",
    "np.one",
    "np.putmask",
    "np.putmask(result,</w>",
    "np.random.",
    "np.random.choi",
    "np.random.choice(['a',</w>",
    "np.random.rand(",
    "np.random.rand(3),</w>",
    "np.tile",
    "np.timedelta64",
    "np.where(",
    "np.zero",
    "np</w>",
    "npoints</w>",
    "nr</w>",
    "nrow",
    "nrows</w>",
    "ns,</w>",
    "ns_",
    "ns_to_",
    "ns_to_s_",
    "nth",
    "nul",
    "null",
    "null:</w>",
    "null</w>",
    "null_",
    "nullable",
    "nullable=",
    "nulls</w>",
    "nullvalue:</w>",
    "num",
    "num_",
    "num_ar",
    "num_arms</w>",
    "num_format_",
    "num_format_str</w>",
    "num_leg",
    "num_legs</w>",
    "num_specimen_",
    "num_specimen_seen</w>",
    "num_wing",
    "num_wings</w>",
    "num_wings=",
    "num_wings=0)</w>",
    "num_wings=2)</w>",
    "number",
    "number(",
    "number</w>",
    "number_",
    "number_of_",
    "number_of_time",
    "number_of_times_to_",
    "number_of_times_to_up",
    "number_of_times_to_upsample:</w>",
    "numbers.</w>",
    "numbers</w>",
    "numclasse",
    "numclasses:</w>",
    "numcols,</w>",
    "numcols:</w>",
    "numeri",
    "numeric",
    "numeric</w>",
    "numeric_",
    "numeric_data()</w>",
    "numeric_only",
    "numericle",
    "numnode",
    "numpart",
    "numpartition",
    "numpartitions)</w>",
    "numpartitions,</w>",
    "numpartitions:</w>",
    "numpartitions=none):</w>",
    "numpartitions=none,</w>",
    "numpartsto",
    "numpy",
    "numpy's</w>",
    "numpy.",
    "numpy.argsort</w>",
    "numpy.array</w>",
    "numpy.asarray</w>",
    "numpy.bus",
    "numpy.busday",
    "numpy.busdaycalendar</w>",
    "numpy.dtype,</w>",
    "numpy.dtype</w>",
    "numpy.find_common_type</w>",
    "numpy.ndarray.",
    "numpy.ndarray.arg",
    "numpy.ndarray</w>",
    "numpy.take</w>",
    "numrow",
    "numrows,</w>",
    "numrows:</w>",
    "numtree",
    "numtrees:</w>",
    "nv.",
    "nv.validate_",
    "nv.validate_min",
    "nv.validate_minmax_",
    "nv.validate_minmax_axis(axis)</w>",
    "nv</w>",
    "nyears</w>",
    "o",
    "o)</w>",
    "o,</w>",
    "o.",
    "o</w>",
    "o_",
    "oauth",
    "oauthlib.",
    "oauthlib.readthedocs.io</w>",
    "ob",
    "obj",
    "obj))</w>",
    "obj):</w>",
    "obj)</w>",
    "obj,</w>",
    "obj.",
    "obj.co_",
    "obj:</w>",
    "obj</w>",
    "obj=",
    "obj=obj)</w>",
    "obj[",
    "objec",
    "object",
    "object')</w>",
    "object's</w>",
    "object(",
    "object).</w>",
    "object)</w>",
    "object-",
    "object-dtype</w>",
    "object</w>",
    "object]</w>",
    "object_",
    "object_dtype(",
    "objectblock</w>",
    "objects,</w>",
    "objects.</w>",
    "objs,</w>",
    "objs</w>",
    "obs_",
    "obs_group_",
    "obser",
    "observ",
    "observation</w>",
    "observations.</w>",
    "observations</w>",
    "oc",
    "occur",
    "occurren",
    "ocv",
    "of",
    "of-",
    "of</w>",
    "of_",
    "off",
    "offset",
    "offset,</w>",
    "offset-",
    "offset-aliases</w>",
    "offset.</w>",
    "offset</w>",
    "offsets</w>",
    "often</w>",
    "ok</w>",
    "ol",
    "old</w>",
    "old_",
    "old_arg_",
    "ols.",
    "omit",
    "omitted</w>",
    "omitting</w>",
    "on",
    "on',</w>",
    "on't</w>",
    "on-",
    "on-disk</w>",
    "on.</w>",
    "on</w>",
    "on_",
    "once,</w>",
    "once.</w>",
    "once</w>",
    "one",
    "one\",</w>",
    "one,</w>",
    "one-",
    "one-to-",
    "one-to-one</w>",
    "one.</w>",
    "one</w>",
    "one_",
    "onethi",
    "only",
    "only</w>",
    "onto</w>",
    "oo",
    "op",
    "op(",
    "op('__",
    "op(op,</w>",
    "op):</w>",
    "op)</w>",
    "op,</w>",
    "op</w>",
    "op_",
    "op_desc",
    "op_name(",
    "op_name(op,</w>",
    "op_name,</w>",
    "op_name</w>",
    "op_result_",
    "open",
    "open(",
    "operation",
    "operations.</w>",
    "operator",
    "operator.",
    "operator.add)</w>",
    "operator.add,</w>",
    "ople.json')</w>",
    "opname</w>",
    "opposite</w>",
    "ops.r",
    "ops</w>",
    "opstr",
    "opt",
    "optimi",
    "optimiz",
    "optimization</w>",
    "option",
    "option</w>",
    "optional",
    "optional,</w>",
    "optional[",
    "options):</w>",
    "options)</w>",
    "options.",
    "options:</w>",
    "options</w>",
    "optlevel</w>",
    "or",
    "or</w>",
    "or_",
    "orc.",
    "orc</w>",
    "orc_",
    "ord</w>",
    "order",
    "order.</w>",
    "order:</w>",
    "order</w>",
    "order='f",
    "order_",
    "order_categories</w>",
    "ordered",
    "ordered</w>",
    "ordered=",
    "ordered=true)</w>",
    "ordereddict()</w>",
    "ordereddict</w>",
    "orders</w>",
    "ordinates</w>",
    "org",
    "org.",
    "org.apache.",
    "org</w>",
    "organi",
    "orien",
    "orient.",
    "orient.lower().",
    "orient.lower().startswith",
    "orient</w>",
    "orig",
    "orig_",
    "original_",
    "original_df</w>",
    "os.",
    "os.path",
    "os.path.",
    "os.path.exist",
    "os.path.join(",
    "os.path.join(build_path,</w>",
    "os.path.join(temp",
    "os.path.join(tempdir,</w>",
    "os.path.join(tempfile.mkdtemp(),</w>",
    "os.remo",
    "os.remove(\".</w>",
    "os</w>",
    "oth",
    "other",
    "other))</w>",
    "other):</w>",
    "other)</w>",
    "other,</w>",
    "other.",
    "other._",
    "other._j",
    "other.ndim</w>",
    "other:</w>",
    "other=",
    "otherwise",
    "otherwise(",
    "otherwise,</w>",
    "otherwise.</w>",
    "otherwise</w>",
    "other}</w>",
    "ou",
    "oul",
    "ould</w>",
    "our",
    "our</w>",
    "ous,</w>",
    "ous</w>",
    "ous_type</w>",
    "ously</w>",
    "out",
    "out,</w>",
    "out-",
    "out-of-",
    "out</w>",
    "out[",
    "out_",
    "outer",
    "outof",
    "outofbounds",
    "outside</w>",
    "over",
    "over(",
    "over(window",
    "overflow</w>",
    "overl",
    "overlap",
    "overlapping</w>",
    "overwrite",
    "overwrite</w>",
    "ow",
    "own</w>",
    "p",
    "p\",</w>",
    "p,</w>",
    "p.",
    "p.apply(lambda</w>",
    "p</w>",
    "p_",
    "p_limit(invalid,</w>",
    "pa.",
    "pa</w>",
    "pack",
    "package",
    "pad</w>",
    "padding</w>",
    "pai",
    "pair",
    "pairs.</w>",
    "pairs:</w>",
    "pairs</w>",
    "pairwise</w>",
    "pand",
    "panda</w>",
    "pandas",
    "pandas-",
    "pandas-dev</w>",
    "pandas-docs</w>",
    "pandas-gb",
    "pandas-gbq.readthedocs.io</w>",
    "pandas-gbq</w>",
    "pandas.",
    "pandas.api.",
    "pandas.api.extension",
    "pandas.api.types</w>",
    "pandas.arrays.",
    "pandas.core.",
    "pandas.core.algorithms</w>",
    "pandas.core.arrays</w>",
    "pandas.core.computation.",
    "pandas.core.nanops</w>",
    "pandas.core.reshape.",
    "pandas.core.reshape.concat</w>",
    "pandas.dataframe</w>",
    "pandas.io.",
    "pandas.options.",
    "pandas.options.display.",
    "pandas.options.display.max_",
    "pandas.options.display.max_info_columns</w>",
    "pandas.pydata.org</w>",
    "pandas.series</w>",
    "pandas.to_datetime</w>",
    "pandas</w>",
    "pandas_",
    "pandas_dtype(",
    "pandas_dtype(dtype)</w>",
    "pandas_dtype</w>",
    "pandas_sql</w>",
    "pandas_type({'name':</w>",
    "pandas_udf(\"",
    "pandas_udf(\"integer\",</w>",
    "pandas_udf,</w>",
    "pandas_udf</w>",
    "pandasarray</w>",
    "pandassql_",
    "pandassql_builder(",
    "pandasudf",
    "pandasudftype.",
    "pandasudftype.grouped_",
    "pandasudftype.grouped_agg",
    "pandasudftype.grouped_agg)</w>",
    "pandasudftype.grouped_map)</w>",
    "pandasudftype.scalar)</w>",
    "pandasudftype</w>",
    "panel",
    "panel_",
    "panel_idx</w>",
    "panels)</w>",
    "panels</w>",
    "par",
    "paral",
    "paralleli",
    "parallelis",
    "parallelism",
    "parallelism</w>",
    "parallelize",
    "param",
    "param.",
    "param.parent</w>",
    "param:</w>",
    "param</w>",
    "param]</w>",
    "parame",
    "parameter",
    "parameter</w>",
    "parameters.</w>",
    "parameters:</w>",
    "parameters</w>",
    "parammap",
    "paren",
    "parent</w>",
    "parent_",
    "parque",
    "parquet(",
    "parquet(os.path.join(tempfile.mkdtemp(),</w>",
    "parquet.",
    "parquet</w>",
    "parro",
    "parrot</w>",
    "parse",
    "parse('</w>",
    "parse</w>",
    "parse_",
    "parse_date",
    "parse_dates,</w>",
    "parse_dates=",
    "parse_dates=parse_dates,</w>",
    "parse_dates_safe(",
    "parse_dates_safe(dates,</w>",
    "parsed</w>",
    "parseexception",
    "parseexception:...</w>",
    "parser",
    "parser=",
    "parsing.</w>",
    "parsing</w>",
    "part",
    "part</w>",
    "parti",
    "partial",
    "partial(",
    "particul",
    "particular</w>",
    "partition",
    "partition.</w>",
    "partitionby",
    "partitionfunc)</w>",
    "partitionfunc=",
    "partitionfunc=portable_hash",
    "partitionfunc=portable_hash):</w>",
    "partitions,</w>",
    "partitions.</w>",
    "partitions</w>",
    "partsscanned</w>",
    "party</w>",
    "pas",
    "passed</w>",
    "pat",
    "path",
    "path(",
    "path(s).</w>",
    "path):</w>",
    "path)</w>",
    "path,</w>",
    "path.",
    "path.</w>",
    "path:</w>",
    "path</w>",
    "path=none,</w>",
    "path]</w>",
    "path_or_bu",
    "path_or_buf</w>",
    "paths</w>",
    "path}</w>",
    "patter",
    "pattern",
    "pd.",
    "pd.array(['a',</w>",
    "pd.array([1,</w>",
    "pd.c",
    "pd.categorical",
    "pd.categorical(",
    "pd.categorical([\"a\",</w>",
    "pd.categorical(['a',</w>",
    "pd.categorical(list('ba",
    "pd.categorical(list('baabc",
    "pd.concat([",
    "pd.concat([df1,</w>",
    "pd.concat([s1,</w>",
    "pd.cro",
    "pd.crosstab",
    "pd.dataframe(",
    "pd.dataframe(data=",
    "pd.dataframe(np.random.rand",
    "pd.dataframe(np.random.randn(",
    "pd.dataframe({\"foo",
    "pd.dataframe({\"foo\":</w>",
    "pd.dataframe({'",
    "pd.dataframe({'num_leg",
    "pd.dataframe({'num_legs':</w>",
    "pd.dataframe({'speed",
    "pd.dataframe({'speed':</w>",
    "pd.dataframe({</w>",
    "pd.date_",
    "pd.date_range(",
    "pd.date_range('",
    "pd.date_range('1</w>",
    "pd.date_range('2018-04-0",
    "pd.date_range('2018-04-09',</w>",
    "pd.date_range(start='1</w>",
    "pd.date_range(start='2017-01-01',</w>",
    "pd.datetime",
    "pd.get_dummie",
    "pd.get_dummies(pd.series(",
    "pd.multiindex.from_",
    "pd.multiindex.from_prod",
    "pd.nat</w>",
    "pd.period('2017",
    "pd.period</w>",
    "pd.period_",
    "pd.read_",
    "pd.read_pickle(\".</w>",
    "pd.serie",
    "pd.timestamp</w>",
    "pd.to_",
    "pd.wide_to_long(df,</w>",
    "pd</w>",
    "pdf.",
    "pdf</w>",
    "pdf[",
    "pe",
    "pear",
    "pear</w>",
    "pearson",
    "pearson</w>",
    "pec",
    "ped.",
    "ped.</w>",
    "ped</w>",
    "pend",
    "pend(",
    "pend</w>",
    "people.json')</w>",
    "per",
    "per,</w>",
    "per</w>",
    "percen",
    "percentage</w>",
    "perform</w>",
    "performan",
    "performance.</w>",
    "performance</w>",
    "performant.</w>",
    "performed</w>",
    "performing</w>",
    "performs</w>",
    "peri",
    "perio",
    "period",
    "period('2017",
    "period</w>",
    "period[",
    "period_",
    "period_dtype(",
    "periodarray</w>",
    "periods)</w>",
    "periods,</w>",
    "periods.</w>",
    "periods</w>",
    "periods=",
    "periods=4,</w>",
    "periods=5,</w>",
    "perm",
    "permissi",
    "permissive</w>",
    "persist</w>",
    "persisten",
    "persistence.</w>",
    "person",
    "person</w>",
    "ph",
    "phy",
    "physi",
    "physical</w>",
    "pi",
    "pick",
    "pickle",
    "pickle(",
    "pickle(\".</w>",
    "pickle.",
    "pickle.default_",
    "pickle.default_protocol</w>",
    "pickle.html</w>",
    "pickle_",
    "pickled_",
    "pickling</w>",
    "piece</w>",
    "ping",
    "ping</w>",
    "pivo",
    "pivot</w>",
    "pl",
    "pla",
    "place",
    "place.</w>",
    "place</w>",
    "placemen",
    "placement",
    "placement)</w>",
    "placement,</w>",
    "placement=",
    "placement=placement)</w>",
    "plat",
    "platform</w>",
    "platform_",
    "ple",
    "please</w>",
    "pli",
    "plied,</w>",
    "plied</w>",
    "plies</w>",
    "plo",
    "plot",
    "plot.",
    "plot::</w>",
    "plot</w>",
    "plotted</w>",
    "plotting.",
    "plotting</w>",
    "plt.",
    "plt</w>",
    "ply",
    "po",
    "point",
    "point</w>",
    "points</w>",
    "points[",
    "pol",
    "popul",
    "population",
    "por",
    "port",
    "port</w>",
    "portable_",
    "portable_hash",
    "portland</w>",
    "pos</w>",
    "pos]</w>",
    "posi",
    "posite</w>",
    "positi",
    "position",
    "position</w>",
    "positionin",
    "positions</w>",
    "positive",
    "positive</w>",
    "possi",
    "possibility</w>",
    "possible",
    "possible,</w>",
    "possible.</w>",
    "possible</w>",
    "possibly</w>",
    "post</w>",
    "post_",
    "post_processing",
    "potential</w>",
    "potentially</w>",
    "pprint_",
    "pprint_thing",
    "pprint_thing()</w>",
    "pr</w>",
    "prag",
    "pragma",
    "pragma:</w>",
    "pre",
    "pre-",
    "pre-trained</w>",
    "pre_",
    "pre_processing",
    "preceding</w>",
    "precision",
    "precision=",
    "predict(",
    "prediction",
    "predictions:</w>",
    "predictions</w>",
    "prefer",
    "prefers",
    "prefix",
    "prefix=",
    "prep_",
    "presc",
    "prescri",
    "prescribed</w>",
    "presen",
    "present,</w>",
    "present</w>",
    "preser",
    "preserve",
    "preserve</w>",
    "preserve_",
    "preserve_nans</w>",
    "preservespartitioning",
    "preservespartitioning=false):</w>",
    "preservespartitioning=true)</w>",
    "press</w>",
    "pret",
    "pret</w>",
    "preted</w>",
    "pretrained_",
    "pretrained_model_",
    "pretrained_model_archive_",
    "pretrained_model_name_or_",
    "pretrained_model_name_or_path,</w>",
    "pretrained_model_name_or_path:</w>",
    "pretrained_model_name_or_path</w>",
    "pretty</w>",
    "prev_",
    "prev_rowspan</w>",
    "preven",
    "prevent</w>",
    "previ",
    "previous</w>",
    "previously</w>",
    "pri",
    "price</w>",
    "primiti",
    "primitive",
    "primitive</w>",
    "primitives",
    "primitivesasstring",
    "print(",
    "print(model)</w>",
    "print_",
    "prior</w>",
    "priv",
    "private_",
    "private_key</w>",
    "pro",
    "prob",
    "probabilities</w>",
    "probability</w>",
    "proce",
    "process</w>",
    "process_",
    "processed</w>",
    "processes</w>",
    "processing",
    "prod",
    "produce</w>",
    "produced</w>",
    "product</w>",
    "progress</w>",
    "proj",
    "proj_",
    "project</w>",
    "project_",
    "projs[i]</w>",
    "promo",
    "prop",
    "propagate</w>",
    "proper",
    "properly</w>",
    "propertie",
    "properties:</w>",
    "property</w>",
    "proto",
    "protocol",
    "protocol.</w>",
    "protocol</w>",
    "protocol=",
    "prov",
    "prox",
    "psy",
    "psycop",
    "psycopg2,</w>",
    "pt</w>",
    "ptr",
    "pu",
    "publi",
    "public</w>",
    "pur",
    "purpo",
    "purpose</w>",
    "pus</w>",
    "put",
    "putmask",
    "py",
    "py._",
    "py._path.",
    "py._path.local.",
    "py._path.local.local",
    "py4",
    "py4j",
    "py4jjava",
    "py_",
    "py_stage</w>",
    "pyarrow</w>",
    "pydata.",
    "pydata.org</w>",
    "pyrolite",
    "pyrolite,</w>",
    "pyspark.",
    "pyspark.ml",
    "pyspark.ml.",
    "pyspark.ml.linalg.",
    "pyspark.mllib.",
    "pyspark.mllib.linalg.",
    "pyspark.mllib.linalg</w>",
    "pyspark.mllib.tree</w>",
    "pyspark.mllib.util</w>",
    "pyspark.sql.",
    "pyspark.sql.dataframe</w>",
    "pyspark.sql.functions.",
    "pyspark.sql.functions.pandas_udf</w>",
    "pyspark.sql.functions</w>",
    "pyspark.sql.groupeddata.",
    "pyspark.sql.types.",
    "pyspark.sql.types.datatype</w>",
    "pyspark.sql.types.structtype</w>",
    "pyspark.sql.types.timestamptype</w>",
    "pyspark.sql.types</w>",
    "pyspark.sql.utils</w>",
    "pyspark.sql</w>",
    "pyspark</w>",
    "pytables</w>",
    "python",
    "python.",
    "python.org</w>",
    "python</w>",
    "pythoneval",
    "pythonevaltype.",
    "pythonevaltype.sql_",
    "pythonrdd.",
    "pytor",
    "pytorch</w>",
    "pytorch_",
    "pytorch_model.",
    "pytorch_model.bin</w>",
    "q",
    "q',</w>",
    "q,</w>",
    "q.",
    "q.readthedocs.io</w>",
    "q1',</w>",
    "q1</w>",
    "q2',</w>",
    "q:</w>",
    "q</w>",
    "qas_",
    "qr</w>",
    "qu",
    "qual",
    "qualified</w>",
    "quan",
    "quantile",
    "quar",
    "quarter",
    "que",
    "quen",
    "quer",
    "querie",
    "queries,</w>",
    "query",
    "query.</w>",
    "query</w>",
    "queue",
    "queue</w>",
    "qui",
    "quick",
    "quicksort',</w>",
    "quo",
    "quote",
    "quote_",
    "quoted",
    "quoted</w>",
    "quotedfield",
    "quoting",
    "quoting</w>",
    "quoting=none,</w>",
    "r",
    "r\"\"\"</w>",
    "r\",</w>",
    "r\"</w>",
    "r'(</w>",
    "r'</w>",
    "r(",
    "r)</w>",
    "r,</w>",
    "r.",
    "r:</w>",
    "r</w>",
    "r_",
    "ra",
    "ra_re",
    "rac</w>",
    "raction",
    "raction</w>",
    "radien",
    "raffe",
    "rag",
    "raise",
    "raise</w>",
    "raise_",
    "raise_missing",
    "raise_missing=true.</w>",
    "ram</w>",
    "rame",
    "ran",
    "rance</w>",
    "rando",
    "random",
    "random.",
    "random</w>",
    "random_",
    "random_state",
    "random_state</w>",
    "random_udf</w>",
    "randomrdds.",
    "randomrdds.uniform",
    "randomrdds.uniformrdd(sc,</w>",
    "range",
    "range(",
    "range(10,</w>",
    "range(5),</w>",
    "range(5,</w>",
    "range,</w>",
    "range</w>",
    "range_",
    "rangeindex(",
    "rangeindex:</w>",
    "rangeindex</w>",
    "rank",
    "rank</w>",
    "ranks</w>",
    "rap",
    "rary.</w>",
    "rary</w>",
    "rati",
    "ratio",
    "ravel",
    "ravel()</w>",
    "raw</w>",
    "raw_",
    "rawing</w>",
    "rawn</w>",
    "rd",
    "rd-",
    "rd-party</w>",
    "rd</w>",
    "rdd",
    "rdd's</w>",
    "rdd(",
    "rdd(sc,</w>",
    "rdd):</w>",
    "rdd,</w>",
    "rdd.",
    "rdd.map(lambda</w>",
    "rdd.treeaggregate",
    "rdd.treeaggregate(0,</w>",
    "rdd.treereduce(",
    "rdd.treereduce(add,</w>",
    "rdd2.",
    "rdd2</w>",
    "rdd</w>",
    "rdd[(k,</w>",
    "rdd_",
    "rdd_de",
    "rdds);</w>",
    "rdds.",
    "re",
    "re-",
    "re.",
    "re.compile",
    "re</w>",
    "reached</w>",
    "read",
    "read</w>",
    "read_",
    "read_csv</w>",
    "read_sql</w>",
    "read_sql_",
    "read_sql_query</w>",
    "reader.",
    "real</w>",
    "really</w>",
    "reason</w>",
    "rec",
    "rec.",
    "rec.array([('a',</w>",
    "rece",
    "recei",
    "receive</w>",
    "received</w>",
    "receives</w>",
    "receiving</w>",
    "recen",
    "recent</w>",
    "reco",
    "recog",
    "recogni",
    "recognized</w>",
    "record",
    "records,</w>",
    "records.</w>",
    "recur",
    "recursi",
    "recursive",
    "recursive</w>",
    "recursively.</w>",
    "red",
    "red.</w>",
    "red</w>",
    "red_",
    "reduce",
    "reduce_c_",
    "reduce_c_function</w>",
    "reducebykey</w>",
    "reducefunc</w>",
    "reducing</w>",
    "reduction</w>",
    "ref</w>",
    "refer</w>",
    "referen",
    "reference</w>",
    "referred</w>",
    "reflected</w>",
    "reg",
    "regard",
    "regardless</w>",
    "regul",
    "regular</w>",
    "regulari",
    "regularization</w>",
    "regularizer</w>",
    "reindex(",
    "reindex</w>",
    "reindex_",
    "reindexed</w>",
    "reindexing</w>",
    "rel",
    "relative</w>",
    "rele",
    "release.</w>",
    "relev",
    "relevant</w>",
    "remo",
    "remote</w>",
    "removal_",
    "removals</w>",
    "remove</w>",
    "remove_",
    "remove_un",
    "remove_unused_categories</w>",
    "removed,</w>",
    "removed.</w>",
    "removed</w>",
    "removes</w>",
    "ren",
    "rename",
    "rename_",
    "reorder</w>",
    "reorder_categories</w>",
    "reordered</w>",
    "rep",
    "repe",
    "repeat</w>",
    "repeated.</w>",
    "repeated</w>",
    "replacemen",
    "replacement:</w>",
    "replacements</w>",
    "replacetemp",
    "repr</w>",
    "represen",
    "representable</w>",
    "representation.</w>",
    "representation</w>",
    "representations</w>",
    "represented</w>",
    "representing</w>",
    "represents</w>",
    "req",
    "requ",
    "reque",
    "requested</w>",
    "requi",
    "require",
    "require</w>",
    "require_",
    "require_minimum_",
    "require_minimum_pandas_",
    "require_minimum_pandas_version()</w>",
    "require_minimum_pandas_version</w>",
    "required</w>",
    "requires</w>",
    "res",
    "res</w>",
    "res_",
    "res_values</w>",
    "reser",
    "reserved</w>",
    "reshape",
    "reshape(",
    "reshol",
    "resol",
    "resolved</w>",
    "resolved_archive_",
    "resolvers</w>",
    "resolves</w>",
    "respecti",
    "respective</w>",
    "respectively.</w>",
    "respon",
    "response_time</w>",
    "resul",
    "result",
    "result's</w>",
    "result.",
    "result.astype(dtype)</w>",
    "result.ndim</w>",
    "result[",
    "result[0",
    "result[0][0]</w>",
    "result_",
    "result_index</w>",
    "result_name</w>",
    "result_type='broad",
    "result_type='broadcast",
    "ret",
    "retrie",
    "retrieve</w>",
    "return",
    "return.</w>",
    "return</w>",
    "return_",
    "return_indexer",
    "returns:</w>",
    "returns</w>",
    "returntype:</w>",
    "returntype</w>",
    "returntype=",
    "rever",
    "reverse",
    "reverse=",
    "rgb",
    "rh",
    "rhs</w>",
    "ri",
    "rick</w>",
    "rid",
    "rid</w>",
    "riend",
    "rig",
    "right",
    "right</w>",
    "right_",
    "right_indexer</w>",
    "rip",
    "rit.",
    "rit.out_",
    "rite",
    "rite</w>",
    "riteri",
    "rkey</w>",
    "rn",
    "rng</w>",
    "ro",
    "road",
    "rol",
    "rolite",
    "roll_",
    "roll_func</w>",
    "rolling</w>",
    "ron",
    "roo",
    "root</w>",
    "rop",
    "ror",
    "rot,</w>",
    "rot</w>",
    "rot=",
    "rot=0)</w>",
    "rotation</w>",
    "rou",
    "roup",
    "row",
    "row(",
    "row(age=",
    "row(age=5,</w>",
    "row(id=",
    "row(name='alice",
    "row(name='alice',</w>",
    "row(r",
    "row(r=",
    "row(sequence=",
    "row(year=",
    "row(year=2013,</w>",
    "row).</w>",
    "row)</w>",
    "row,</w>",
    "row-",
    "row-wise,</w>",
    "row1</w>",
    "row2</w>",
    "row:</w>",
    "row</w>",
    "row]</w>",
    "row_",
    "rowmatrix(rows)</w>",
    "rowmatrix</w>",
    "rown</w>",
    "rows)</w>",
    "rows,</w>",
    "rows.</w>",
    "rows</w>",
    "rowspan</w>",
    "rowsper",
    "rs",
    "rule",
    "rule</w>",
    "rules</w>",
    "run",
    "runs</w>",
    "runtime",
    "runtimeerror",
    "runtimeerror(\"",
    "runtimeerror(\"no</w>",
    "rvals</w>",
    "rvalues</w>",
    "ry",
    "ryp",
    "s",
    "s\"\"\"</w>",
    "s\").",
    "s\").fetchall()</w>",
    "s\")</w>",
    "s\",</w>",
    "s\":</w>",
    "s\"</w>",
    "s')).collect()</w>",
    "s').",
    "s')</w>",
    "s',</w>",
    "s'.</w>",
    "s':</w>",
    "s'</w>",
    "s'])</w>",
    "s']</w>",
    "s(",
    "s()):</w>",
    "s())</w>",
    "s()</w>",
    "s([1,</w>",
    "s([a,</w>",
    "s(cls):</w>",
    "s(pd.series(",
    "s(self,</w>",
    "s)",
    "s)):</w>",
    "s))</w>",
    "s),</w>",
    "s).",
    "s).</w>",
    "s):</w>",
    "s);</w>",
    "s)</w>",
    "s)]</w>",
    "s,",
    "s,</w>",
    "s-",
    "s.",
    "s.\"\"\"</w>",
    "s.\")</w>",
    "s.\"</w>",
    "s.</w>",
    "s._",
    "s.__",
    "s.append(",
    "s.append(0)</w>",
    "s.collect()</w>",
    "s.copy()</w>",
    "s.get_",
    "s.r",
    "s.unstack(",
    "s1,</w>",
    "s1</w>",
    "s2</w>",
    "s2],</w>",
    "s:",
    "s:</w>",
    "s;</w>",
    "s</w>",
    "s=",
    "s=100,</w>",
    "s=2)]</w>",
    "s=4,</w>",
    "s=[",
    "s=[['cobra',</w>",
    "s=[[0,</w>",
    "s=[[1,</w>",
    "s=none):</w>",
    "s=none,</w>",
    "s=true</w>",
    "s=u'",
    "s[",
    "s[\"__",
    "s[-1",
    "s[-1]</w>",
    "s[0",
    "s[0].",
    "s[0]</w>",
    "s[1:",
    "s[1:]:</w>",
    "s[i",
    "s[i],</w>",
    "s[i].",
    "s[i]</w>",
    "s[k",
    "s[k]</w>",
    "s[level",
    "s[level],</w>",
    "s]",
    "s]</w>",
    "s_",
    "s_safe(",
    "s_to_",
    "s_to_ns_",
    "safari</w>",
    "safe",
    "safe(",
    "safe_",
    "sale",
    "sale</w>",
    "sales.",
    "same",
    "same-",
    "same</w>",
    "same_",
    "samp_",
    "samp_log_",
    "sample",
    "sample(",
    "sample,</w>",
    "sample:</w>",
    "sample</w>",
    "sample[\"a",
    "sample[\"a\"])</w>",
    "sample[\"b",
    "sample[\"b\"])</w>",
    "sample]</w>",
    "samples)</w>",
    "sampling",
    "sampling</w>",
    "samplingratio",
    "samplingratio:</w>",
    "saniti",
    "sanitize_",
    "satis",
    "satisfy</w>",
    "saturday,</w>",
    "save",
    "save(",
    "save</w>",
    "save_",
    "save_reduce(",
    "saveastext",
    "saveastextfile(",
    "saves</w>",
    "saving</w>",
    "say</w>",
    "sc",
    "sc(),</w>",
    "sc,</w>",
    "sc.",
    "sc._",
    "sc._gateway.",
    "sc._j",
    "sc._jsc,</w>",
    "sc._jsc.sc(),</w>",
    "sc._jvm.",
    "sc._jvm.functions.",
    "sc._jvm.org.apache.",
    "sc._jvm.org.apache.spark.mllib.",
    "sc._jvm.org.apache.spark.sql.",
    "sc._jvm.python",
    "sc.defaultparallelis",
    "sc.defaultparallelism</w>",
    "sc.parallelize",
    "sc.parallelize(",
    "sc.parallelize([",
    "sc.parallelize(range(",
    "sc.parallelize(range(1000),</w>",
    "sc.parallelize(tmp",
    "sc.parallelize(tmp).sort",
    "sc.sc(),</w>",
    "sc.text",
    "sc:</w>",
    "scal",
    "scala</w>",
    "scalar",
    "scalar)</w>",
    "scalar</w>",
    "scalars.</w>",
    "scalars</w>",
    "scale",
    "scale)</w>",
    "scale,</w>",
    "sccallsite",
    "sccallsitesyn",
    "sch",
    "sche",
    "sched",
    "schema",
    "schema(",
    "schema(sdf_",
    "schema):</w>",
    "schema,</w>",
    "schema:</w>",
    "schema</w>",
    "schema=",
    "schema=none,</w>",
    "schema=schema,</w>",
    "schema_",
    "schema_of_",
    "sco",
    "scope",
    "scope_",
    "score",
    "score_",
    "scott</w>",
    "scrip",
    "sdf.",
    "sdf.schema</w>",
    "sdf.writestream.",
    "sdf.writestream.foreach",
    "sdf</w>",
    "sdf_",
    "sdf_schema</w>",
    "se",
    "se',</w>",
    "se,</w>",
    "se:</w>",
    "se</w>",
    "se_",
    "se_time</w>",
    "search",
    "sec",
    "second",
    "seconds.</w>",
    "seconds</w>",
    "sect</w>",
    "section</w>",
    "sed</w>",
    "see",
    "see</w>",
    "see_",
    "see_also",
    "seealso",
    "seealso::</w>",
    "seed",
    "seed:</w>",
    "seed=",
    "seed=2)</w>",
    "seed=42)</w>",
    "seek",
    "seen</w>",
    "segmen",
    "segment_",
    "segment_id",
    "segment_ids.append(0)</w>",
    "sel",
    "selec",
    "select(",
    "select</w>",
    "select_",
    "selected_",
    "selection",
    "selection</w>",
    "selection_context(self):</w>",
    "selections</w>",
    "self",
    "self))</w>",
    "self),</w>",
    "self).",
    "self).summary)</w>",
    "self):</w>",
    "self)</w>",
    "self,</w>",
    "self.",
    "self.</w>",
    "self._",
    "self.__class__.__",
    "self.__class__.__name__)</w>",
    "self._apply_",
    "self._apply_axis_propertie",
    "self._apply_axis_properties(",
    "self._axis_",
    "self._axis_order",
    "self._box_",
    "self._can_",
    "self._can_hold_",
    "self._compute",
    "self._compute_",
    "self._compute_logit(",
    "self._con",
    "self._consolidate_inplace()</w>",
    "self._constructor",
    "self._constructor(",
    "self._constructor(new_",
    "self._constructor(new_data).__finalize__(self)</w>",
    "self._constructor(res_",
    "self._constructor(res_values,</w>",
    "self._data.",
    "self._data</w>",
    "self._df(self._j",
    "self._df(self._jreader.",
    "self._file.",
    "self._get_",
    "self._get_attribute",
    "self._get_attributes_",
    "self._get_attributes_dict()</w>",
    "self._get_axis(",
    "self._get_axis(axis)</w>",
    "self._get_axis_",
    "self._get_axis_name(",
    "self._get_axis_name(axis)</w>",
    "self._get_axis_number(",
    "self._get_axis_number(axis)</w>",
    "self._get_block_manager_",
    "self._get_block_manager_axis(axis)</w>",
    "self._get_numeric_data()</w>",
    "self._j",
    "self._java_",
    "self._java_matrix_",
    "self._java_matrix_wrapper.",
    "self._jc.",
    "self._jcatalog.",
    "self._jconf.",
    "self._jconf</w>",
    "self._jdf.",
    "self._jrdd_de",
    "self._jrdd_deserializer)</w>",
    "self._jssc.",
    "self._jwrite.",
    "self._jwrite</w>",
    "self._na_value</w>",
    "self._next_",
    "self._prep_",
    "self._sc.",
    "self._sc.defaultparallelism</w>",
    "self._selected_",
    "self._selected_obj</w>",
    "self._selection</w>",
    "self._set_",
    "self._set_opt",
    "self._set_opts(",
    "self._spark._",
    "self._stat_axis_number</w>",
    "self._step</w>",
    "self._try_coerce_",
    "self._try_coerce_arg",
    "self._update_",
    "self.apply(lambda</w>",
    "self.asi8</w>",
    "self.astype(object)</w>",
    "self.attrs.",
    "self.axes[",
    "self.axis</w>",
    "self.blocks:</w>",
    "self.blocks</w>",
    "self.c",
    "self.config.",
    "self.config.d_",
    "self.config.d_model",
    "self.config.d_model]</w>",
    "self.copy()</w>",
    "self.ct",
    "self.ctx._",
    "self.ctx._jvm.",
    "self.ctx._jvm.pythonrdd.",
    "self.data.",
    "self.data</w>",
    "self.dtype.",
    "self.dtype.na_value</w>",
    "self.dtype</w>",
    "self.encoding</w>",
    "self.freq</w>",
    "self.get_",
    "self.getnumpartitions()</w>",
    "self.grouper,</w>",
    "self.grouper.",
    "self.grouper.group_info</w>",
    "self.grouper</w>",
    "self.hassummary:</w>",
    "self.init_",
    "self.init_weight(",
    "self.is_",
    "self.make_block",
    "self.map(lambda</w>",
    "self.mappartition",
    "self.mappartitions(",
    "self.metadata</w>",
    "self.mgr_",
    "self.mode(",
    "self.n",
    "self.name</w>",
    "self.ndim</w>",
    "self.obj.",
    "self.obj</w>",
    "self.out_",
    "self.out_layer",
    "self.out_layers[0].",
    "self.p",
    "self.plot_",
    "self.plot_obj.",
    "self.plot_obj.date_axis_info</w>",
    "self.save_reduce(",
    "self.serializer.",
    "self.serializer.dump_",
    "self.set_",
    "self.set_ato",
    "self.sparksession.",
    "self.sql_ct",
    "self.sql_ctx)</w>",
    "self.start.",
    "self.table.",
    "self.validate_",
    "self.values)</w>",
    "self.values.",
    "self.values</w>",
    "self.values[",
    "self.values_",
    "self.weekday</w>",
    "self</w>",
    "self[",
    "self]</w>",
    "self}</w>",
    "sem",
    "seman",
    "semanti",
    "semantics</w>",
    "sen",
    "sen</w>",
    "sense</w>",
    "sensiti",
    "sensitive</w>",
    "sent</w>",
    "senten",
    "sentence</w>",
    "sentinel</w>",
    "sep",
    "sep)</w>",
    "sep,</w>",
    "sep:</w>",
    "sep=",
    "sep=sep,</w>",
    "separated</w>",
    "seq",
    "seq(",
    "seq_",
    "seq_length</w>",
    "seqop,</w>",
    "sequen",
    "sequence",
    "sequence</w>",
    "sequence=",
    "sequencefile</w>",
    "sequences,</w>",
    "ser",
    "seri",
    "seriali",
    "serializ",
    "serialization_",
    "serialize",
    "serialize</w>",
    "serialized</w>",
    "serializer",
    "serializer(pickle",
    "serializer(pickleserializer",
    "serializer)</w>",
    "serializer.",
    "serializer</w>",
    "serie",
    "series",
    "series(",
    "series):</w>",
    "series)</w>",
    "series,</w>",
    "series.",
    "series.array</w>",
    "series.to_numpy</w>",
    "series.value_counts</w>",
    "series:</w>",
    "series</w>",
    "series_",
    "series_convert_timestamp",
    "series_index,</w>",
    "server",
    "server</w>",
    "server_",
    "servi",
    "service</w>",
    "service_",
    "service_ac",
    "session",
    "set",
    "set(",
    "set,</w>",
    "set.</w>",
    "set</w>",
    "set_",
    "set_name",
    "set_xlabel",
    "setop(other)</w>",
    "sets</w>",
    "setting</w>",
    "setup",
    "setupfunc</w>",
    "several</w>",
    "sh",
    "shape",
    "shape(",
    "shape))</w>",
    "shape):</w>",
    "shape)</w>",
    "shape,</w>",
    "shape</w>",
    "shape=",
    "shape[",
    "shape[axis]</w>",
    "share",
    "shared</w>",
    "sharey</w>",
    "sharing</w>",
    "shif",
    "shift",
    "shift(self,</w>",
    "shift</w>",
    "shift_",
    "shifted</w>",
    "shin",
    "ship</w>",
    "sho",
    "shor",
    "short",
    "shoul",
    "should</w>",
    "should_",
    "show",
    "show(",
    "show()</w>",
    "show(truncate",
    "show_",
    "show_dimension",
    "shows</w>",
    "shte",
    "shu",
    "shuffle",
    "shuffle.",
    "si",
    "side",
    "side,</w>",
    "side</w>",
    "sider.</w>",
    "sider</w>",
    "sidered</w>",
    "sidering</w>",
    "sif",
    "sig",
    "sigma</w>",
    "signal",
    "signature</w>",
    "silen",
    "silently</w>",
    "simil",
    "similar</w>",
    "simple",
    "simple_",
    "simple_new",
    "sin",
    "since</w>",
    "sine</w>",
    "sing",
    "sing.</w>",
    "sing</w>",
    "single",
    "single-",
    "single</w>",
    "single_",
    "single_aligner</w>",
    "singlequote",
    "singul",
    "singular</w>",
    "sink</w>",
    "sion",
    "sion</w>",
    "sion_",
    "sionad",
    "sional</w>",
    "sionarray</w>",
    "sis,</w>",
    "sis</w>",
    "sist</w>",
    "sisten",
    "sisting</w>",
    "sists</w>",
    "site",
    "siti",
    "sity</w>",
    "sity_",
    "size",
    "size(",
    "size(data)=",
    "size)</w>",
    "size,</w>",
    "size</w>",
    "size=",
    "size=self.",
    "size_",
    "size_qu",
    "sizes)</w>",
    "sk",
    "skinn",
    "skip",
    "skipna",
    "skipna)</w>",
    "skipna=",
    "skipna=skipna)</w>",
    "skipna=true,</w>",
    "skipped.</w>",
    "skipped</w>",
    "skipping</w>",
    "sl",
    "slashescaping",
    "slc</w>",
    "sli",
    "slibs.",
    "slice",
    "slice(",
    "slice(none",
    "slice):</w>",
    "slice</w>",
    "slice_",
    "slicer",
    "slicer=none,</w>",
    "slicer]</w>",
    "slicers</w>",
    "slicing</w>",
    "slided",
    "slideduration",
    "slo",
    "slot",
    "small",
    "smalle",
    "smaller)</w>",
    "smaller,</w>",
    "smallest</w>",
    "smax</w>",
    "smin</w>",
    "snap",
    "so",
    "so</w>",
    "sock",
    "sock.",
    "sock_",
    "sock_info</w>",
    "socket(sock_",
    "socket(sock_info,</w>",
    "sof",
    "soft",
    "softmax(",
    "softmax</w>",
    "softmax_",
    "sol",
    "sole</w>",
    "solidate:</w>",
    "solidate_",
    "solidate_inplace()</w>",
    "solve</w>",
    "some</w>",
    "somename",
    "something</w>",
    "son",
    "son</w>",
    "sor",
    "sort",
    "sort',</w>",
    "sort)</w>",
    "sort</w>",
    "sort=",
    "sort=sort)</w>",
    "sort_",
    "sort_values(",
    "sort_values</w>",
    "sorted(",
    "sorted(input(",
    "sorted(input(glob",
    "sorted(input(glob(",
    "sorted(sc.",
    "sorted</w>",
    "sortwithin",
    "sortwithinpartition",
    "sour",
    "source",
    "source</w>",
    "sox</w>",
    "sp",
    "sp_",
    "sp_index.",
    "space",
    "spacing",
    "spacing,</w>",
    "spam</w>",
    "span",
    "span.",
    "span</w>",
    "spar",
    "spark",
    "spark-",
    "spark.",
    "spark._",
    "spark.cre",
    "spark.createdataframe([",
    "spark.createdataframe([('",
    "spark.createdataframe([('199",
    "spark.createdataframe([('1997",
    "spark.createdataframe([('1997-02-28</w>",
    "spark.createdataframe([('2015",
    "spark.createdataframe([('2015-04",
    "spark.createdataframe([('2015-04-08",
    "spark.createdataframe([('2015-04-08',)],</w>",
    "spark.createdataframe([('abc",
    "spark.createdataframe([('abcd",
    "spark.createdataframe([('abcd',)],</w>",
    "spark.ml",
    "spark.ml.",
    "spark.mllib.",
    "spark.sql",
    "spark.sql(\"select</w>",
    "spark.sql.",
    "spark.sql.columnnameofcorruptrecord</w>",
    "spark.sql.javastringlength",
    "spark.sql.parquet.",
    "spark.sql.parquet.mergeschema</w>",
    "spark.sql.source",
    "spark.sql.sources.",
    "spark.sql.sources.default</w>",
    "spark.sql</w>",
    "spark.udf.",
    "spark.udf.register",
    "spark.udf.registerjavafunction(</w>",
    "spark</w>",
    "spark_",
    "spark_ho",
    "spark_home",
    "spark_type</w>",
    "sparkcontex",
    "sparkcontext._",
    "sparkcontext._acti",
    "sparkcontext._active_",
    "sparkcontext._active_spark_",
    "sparkcontext._active_spark_context</w>",
    "sparkfiles.",
    "sparksession",
    "sparksession.",
    "sparse",
    "sparse(",
    "sparse</w>",
    "sparse_",
    "sparsearray</w>",
    "sparseindex</w>",
    "sparseseries</w>",
    "sparsevector",
    "sparsevector(2,</w>",
    "sparsevector(4,</w>",
    "sparsif",
    "spartitioning",
    "spe",
    "spear",
    "spearman",
    "spearman\")</w>",
    "spec",
    "spec</w>",
    "speci",
    "special",
    "special</w>",
    "speciali",
    "specialized</w>",
    "specially</w>",
    "specif",
    "specifi",
    "specific</w>",
    "specification</w>",
    "specifie",
    "specifies</w>",
    "specifying</w>",
    "specimen_",
    "spect.",
    "speed",
    "speed</w>",
    "sper",
    "spill",
    "spill()</w>",
    "split",
    "splitting</w>",
    "sq",
    "sq.is",
    "sq.isactive</w>",
    "sql",
    "sql,</w>",
    "sql.",
    "sql.</w>",
    "sql</w>",
    "sql]</w>",
    "sql_",
    "sql_ct",
    "sqlal",
    "sqlalchemy.",
    "sqlalchemy.engine.",
    "sqlalchemy</w>",
    "sqlcontext.",
    "sqlcontext.createdataframe(",
    "sqlcontext.createdataframe(rdd,</w>",
    "sqlcontext.get",
    "sqlcontext.getconf(\"spark.sql.shuffle.partition",
    "sqlcontext</w>",
    "sqlite",
    "sqlite3</w>",
    "sqr",
    "sqrt(",
    "sqrt</w>",
    "squared_",
    "squared_distance(",
    "sque",
    "squee",
    "squeeze",
    "squeeze()</w>",
    "squeeze</w>",
    "squeezed</w>",
    "squeezing</w>",
    "sr",
    "src_",
    "ss",
    "ss-",
    "ss.",
    "ss</w>",
    "ss_",
    "ssc.",
    "sscanned</w>",
    "ssed</w>",
    "ssentially</w>",
    "sses</w>",
    "ssi",
    "ssing",
    "ssing</w>",
    "ssion",
    "sskey",
    "ssor",
    "sspilled</w>",
    "sstab",
    "ssubplot</w>",
    "st",
    "st(3,</w>",
    "st:</w>",
    "st</w>",
    "st_",
    "stack",
    "stack(",
    "stack</w>",
    "stacked</w>",
    "stacker.",
    "stacker.get_",
    "stacker_",
    "stacklevel=",
    "stacklevel=2)</w>",
    "stackover",
    "stage.get",
    "stage</w>",
    "stall</w>",
    "stalled",
    "stalled</w>",
    "stamp",
    "stan",
    "stance(",
    "stand",
    "standard</w>",
    "standardi",
    "standardize_",
    "standardize_jira_re",
    "standardize_jira_ref(</w>",
    "star",
    "start",
    "start),</w>",
    "start,</w>",
    "start.",
    "start:",
    "start</w>",
    "start=",
    "start='",
    "start='1</w>",
    "start='2017",
    "start='2017-01-01',</w>",
    "start=start,</w>",
    "start_",
    "start_date.",
    "start_date</w>",
    "start_logit</w>",
    "start_logit=",
    "start_position",
    "start_position</w>",
    "start_s</w>",
    "start_slice</w>",
    "startpo",
    "startpos,</w>",
    "startswith",
    "stat",
    "stat_",
    "stat_axis_number</w>",
    "stata_",
    "stata_epoch.",
    "state",
    "state(",
    "state</w>",
    "state['step",
    "state['step']</w>",
    "state_",
    "state_dict,</w>",
    "state_dict.",
    "state_dict:</w>",
    "state_dict</w>",
    "statisti",
    "statistic</w>",
    "statistics.",
    "statistics.corr",
    "statistics.corr(x,</w>",
    "statistics</w>",
    "stats()</w>",
    "stats.",
    "stats.count()</w>",
    "status</w>",
    "std",
    "std()</w>",
    "std)</w>",
    "std</w>",
    "stdev",
    "stdev()</w>",
    "ste",
    "sted</w>",
    "sted_",
    "step",
    "step)</w>",
    "step:</w>",
    "step</w>",
    "step=",
    "step_",
    "step_o</w>",
    "step_s</w>",
    "steps</w>",
    "stimate</w>",
    "stimation</w>",
    "stimator",
    "stly</w>",
    "stm",
    "sto",
    "stop",
    "stop=",
    "stopiteration(",
    "stopword",
    "storage",
    "storage_",
    "storagelevel",
    "storagelevel(",
    "storagelevel)</w>",
    "storagelevel.",
    "store</w>",
    "str",
    "str(",
    "str(e",
    "str(e):</w>",
    "str(x)</w>",
    "str),</w>",
    "str):</w>",
    "str)</w>",
    "str,</w>",
    "str32</w>",
    "str:</w>",
    "str</w>",
    "strap</w>",
    "strapping</w>",
    "strate",
    "stre",
    "stream",
    "stream</w>",
    "streaming",
    "streamingcontext</w>",
    "streamingquery",
    "streamingquerymanager</w>",
    "strf",
    "strftime",
    "strftime</w>",
    "stri",
    "strictly</w>",
    "string",
    "string\")</w>",
    "string())</w>",
    "string)</w>",
    "string,</w>",
    "string.",
    "string.\")</w>",
    "string</w>",
    "string_",
    "stringi",
    "stringio",
    "strings),</w>",
    "strings,</w>",
    "strings.</w>",
    "strings</w>",
    "stringtype",
    "stringtype(),</w>",
    "string}</w>",
    "strip",
    "strip())</w>",
    "strip().",
    "strip()</w>",
    "stripping</w>",
    "strl",
    "strl</w>",
    "stro",
    "strp",
    "struc",
    "struct",
    "struct.",
    "struct.pack",
    "structfield(",
    "structfield(\"f1\",</w>",
    "structfield</w>",
    "struction",
    "structtype(",
    "structtype([",
    "structtype([structfield(\"f1\",</w>",
    "structtype(list(",
    "structtype(list(structfield(",
    "structtype(list(structfield(a,",
    "structtype):</w>",
    "structtype</w>",
    "stu",
    "stub",
    "stubnames</w>",
    "stuff</w>",
    "sty",
    "style",
    "style</w>",
    "style_",
    "style_dict</w>",
    "styles,</w>",
    "su",
    "sub",
    "sub-",
    "sub-classes</w>",
    "sub:</w>",
    "sub_",
    "subclass</w>",
    "submit</w>",
    "submodel",
    "subplot",
    "subplot(2,</w>",
    "subplots=true</w>",
    "subsequen",
    "subsequent</w>",
    "subset,</w>",
    "subset</w>",
    "subset=",
    "subset=subset,</w>",
    "subtract</w>",
    "subtracting</w>",
    "suc",
    "succe",
    "success",
    "success</w>",
    "sufficien",
    "suffix",
    "suffix</w>",
    "suffix=",
    "suffixes.</w>",
    "suffixes</w>",
    "sug",
    "sugge",
    "suitable</w>",
    "sum",
    "sum(",
    "sum()</w>",
    "sum(axis,</w>",
    "sum_",
    "sum_udf(v",
    "sume</w>",
    "sumed</w>",
    "summar",
    "summari",
    "summarized</w>",
    "summary",
    "summary)</w>",
    "summary</w>",
    "sup",
    "super",
    "super(",
    "supplied,</w>",
    "supplied</w>",
    "suppor",
    "support,</w>",
    "support</w>",
    "supported.</w>",
    "supported</w>",
    "supports</w>",
    "suppress</w>",
    "sure",
    "sure</w>",
    "sure_",
    "sures</w>",
    "sus</w>",
    "sv",
    "svd_",
    "svd_model.",
    "sw",
    "swap</w>",
    "swith",
    "sy",
    "symmetri",
    "symmetric</w>",
    "symmetric_",
    "syn",
    "synon",
    "synony",
    "syntax</w>",
    "sys.",
    "sys.max",
    "syste",
    "s}</w>",
    "t",
    "t\",</w>",
    "t\"</w>",
    "t',</w>",
    "t'</w>",
    "t(",
    "t()</w>",
    "t(self,</w>",
    "t))</w>",
    "t):</w>",
    "t)</w>",
    "t,</w>",
    "t-",
    "t.",
    "t.</w>",
    "t._",
    "t1,</w>",
    "t1</w>",
    "t2",
    "t:</w>",
    "t</w>",
    "t=",
    "t]</w>",
    "t_",
    "ta",
    "ta,</w>",
    "ta.",
    "ta</w>",
    "tab",
    "table",
    "table(",
    "table,</w>",
    "table.",
    "table</w>",
    "table_",
    "table_name</w>",
    "tables.",
    "tables</w>",
    "tadata</w>",
    "tag",
    "tage</w>",
    "tags</w>",
    "tail",
    "tail()</w>",
    "tain</w>",
    "take",
    "take(",
    "take([0,</w>",
    "take</w>",
    "take_",
    "take_smaller)</w>",
    "take_smaller,</w>",
    "takeable",
    "tal",
    "tal.</w>",
    "tal</w>",
    "target=",
    "task",
    "tation\"</w>",
    "tation.</w>",
    "tation</w>",
    "tations</w>",
    "tattr",
    "tax</w>",
    "tb",
    "tbl",
    "tcp</w>",
    "td</w>",
    "tdelta</w>",
    "te",
    "te</w>",
    "ted(",
    "ted,</w>",
    "ted.</w>",
    "ted</w>",
    "tederror",
    "temp",
    "temp_",
    "temp_f</w>",
    "tempfile",
    "tempfile.",
    "tempfile.close()</w>",
    "tempfile.mk",
    "tempfile.mkd",
    "tempfile.mkdtemp",
    "tempfile.mkdtemp())</w>",
    "tempfile.mkdtemp(),</w>",
    "tempfile.name)</w>",
    "tempfile2.",
    "tempfile3.",
    "temporar",
    "ten",
    "ten</w>",
    "tensor",
    "tensorflow</w>",
    "tential</w>",
    "tentially</w>",
    "ter",
    "ter(",
    "ter</w>",
    "ter_",
    "term.",
    "term</w>",
    "term_type</w>",
    "terminal_",
    "terminated</w>",
    "termination()</w>",
    "terms</w>",
    "terror",
    "terror:</w>",
    "ters</w>",
    "test",
    "test)=",
    "test)=4)]</w>",
    "test_",
    "test_support</w>",
    "testfile.",
    "testfile.write(\"",
    "testfile:</w>",
    "tex",
    "text",
    "text</w>",
    "tf.",
    "tf.train.",
    "tf</w>",
    "tf_",
    "tf_to_",
    "tf_to_p",
    "tf_to_pt_",
    "tf_to_pt_map.",
    "tf_to_pt_map.update({</w>",
    "th",
    "th</w>",
    "than</w>",
    "that",
    "that's</w>",
    "that</w>",
    "the",
    "the-",
    "the</w>",
    "the_",
    "thei",
    "their</w>",
    "ther</w>",
    "there",
    "there's</w>",
    "therefore",
    "therefore,</w>",
    "therefore</w>",
    "these</w>",
    "they",
    "they</w>",
    "thin",
    "thing",
    "thing</w>",
    "think</w>",
    "this</w>",
    "tho",
    "thon",
    "thon</w>",
    "thon_",
    "thoni",
    "those</w>",
    "thou",
    "though</w>",
    "thr",
    "thre",
    "thread(",
    "thread(target=",
    "three</w>",
    "threshol",
    "threshold",
    "threshold(",
    "threshold(s).</w>",
    "threshold</w>",
    "throu",
    "through.</w>",
    "through</w>",
    "throw",
    "throw</w>",
    "thrown.</w>",
    "thrown</w>",
    "throws</w>",
    "thru</w>",
    "thus,</w>",
    "thus</w>",
    "ti",
    "tial",
    "tick",
    "ticks</w>",
    "tie",
    "tie_",
    "til</w>",
    "tile",
    "time",
    "time)</w>",
    "time,</w>",
    "time-",
    "time.",
    "time</w>",
    "time_",
    "timedel",
    "timedelta",
    "timedelta(",
    "timedelta(days=",
    "timedelta64",
    "timedelta64[ns]</w>",
    "timedelta</w>",
    "timedeltaarray</w>",
    "timeout,</w>",
    "timeout</w>",
    "times,</w>",
    "timeseries.",
    "timeseries.html</w>",
    "timeseries</w>",
    "timestamp",
    "timestamp(",
    "timestamp</w>",
    "timestampformat:</w>",
    "timestampformat=",
    "timestampformat=none,</w>",
    "timestampformat=timestamp",
    "timestampformat=timestampformat,</w>",
    "timestamps,</w>",
    "timestamps.</w>",
    "timestamps</w>",
    "timestamptype())</w>",
    "timestamptype</w>",
    "timez",
    "timezone",
    "timezone)</w>",
    "timezone-",
    "timezone-naive</w>",
    "timezone</w>",
    "timi",
    "timplemen",
    "tin",
    "tin</w>",
    "ting",
    "ting.",
    "ting</w>",
    "tiny",
    "tinyint</w>",
    "tion",
    "tion</w>",
    "tionerror",
    "tit",
    "title",
    "tly</w>",
    "tmp",
    "tmpfile.",
    "tmpfile.name,</w>",
    "to",
    "to-",
    "to:</w>",
    "to</w>",
    "to_",
    "to_conc",
    "to_datetime(",
    "to_datetime</w>",
    "to_dense",
    "to_frame",
    "to_frame()</w>",
    "to_native_types(self,</w>",
    "to_numeric</w>",
    "to_numpy",
    "to_numpy</w>",
    "to_off",
    "to_replace,</w>",
    "to_sql",
    "to_timedelta</w>",
    "to_upper",
    "toarray(),</w>",
    "toarray()</w>",
    "todebug",
    "todo",
    "todo(",
    "todo:</w>",
    "together.</w>",
    "together</w>",
    "tok_",
    "tok_end_position</w>",
    "tok_s_to_ns_",
    "token",
    "token_to_",
    "token_to_orig_",
    "tokeni",
    "tokenized</w>",
    "tokenizer,</w>",
    "tokenizer.",
    "tokenizer.tokeni",
    "tokenizer.tokenize(example.",
    "tokenizer</w>",
    "tokens)</w>",
    "tokens,</w>",
    "tokens.</w>",
    "tokens.append(",
    "tokens.append(\"[sep",
    "tokens.append(\"[sep]",
    "tokens.append(\"[sep]\")</w>",
    "tokens:</w>",
    "tokens</w>",
    "tokens_",
    "tokens_a,</w>",
    "tokens_a</w>",
    "tokens_b,</w>",
    "tokens_b</w>",
    "toleran",
    "tolerance)</w>",
    "tolerance</w>",
    "tolocal",
    "tolocalmatrix()</w>",
    "tom</w>",
    "ton",
    "toni",
    "too</w>",
    "tools.",
    "top",
    "top,</w>",
    "top-level</w>",
    "top:</w>",
    "topi",
    "topic",
    "topics</w>",
    "tor",
    "tor</w>",
    "torch.",
    "torch.from_",
    "tot_",
    "total",
    "total</w>",
    "toy</w>",
    "tp",
    "tp</w>",
    "tr",
    "tra:</w>",
    "tra</w>",
    "tra=none):</w>",
    "tra_",
    "trace",
    "traceback</w>",
    "tract('str",
    "tract</w>",
    "tract_",
    "tracted</w>",
    "tracting</w>",
    "train",
    "train.",
    "trainclassifier",
    "trainclassifier(sc.parallelize(",
    "trainclassifier(sc.parallelize(data),</w>",
    "trained</w>",
    "training",
    "trainingsummary</w>",
    "trainratio",
    "trainvalidation",
    "trainvalidationsplit",
    "tral</w>",
    "tran",
    "trans",
    "transfer</w>",
    "transfo",
    "transform",
    "transformfunction(self._",
    "transformfunction(self._sc,</w>",
    "transl",
    "transpo",
    "transpose",
    "transpose()</w>",
    "tre",
    "treat</w>",
    "treated</w>",
    "trecord</w>",
    "tree",
    "tree</w>",
    "treeaggregate",
    "treeen",
    "treeensem",
    "treeensemblemodel</w>",
    "treereduce(",
    "tri",
    "trie",
    "tries</w>",
    "trig",
    "trigger",
    "trigger</w>",
    "tro",
    "trol",
    "trol</w>",
    "true",
    "true),</w>",
    "true)</w>",
    "true)])</w>",
    "true,</w>",
    "true],</w>",
    "true_",
    "true_log_",
    "truncate",
    "truncate(",
    "truncate(before",
    "try",
    "try.",
    "try:</w>",
    "try</w>",
    "try_",
    "try_coerce_",
    "try_coerce_args</w>",
    "ts)</w>",
    "ts,</w>",
    "ts.",
    "ts.</w>",
    "ts:</w>",
    "ts</w>",
    "tslibs.",
    "tt</w>",
    "tter</w>",
    "tto",
    "tu",
    "tuple",
    "tuple(",
    "tuple)):</w>",
    "tuple))</w>",
    "tuple):</w>",
    "tuple)</w>",
    "tuple,</w>",
    "tuple</w>",
    "tuplei",
    "tupleize_cols</w>",
    "tuples,</w>",
    "ture</w>",
    "turing</w>",
    "turn",
    "turns</w>",
    "tuvalu</w>",
    "tv</w>",
    "tw",
    "twe",
    "twi",
    "twice</w>",
    "two",
    "two-dimensional</w>",
    "two</w>",
    "tx",
    "txt",
    "txt\")</w>",
    "ty",
    "ty</w>",
    "ty_",
    "typ",
    "typ=",
    "type",
    "type(",
    "type()).",
    "type())</w>",
    "type(),</w>",
    "type([",
    "type(dt)</w>",
    "type(obj",
    "type(other",
    "type(self",
    "type(self)))</w>",
    "type),</w>",
    "type):</w>",
    "type)</w>",
    "type,</w>",
    "type.",
    "type.grouped_",
    "type:</w>",
    "type</w>",
    "type=",
    "type_",
    "type_id",
    "type_ids:</w>",
    "typeerror",
    "typeerror(\"",
    "typeerror(\"path</w>",
    "typeerror(\"schema</w>",
    "typeerror(\"unsupported</w>",
    "typeerror('",
    "typeerror(</w>",
    "typeerror(msg)</w>",
    "typeerror):</w>",
    "typeerror,</w>",
    "typeerror:</w>",
    "types(",
    "types)</w>",
    "types,</w>",
    "types.",
    "types</w>",
    "typi",
    "typically</w>",
    "typs)</w>",
    "typs</w>",
    "tz",
    "tz):</w>",
    "tz)</w>",
    "tz,</w>",
    "tz-",
    "tz-aware</w>",
    "tz-naive</w>",
    "tz.",
    "tz:</w>",
    "tz</w>",
    "tz=",
    "tz=tz)</w>",
    "tz=tz,</w>",
    "tz]</w>",
    "tz_",
    "tz_dtype(",
    "tz_locali",
    "tz_localize(",
    "tz_localize(tz)</w>",
    "u",
    "u\"",
    "u\",</w>",
    "u'",
    "u'alice",
    "u'bob",
    "u(0.0,</w>",
    "u,</w>",
    "u.",
    "u:</w>",
    "u</w>",
    "uc",
    "uce",
    "uce</w>",
    "uced</w>",
    "uch</w>",
    "ucing</w>",
    "uclide",
    "uct</w>",
    "uction</w>",
    "ud",
    "udf",
    "udf(\"",
    "udf(v",
    "udf(v):</w>",
    "udf,</w>",
    "udf.",
    "udf</w>",
    "udfs</w>",
    "ue",
    "ue',</w>",
    "ue</w>",
    "uence</w>",
    "ught</w>",
    "uid</w>",
    "uint",
    "uint8,</w>",
    "ul",
    "ul</w>",
    "ule",
    "ule</w>",
    "uled</w>",
    "ules</w>",
    "uli",
    "ull",
    "ull\",</w>",
    "ull</w>",
    "ult</w>",
    "um",
    "um</w>",
    "um_",
    "uman</w>",
    "ume</w>",
    "umen",
    "umn",
    "ump</w>",
    "umul",
    "un",
    "un,</w>",
    "unbounded</w>",
    "unbox</w>",
    "unc",
    "under",
    "underlying</w>",
    "unfit_",
    "unfit_mgr_",
    "unfit_val_",
    "uni",
    "unicode",
    "uniform",
    "union",
    "union[",
    "union_categorical",
    "union_categoricals([a,</w>",
    "unique",
    "unique()</w>",
    "unique,</w>",
    "unique</w>",
    "unique_",
    "unit,</w>",
    "unit=",
    "unit=unit,</w>",
    "unix",
    "unix'</w>",
    "unknown</w>",
    "unless</w>",
    "unlimited</w>",
    "unmatched</w>",
    "unper",
    "unpickled_",
    "unpickled_df</w>",
    "unpickling</w>",
    "unquoted</w>",
    "unsig",
    "unsigned</w>",
    "unstack(",
    "unstack</w>",
    "unstacked</w>",
    "unstacker_",
    "unsupported</w>",
    "until</w>",
    "unused</w>",
    "up",
    "up</w>",
    "upcast</w>",
    "upcast_",
    "upcast_classe",
    "upcast_classes:</w>",
    "upcasting",
    "upcasting);</w>",
    "update",
    "update(",
    "update(new_",
    "update({</w>",
    "update_",
    "updating</w>",
    "uple",
    "upli",
    "upper",
    "upperbound</w>",
    "upsample</w>",
    "upsampling</w>",
    "upy",
    "ur",
    "uration",
    "uration,</w>",
    "uration:</w>",
    "uring</w>",
    "url",
    "urn",
    "us",
    "us',</w>",
    "us,</w>",
    "us</w>",
    "usage",
    "usage</w>",
    "use",
    "use.</w>",
    "use</w>",
    "use_",
    "use_b",
    "use_bq",
    "use_bqstorage_",
    "usecols'</w>",
    "used</w>",
    "used_",
    "used_categories</w>",
    "used_memory</w>",
    "useful</w>",
    "user",
    "user-",
    "user-defined</w>",
    "user-supplied</w>",
    "user</w>",
    "user_",
    "user_agen",
    "users</w>",
    "uses</w>",
    "ush",
    "using</w>",
    "ussi",
    "ust",
    "ust</w>",
    "ust_",
    "usted",
    "usted.</w>",
    "usted</w>",
    "ustif",
    "usto",
    "usu",
    "usually</w>",
    "ut",
    "ut</w>",
    "utative</w>",
    "utc",
    "utc')</w>",
    "utc</w>",
    "ute",
    "ute</w>",
    "uted</w>",
    "utf",
    "utf-",
    "utf-16",
    "utf-8",
    "utf-8\")</w>",
    "utf-8')</w>",
    "utf-8.</w>",
    "utf8",
    "utf8_",
    "utf8de",
    "utf8deserializer",
    "uth",
    "uti",
    "util",
    "util</w>",
    "utils.",
    "utils.to",
    "utils</w>",
    "ution",
    "ution.",
    "ution</w>",
    "uto",
    "utoff_",
    "utral</w>",
    "utu",
    "uture",
    "uu",
    "v",
    "v\",</w>",
    "v)",
    "v)</w>",
    "v)]})</w>",
    "v,</w>",
    "v.",
    "v1_",
    "v2</w>",
    "v2_",
    "v:</w>",
    "v</w>",
    "v=",
    "v_",
    "val",
    "val</w>",
    "val=",
    "val_",
    "valen",
    "valid</w>",
    "valid_",
    "validate",
    "validate_",
    "validate_bool_",
    "validate_bool_kwarg(",
    "validate_bool_kwarg(inplace,</w>",
    "validate_indice",
    "validate_indices([1,</w>",
    "vals)</w>",
    "vals,</w>",
    "vals.",
    "vals</w>",
    "valu",
    "valu</w>",
    "value",
    "value\")</w>",
    "value(",
    "value()</w>",
    "value):</w>",
    "value)</w>",
    "value,</w>",
    "value.",
    "value1</w>",
    "value2</w>",
    "value:</w>",
    "value</w>",
    "value=",
    "value_",
    "value_counts</w>",
    "valueerror",
    "valueerror(\"",
    "valueerror(\"invalid</w>",
    "valueerror(\"only</w>",
    "valueerror('",
    "valueerror('invalid</w>",
    "valueerror(</w>",
    "valueerror(msg)</w>",
    "valueerror(msg.format(",
    "valueerror):</w>",
    "valueerror:...</w>",
    "valueerror:</w>",
    "values",
    "values(",
    "values()</w>",
    "values(lambda</w>",
    "values))</w>",
    "values).",
    "values):</w>",
    "values)</w>",
    "values)]</w>",
    "values,</w>",
    "values.",
    "values.copy()</w>",
    "values.dtype)</w>",
    "values.dtype</w>",
    "values.ndim</w>",
    "values:</w>",
    "values</w>",
    "values[",
    "values]</w>",
    "values_",
    "values_from_",
    "value}}</w>",
    "var",
    "vari",
    "variable",
    "variable</w>",
    "variables:</w>",
    "variables</w>",
    "varian",
    "variance",
    "variance</w>",
    "various</w>",
    "vars</w>",
    "ve",
    "ve(",
    "ve(\".</w>",
    "ve)</w>",
    "ve,</w>",
    "ve.</w>",
    "ve</w>",
    "ve_",
    "vec",
    "vecontext</w>",
    "vector",
    "vector):</w>",
    "vector_",
    "vectorcolumnsto",
    "vectorcolumnstoml",
    "vectori",
    "vectorized</w>",
    "vectorrdd(sc,</w>",
    "vectors.",
    "vectors.dense",
    "vectors.dense([",
    "vectors.sparse",
    "vectors</w>",
    "ved,</w>",
    "ved.</w>",
    "ved</w>",
    "ved_",
    "ved_archive_",
    "vely.</w>",
    "ven",
    "ven,</w>",
    "ven</w>",
    "ver",
    "ver,</w>",
    "ver</w>",
    "veral</w>",
    "verbo",
    "verbose",
    "verbose</w>",
    "verbose_",
    "verbose_log",
    "verbose_logging",
    "verbosity</w>",
    "verif",
    "verifier",
    "verifier(",
    "verify",
    "verify_",
    "verify_acceptable_types(obj)</w>",
    "verify_integ",
    "verify_value</w>",
    "vers",
    "vers</w>",
    "version",
    "version()</w>",
    "version.</w>",
    "version</w>",
    "version_",
    "version_2_",
    "version_2_with_",
    "version_2_with_negative:</w>",
    "versionad",
    "versionadded::</w>",
    "versionchan",
    "versionchanged::</w>",
    "versions</w>",
    "versus</w>",
    "verti",
    "vertical",
    "vertical</w>",
    "very",
    "very</w>",
    "ves</w>",
    "vi",
    "via</w>",
    "vid",
    "vie",
    "view",
    "view(",
    "view('",
    "view('i8')</w>",
    "view(dtype)</w>",
    "ving.</w>",
    "ving</w>",
    "vir",
    "virgini",
    "virginica',</w>",
    "visi",
    "visible",
    "vl",
    "vline",
    "vmax)</w>",
    "vmax</w>",
    "vmin</w>",
    "vo",
    "voc",
    "vocab_",
    "vocab_file</w>",
    "vol",
    "volume</w>",
    "vs.</w>",
    "vs</w>",
    "w",
    "w.",
    "w</w>",
    "w_",
    "wait</w>",
    "wal",
    "walks</w>",
    "wan",
    "want</w>",
    "warn",
    "warning",
    "warning')</w>",
    "warning)</w>",
    "warning,</w>",
    "warning::</w>",
    "warning:</w>",
    "warnings.",
    "warnings.warn",
    "warnings.warn(\"",
    "warnings</w>",
    "was</w>",
    "water",
    "watermark</w>",
    "way",
    "ways</w>",
    "we",
    "we'll</w>",
    "we're</w>",
    "weak",
    "webserver</w>",
    "wee",
    "week",
    "weekday()</w>",
    "weekday</w>",
    "weekmask</w>",
    "weig",
    "weight",
    "weight(",
    "weight.",
    "weight_",
    "weight_i,</w>",
    "weight_i</w>",
    "weights)</w>",
    "weights:</w>",
    "weights_",
    "wel",
    "well",
    "well.</w>",
    "wer",
    "wer</w>",
    "wh",
    "what</w>",
    "whate",
    "whatever</w>",
    "whe",
    "when(df.",
    "when(df.age</w>",
    "when</w>",
    "whene",
    "whenever</w>",
    "where",
    "where(",
    "where,</w>",
    "where</w>",
    "where=",
    "where=where,</w>",
    "whether</w>",
    "whi",
    "which</w>",
    "whip</w>",
    "white",
    "whitesp",
    "whitespace:</w>",
    "whitespace</w>",
    "who",
    "wholetext",
    "wholetextfile",
    "whose</w>",
    "wi",
    "wid",
    "wide",
    "wide_to_",
    "wide_to_long",
    "wide_to_long(df,</w>",
    "width",
    "width,</w>",
    "width</w>",
    "widths</w>",
    "wik",
    "wiki</w>",
    "wikipedi",
    "wikipedia.",
    "will</w>",
    "windo",
    "window",
    "window(",
    "window,</w>",
    "window.",
    "window.un",
    "window.unbounded",
    "window.unboundedpreceding</w>",
    "window;</w>",
    "windowd",
    "windowduration,</w>",
    "windowduration:</w>",
    "windows</w>",
    "windowspec</w>",
    "wing",
    "wing</w>",
    "wings</w>",
    "wip",
    "wise",
    "wise,</w>",
    "wise.</w>",
    "wise</w>",
    "with",
    "with.</w>",
    "with</w>",
    "with_",
    "with_con",
    "within</w>",
    "without</w>",
    "withreplacemen",
    "withreplacement,</w>",
    "withreplacement_",
    "wn</w>",
    "won't</w>",
    "wor",
    "word",
    "word_",
    "word_em",
    "word_emb.",
    "wordpiece</w>",
    "words,</w>",
    "work",
    "work</w>",
    "workaround</w>",
    "works</w>",
    "would</w>",
    "wrap",
    "wrap_",
    "wrapped</w>",
    "wrapper",
    "wrapper.",
    "wrapper.__",
    "wrapper.__name__</w>",
    "wri",
    "writ",
    "write",
    "write(",
    "write(\"",
    "write('</w>",
    "write.",
    "write</w>",
    "write_",
    "writestream.",
    "written",
    "written</w>",
    "wron",
    "wrong</w>",
    "ws</w>",
    "ww",
    "www.",
    "www.w",
    "www.w3.",
    "www.w3.org</w>",
    "x",
    "x',</w>",
    "x))</w>",
    "x):</w>",
    "x)</w>",
    "x,</w>",
    "x-",
    "x-axis</w>",
    "x.",
    "x.stats()</w>",
    "x00</w>",
    "x01",
    "x01'</w>",
    "x:</w>",
    "x</w>",
    "x=x,</w>",
    "x]</w>",
    "x_",
    "xarray.",
    "xarray</w>",
    "xaxis.set_",
    "xff</w>",
    "xi</w>",
    "xl",
    "xlabel",
    "xlabelsize=",
    "xls",
    "xlw",
    "xnull:</w>",
    "xrot</w>",
    "xrot=",
    "xs</w>",
    "xtick",
    "xticks</w>",
    "xx",
    "xxx</w>",
    "xxxx",
    "xy",
    "xy[1]</w>",
    "y",
    "y\",</w>",
    "y',</w>",
    "y(",
    "y):</w>",
    "y)</w>",
    "y,</w>",
    "y-",
    "y-axis</w>",
    "y.",
    "y.</w>",
    "y:</w>",
    "y</w>",
    "y=",
    "y=y,</w>",
    "y_",
    "yanke",
    "yankees</w>",
    "yaxis,</w>",
    "ye",
    "year",
    "year\").",
    "year\").pivo",
    "year=",
    "year_",
    "yearfirst</w>",
    "years</w>",
    "yed</w>",
    "yel",
    "yellow",
    "yi</w>",
    "yiel",
    "yield</w>",
    "yields</w>",
    "ying</w>",
    "ylabel",
    "ylabelsize=",
    "yo",
    "yond</w>",
    "you",
    "you</w>",
    "yy",
    "yyyy",
    "yyyy-",
    "yyyy-mm",
    "yyyy-mm-",
    "yyyy-mm-dd",
    "yyyy-mm-dd't",
    "yyyy-mm-dd't'h",
    "yyyy-mm-dd't'hh:mm:ss.",
    "yyyy-mm-dd't'hh:mm:ss.ss",
    "yyyy-mm-dd't'hh:mm:ss.sss",
    "yyyy-mm-dd't'hh:mm:ss.sssxxx</w>",
    "yyyy-mm-dd</w>",
    "z",
    "z',</w>",
    "z'</w>",
    "z2',</w>",
    "z</w>",
    "zation</w>",
    "ze",
    "ze(",
    "ze()</w>",
    "ze(example.",
    "ze</w>",
    "ze_",
    "ze__",
    "ze_cols</w>",
    "zed</w>",
    "zer",
    "zer,</w>",
    "zer.",
    "zer</w>",
    "zero",
    "zero-",
    "zero</w>",
    "zero_",
    "zerovalue,</w>",
    "zerovalue</w>",
    "zing</w>",
    "zip",
    "zip(",
    "zips</w>",
    "zone.</w>",
    "zone</w>",
    "{",
    "{\"",
    "{\"a",
    "{\"a\":</w>",
    "{'",
    "{'auto",
    "{'auto',</w>",
    "{'back",
    "{'backfill',</w>",
    "{'col",
    "{'col1':</w>",
    "{'fail",
    "{'fail',</w>",
    "{'index',</w>",
    "{'infer",
    "{'infer',</w>",
    "{'items',</w>",
    "{'ix',</w>",
    "{'keep",
    "{'keep',</w>",
    "{'key",
    "{'key':</w>",
    "{'row",
    "{'row1':</w>",
    "{0",
    "{0</w>",
    "{0}</w>",
    "{1:</w>",
    "{2",
    "{</w>",
    "{column</w>",
    "{column_",
    "{column_name:</w>",
    "{dtype",
    "{field</w>",
    "{group</w>",
    "{index</w>",
    "{k:</w>",
    "{name}</w>",
    "{none,</w>",
    "{series,</w>",
    "{typ",
    "{type",
    "{{",
    "{}",
    "|",
    "}",
    "}\")</w>",
    "}\".format(",
    "}\"</w>",
    "}'.format(",
    "}'</w>",
    "})",
    "})._is_",
    "})._is_homogene",
    "})._is_homogeneous_type</w>",
    "})</w>",
    "},",
    "},</w>",
    "}.",
    "}.</w>",
    "}:</w>",
    "}</w>",
    "}]",
    "}]\".format(</w>",
    "}]</w>",
    "}{",
    "}}",
    "}}</w>",
    "~",
    "§",
    "¯",
    "°",
    "²",
    "³",
    "´",
    "á",
    "â",
    "å",
    "è",
    "é",
    "ê",
    "í",
    "ò",
    "ó",
    "ô",
    "ü",
    "ā",
    "ă",
    "đ",
    "ţ",
    "ū",
    "ǎ",
    "ˈ",
    "ˌ",
    "˘",
    "α",
    "δ",
    "λ",
    "ạ",
    "ấ",
    "ầ",
    "ẫ",
    "ắ",
    "ể",
    "ệ",
    "ỗ",
    "ụ",
    "ủ",
    "ỷ",
    "–",
    "‘",
    "’",
    "“",
    "”",
    "•",
    "…",
    "℃",
    "→",
    "∈",
    "−",
    "✓",
    "✗",
    "。",
    "一",
    "三",
    "上",
    "下",
    "不",
    "两",
    "严",
    "个",
    "中",
    "串",
    "为",
    "举",
    "之",
    "也",
    "买",
    "了",
    "二",
    "于",
    "交",
    "亮",
    "今",
    "从",
    "代",
    "以",
    "们",
    "件",
    "任",
    "份",
    "会",
    "传",
    "但",
    "位",
    "低",
    "体",
    "何",
    "作",
    "使",
    "例",
    "供",
    "依",
    "保",
    "信",
    "修",
    "值",
    "偏",
    "储",
    "充",
    "入",
    "全",
    "共",
    "关",
    "其",
    "具",
    "内",
    "再",
    "况",
    "凭",
    "出",
    "函",
    "分",
    "列",
    "则",
    "创",
    "初",
    "删",
    "到",
    "制",
    "前",
    "功",
    "务",
    "动",
    "包",
    "化",
    "单",
    "卖",
    "南",
    "占",
    "印",
    "即",
    "原",
    "去",
    "参",
    "叉",
    "反",
    "发",
    "取",
    "口",
    "只",
    "可",
    "台",
    "右",
    "号",
    "合",
    "名",
    "后",
    "向",
    "否",
    "和",
    "品",
    "响",
    "唐",
    "商",
    "器",
    "回",
    "因",
    "在",
    "地",
    "址",
    "均",
    "块",
    "型",
    "填",
    "处",
    "复",
    "外",
    "多",
    "大",
    "天",
    "失",
    "夹",
    "奇",
    "好",
    "如",
    "始",
    "字",
    "存",
    "它",
    "安",
    "完",
    "定",
    "宝",
    "实",
    "家",
    "容",
    "密",
    "对",
    "导",
    "将",
    "就",
    "层",
    "展",
    "属",
    "左",
    "差",
    "帐",
    "常",
    "平",
    "并",
    "序",
    "应",
    "店",
    "建",
    "异",
    "式",
    "弹",
    "录",
    "径",
    "待",
    "必",
    "性",
    "息",
    "情",
    "意",
    "愿",
    "成",
    "我",
    "或",
    "户",
    "所",
    "打",
    "执",
    "批",
    "找",
    "报",
    "指",
    "按",
    "换",
    "据",
    "授",
    "排",
    "接",
    "推",
    "提",
    "撤",
    "操",
    "收",
    "改",
    "放",
    "散",
    "数",
    "文",
    "新",
    "方",
    "无",
    "日",
    "时",
    "易",
    "是",
    "普",
    "替",
    "最",
    "有",
    "服",
    "期",
    "机",
    "权",
    "来",
    "构",
    "果",
    "查",
    "标",
    "校",
    "根",
    "格",
    "档",
    "检",
    "模",
    "次",
    "正",
    "此",
    "步",
    "段",
    "气",
    "求",
    "法",
    "波",
    "流",
    "测",
    "浏",
    "消",
    "淘",
    "源",
    "漂",
    "点",
    "然",
    "照",
    "物",
    "独",
    "率",
    "理",
    "生",
    "用",
    "由",
    "的",
    "目",
    "直",
    "真",
    "知",
    "码",
    "示",
    "空",
    "站",
    "章",
    "端",
    "符",
    "第",
    "算",
    "管",
    "类",
    "组",
    "结",
    "绝",
    "继",
    "续",
    "编",
    "置",
    "群",
    "考",
    "者",
    "能",
    "航",
    "节",
    "获",
    "藏",
    "行",
    "表",
    "装",
    "要",
    "见",
    "规",
    "视",
    "览",
    "解",
    "计",
    "订",
    "认",
    "讯",
    "记",
    "设",
    "证",
    "译",
    "话",
    "该",
    "误",
    "请",
    "调",
    "象",
    "败",
    "账",
    "货",
    "资",
    "赖",
    "起",
    "跟",
    "路",
    "转",
    "载",
    "过",
    "返",
    "这",
    "进",
    "远",
    "迭",
    "送",
    "递",
    "通",
    "造",
    "遇",
    "道",
    "都",
    "配",
    "里",
    "重",
    "量",
    "铺",
    "销",
    "错",
    "键",
    "间",
    "除",
    "隔",
    "集",
    "需",
    "面",
    "项",
    "顺",
    "须",
    "频",
    "题",
    "验",
    "黑",
    "默",
    "가",
    "결",
    "과",
    "리",
    "보",
    "빌",
    "원",
    "입",
    "정",
    "처",
    "팝",
    "회",
    "（",
    "）",
    "，",
    "：",
    "；"
  ]
}